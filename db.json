{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/JavaScript/JSONP 原理.md","hash":"b7feb285c13214e9d598f9f7f4d10a8a6b673f1f","modified":1619516574671},{"_id":"source/categories/index.md","hash":"28e51fc263326a2fb5457d5b5f1343fce9192c89","modified":1619523554993},{"_id":"source/tags/index.md","hash":"43a7c7c4ae44a91a4272eab6b6a2adf7857e613a","modified":1619523556496},{"_id":"source/_posts/CSS/响应式设计.md","hash":"fd9c998e67cae60120761ffbd7e50ec3885b530b","modified":1619576635570},{"_id":"source/_posts/杂项/pm2 常用命令.md","hash":"c7ede6efb3f14031d757d90ed9b05b8f7a26c792","modified":1619524767247},{"_id":"source/_posts/杂项/nginx 常用命令.md","hash":"77fec763a583643791193b0ca14e0da9f49f6326","modified":1619516589659},{"_id":"source/_posts/浏览器/Performance API.md","hash":"c134d56b2630c10b71426aa3e51f192cd237d99d","modified":1619516595644},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1619509671182},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1619509671182},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1619509671182},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1619509671182},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1619509671183},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1619509671185},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1619509671185},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1619509671185},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1619509671185},{"_id":"themes/pure/_config.yml","hash":"8dd3cf27faab5f850b81d862f7eacb79dbdc9d97","modified":1619522220904},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1619509671197},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1619509671195},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1619509671195},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1619509671196},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1619509671196},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1619509671196},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1619509671196},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1619509671196},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1619509671196},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1619509671196},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1619509671196},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1619509671196},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1619509671196},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1619509671197},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1619509671209},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1619509671181},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1619509671182},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1619509671211},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1619509671182},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1619509671183},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1619509671183},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1619509671183},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1619509671183},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1619509671183},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1619509671184},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1619509671184},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1619509671184},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1619509671184},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1619509671185},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1619509671186},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1619509671186},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1619509671186},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1619509671186},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1619509671186},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1619509671186},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1619509671186},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1619509671187},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1619509671187},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1619509671187},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1619509671187},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1619509671187},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1619509671187},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"748856e6266dbdbc14e97bde5cd42ab9be49e5b4","modified":1619524191479},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1619509671188},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1619509671188},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1619509671189},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1619509671190},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1619509671190},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1619509671192},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1619509671192},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1619509671192},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1619509671192},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1619509671192},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1619509671192},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1619509671192},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1619509671193},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1619509671193},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1619509671193},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1619509671194},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1619509671194},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1619509671194},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1619509671194},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1619509671194},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1619509671195},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1619509671195},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1619509671195},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1619509671195},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1619509671211},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1619509671211},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1619509671212},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1619509671213},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1619509671214},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1619509671213},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1619509671214},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1619509671214},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1619509671214},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1619509671214},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1619509671188},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1619509671188},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1619509671188},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1619509671188},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1619509671188},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1619509671188},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1619509671189},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1619509671189},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1619509671189},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1619509671189},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1619509671189},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1619509671189},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1619509671190},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1619509671191},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1619509671190},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1619509671191},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1619509671191},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1619509671191},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1619509671191},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1619509671191},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1619509671191},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1619509671191},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1619509671192},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1619509671213},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1619509671213},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1619509671214},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1619509671213},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1619509671214},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1619509671199},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1619509671198},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1619509671200},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1619509671198},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1619509671200},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1619509671215},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1619509671216},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1619509671217},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1619509671210},{"_id":"themes/pure/source/css/style.css","hash":"246f384dea8ae85cea01556a59fad819ea48a6d6","modified":1619525187516},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1619509671212},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1619509671217},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1619509671208},{"_id":"public/content.json","hash":"30061cad10cc7e6ae34d3f705a773376aa69bc4e","modified":1619577285080},{"_id":"public/archives/index.html","hash":"8df8afd7c5d050889cf599a5099c221382fd1b20","modified":1619577285080},{"_id":"public/archives/2021/index.html","hash":"00e09be4ba85cd29b8b7ea9b69017064fb3d848f","modified":1619577285080},{"_id":"public/archives/2021/04/index.html","hash":"861819b0468482e7f59908064865a46ec231acd1","modified":1619577285080},{"_id":"public/categories/CSS/index.html","hash":"4b699e04a7485baf6ef1fc59910e60f74f4d3fc3","modified":1619577285080},{"_id":"public/categories/JavaScript/index.html","hash":"e323fa51cbdc1d3d85274c7ab51edf8b026e004a","modified":1619577285080},{"_id":"public/categories/浏览器/index.html","hash":"01ead71cb0d5b284775421a248b39eee4083aa35","modified":1619577285080},{"_id":"public/categories/杂项/index.html","hash":"32f4295e950be1aec7a9fdab2f881aa60091bdd8","modified":1619577285080},{"_id":"public/tags/CSS/index.html","hash":"d67f964103a72f693b904ec089b31db20c5d32ab","modified":1619577285080},{"_id":"public/tags/JSONP/index.html","hash":"ae4235ac1dca8d70030ba12cbb1ffa9f7b8d7b64","modified":1619577285080},{"_id":"public/tags/同源策略/index.html","hash":"70d3513c080e3e181eaf3d15a98d81ff5819798b","modified":1619577285080},{"_id":"public/tags/Performance/index.html","hash":"2485c2c851f853f9b3b86837c8c9d2c5f0732070","modified":1619577285080},{"_id":"public/tags/性能/index.html","hash":"96ad02019c5340066101d61ad808602af943754c","modified":1619577285080},{"_id":"public/tags/server/index.html","hash":"ab09c5f0bb7c5414e5edb42bb5ad72112a78e601","modified":1619577285080},{"_id":"public/tags/nginx/index.html","hash":"541b6d654472a8654cb2dcce70dfbbbe5b82b08c","modified":1619577285080},{"_id":"public/tags/node/index.html","hash":"200cf3345ff3410ed5d3fb32de835dabec663f3b","modified":1619577285080},{"_id":"public/categories/index.html","hash":"b434a0bb810390b4435971354997db49228a56bc","modified":1619577285080},{"_id":"public/tags/index.html","hash":"f1ee9def4ab8a678bdfefd1c7e61cf50eae6b5e0","modified":1619577285080},{"_id":"public/2021/04/27/JavaScript/JSONP 原理/index.html","hash":"99029ab40d7821e6175bd55a0ac558b33fb5e403","modified":1619577285080},{"_id":"public/2021/04/27/CSS/响应式设计/index.html","hash":"30e01629cc45e0f08843b196adbe32829a726c30","modified":1619576495541},{"_id":"public/2021/04/27/杂项/nginx 常用命令/index.html","hash":"fad2dadf325c44220b95fa474f176baa7b0bacb5","modified":1619577285080},{"_id":"public/2021/04/27/浏览器/Performance API/index.html","hash":"2af824e1e46c1c4c640f3040a6795ef1b5b2beeb","modified":1619577285080},{"_id":"public/2021/04/27/杂项/pm2 常用命令/index.html","hash":"6a27bc7d6dfc3510c44aebeee123c0063c3fd931","modified":1619577285080},{"_id":"public/index.html","hash":"9fcadb4967a866d93ba19fd44fd22c53e300aba5","modified":1619577285080},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1619517981057},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1619517981057},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1619517981057},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1619517981057},{"_id":"public/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1619517981057},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1619517981057},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1619517981057},{"_id":"public/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1619517981057},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1619517981057},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1619517981057},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1619517981057},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1619517981057},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1619517981057},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1619517981057},{"_id":"public/fonts/README.html","hash":"3b9daaf126709e3bbce5926e15d599f1fe877921","modified":1619517981057},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1619517981057},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1619517981057},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1619517981057},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1619517981057},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1619517981057},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1619517981057},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1619517981057},{"_id":"public/css/style.css","hash":"246f384dea8ae85cea01556a59fad819ea48a6d6","modified":1619525193495},{"_id":"source/_posts/JavaScript/JavaScript 属性描述符.md","hash":"eae5b58dceee9f471fe14c02362ee8d68c92caa3","modified":1619525032318},{"_id":"source/_posts/JavaScript/this 指向.md","hash":"bc12847f4492d93631adae673ee709fed4cccf97","modified":1619524909476},{"_id":"public/2021/04/27/JavaScript/JavaScript 属性描述符/index.html","hash":"7835092deb5c353de08a2c7919d5927ab9d183a9","modified":1619577285080},{"_id":"public/2021/04/27/JavaScript/this 指向/index.html","hash":"bea2433326fa723e3dbeca71dc76da7e2e09025d","modified":1619577285080},{"_id":"public/tags/JavaScript-基础/index.html","hash":"532ca586f210cd37d6246a255e16c6b3d35638d3","modified":1619577285080},{"_id":"public/tags/JavaScript-原理/index.html","hash":"d817970595a8888423d18b33076d88c788ea64e2","modified":1619577285080},{"_id":"source/.DS_Store","hash":"9d86508aa5f2d4c5384875afd112952371499b80","modified":1619575652000},{"_id":"source/_posts/.DS_Store","hash":"085e168d3245c0d83a54a9c1c8a7751f0f8a2448","modified":1619575695000},{"_id":"source/_posts/D3.js/可视化交互.md","hash":"a4c1953b729094c90faa842d8e114dc214f625e4","modified":1619577074932},{"_id":"source/_posts/D3.js/update、enter 与 exit.md","hash":"16c368bcf3b2fcd8f6d3de8c58815d9e90e1949a","modified":1619577089128},{"_id":"source/_posts/D3.js/坐标轴.md","hash":"31aafbee114482f847f5aa56fca8d755a3ee0031","modified":1619577085108},{"_id":"source/_posts/D3.js/工具函数.md","hash":"2c4d99898e06e6fbe065989ec4c21760d300fd6c","modified":1619577058469},{"_id":"source/_posts/D3.js/布局.md","hash":"2db970761e17dcc4e5ba20abb92571a69a7c3631","modified":1619577046361},{"_id":"source/_posts/D3.js/形状.md","hash":"dbb0df0428b9dfb75b5707a34f215bd9b32b7ca1","modified":1619577077703},{"_id":"source/_posts/D3.js/技巧篇.md","hash":"4f8750c09b09386233a91e76ba529b4fa7184cea","modified":1619577072302},{"_id":"source/_posts/D3.js/比例尺.md","hash":"27934deff2806d50b94e756aa48f0cf9237e0b8b","modified":1619576974781},{"_id":"source/_posts/D3.js/过渡.md","hash":"70afc9467f493a587871be0524bc5a505392f08e","modified":1619577064335},{"_id":"source/_posts/D3.js/选择集.md","hash":"ab194b3ea24b340c439a8e2e06b207fa8b35beea","modified":1619577081315},{"_id":"source/_posts/SVG/SVG 基础元素.md","hash":"e7d51ea59a1ff0b53cf37a7a6d4f0cb9f56bedea","modified":1619577255251},{"_id":"source/_posts/SVG/viewBox 与 preserveAspectRatio.md","hash":"f97e96458f7d5ee520421c6815cd505697f96f8d","modified":1619577268817},{"_id":"source/_posts/Sass/基础语法.md","hash":"7bc8a55d4fb53127a5006688dd6464014b857bad","modified":1619575557322},{"_id":"source/_posts/Sass/技巧篇.md","hash":"2e5804faa0d506f6a30d9cbc70f57e858a7d66cc","modified":1619575557323},{"_id":"public/archives/page/2/index.html","hash":"08ac5700dd9d10eaecd47226fa6c404035e4e45d","modified":1619577285080},{"_id":"public/archives/page/3/index.html","hash":"6accf5af312728d78e8f0eebcb15c25919362efa","modified":1619577285080},{"_id":"public/archives/2021/page/2/index.html","hash":"665655de8a7228bc87253f6ed2ff8b389082a620","modified":1619577285080},{"_id":"public/archives/2021/page/3/index.html","hash":"5f242bf1a63a7a890a7cf2a7d1e7329a7c8f8ad6","modified":1619577285080},{"_id":"public/archives/2021/04/page/3/index.html","hash":"02724c68473157a05fc7166e3c04009fc7819a1e","modified":1619576495541},{"_id":"public/2021/04/28/D3.js/update、enter 与 exit/index.html","hash":"81fe7579e6d2ad0c0a32b13c77361b3ea4dd35b9","modified":1619576866888},{"_id":"public/2021/04/28/D3.js/技巧篇/index.html","hash":"19fa11ce0f54b8fd526468887eae340738038f4f","modified":1619576866888},{"_id":"public/2021/04/28/D3.js/选择集/index.html","hash":"9ba8dde531c2624f38a5b126eaa830c7355c80a5","modified":1619576866888},{"_id":"public/2021/04/28/Sass/技巧篇/index.html","hash":"88b7cd602b4c68463b10d74304b343a9f133e465","modified":1619576495541},{"_id":"public/2021/04/28/SVG/SVG 基础元素/index.html","hash":"82ca839b55cd47adb95f923a7e65e1230a8febe7","modified":1619576866888},{"_id":"public/2021/04/28/SVG/viewBox 与 preserveAspectRatio/index.html","hash":"0469278b955a00accc45b9d0fc256d4816cb5354","modified":1619576866888},{"_id":"public/2021/04/28/Sass/基础语法/index.html","hash":"1b50074fc2e95f8ffe4bce957ee451f58ce1ed15","modified":1619576495541},{"_id":"public/2021/04/28/D3.js/比例尺/index.html","hash":"6e5d5d787b847d84e2ffc77e5d34934f15f6071f","modified":1619576866888},{"_id":"public/2021/04/28/D3.js/过渡/index.html","hash":"4753b85a3ba4d64a0181326999166e78326acef0","modified":1619576866888},{"_id":"public/2021/04/28/D3.js/坐标轴/index.html","hash":"e340ab686b340324ee05e4d10b66b28fb97a3079","modified":1619576866888},{"_id":"public/2021/04/28/D3.js/工具函数/index.html","hash":"efdf3c7f88c22cb7dd5a7aeab387ba976a81cd4a","modified":1619576866888},{"_id":"public/2021/04/28/D3.js/形状/index.html","hash":"13c7d41bd971c97eddec475b86434e2c26c7f6b0","modified":1619576866888},{"_id":"public/2021/04/28/D3.js/布局/index.html","hash":"f9b8d203f9f4bb4d7628405ef08a9fbf1035bb60","modified":1619576866888},{"_id":"public/2021/04/28/D3.js/可视化交互/index.html","hash":"b3386eb4879b2c0ef89ab05be5756f4d20f1cf36","modified":1619576866888},{"_id":"public/archives/2021/04/page/2/index.html","hash":"ba47c050524b95bd19b337aea8a2a3bfc17d084c","modified":1619576866888},{"_id":"public/page/2/index.html","hash":"5e4aefb45c7889358866c64b0489058eb241a1c2","modified":1619577285080},{"_id":"public/page/3/index.html","hash":"f24ed5a02136555a0df981ff7f5ab6ce4bfe633b","modified":1619577285080},{"_id":"source/_posts/Sass/Sass 技巧篇.md","hash":"de6d0c4f7c123eb170a4dc5c12c32c82fc1d585a","modified":1619576944442},{"_id":"source/_posts/Sass/Sass 基础语法.md","hash":"38e1427185dd5a799d1c8d92cfb75649bf8aa440","modified":1619576939023},{"_id":"public/archives/2021/03/index.html","hash":"100124df5c1c17f442f510c259ea03d6ed791e66","modified":1619577285080},{"_id":"public/categories/CSS/Sass/index.html","hash":"9aeba169f36342a7adddc5fa882ffa2a88d11dad","modified":1619577285080},{"_id":"public/tags/Sass/index.html","hash":"306fbfa077c5dc3a9f0adab911058f1bd77375e8","modified":1619577285080},{"_id":"public/2021/03/24/Sass/Sass 基础语法/index.html","hash":"81386e011d827e1a03743fcd7e919f81d867c3db","modified":1619577285080},{"_id":"public/2021/03/24/Sass/Sass 技巧篇/index.html","hash":"1075c5f73f328f356a7c773b0b97f07b33a6f386","modified":1619577285080},{"_id":"public/2021/03/22/CSS/响应式设计/index.html","hash":"43fd5bf0423928fa1b663299ae0a22867ebbfd36","modified":1619577285080},{"_id":"public/archives/2021/03/page/2/index.html","hash":"2ba57e54eafe109f979941e9ec006ae14eb3f123","modified":1619577285080},{"_id":"public/categories/SVG/index.html","hash":"ff6a08768abe13fef8c32530e346fe8ec27015b8","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/可视化交互/index.html","hash":"7d587fb30334b0e79db95195b3da4353eae0beb7","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/工具函数/index.html","hash":"096406935675fe81589f85c4e3610ee515b3db3d","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/坐标轴/index.html","hash":"a2ab6ec1314a2f71954bbc90e71d80f7e0607866","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/update、enter 与 exit/index.html","hash":"c27f0294fad5bbc07228c47c2e77e40091bb8876","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/形状/index.html","hash":"bd7d9e91a01d267c53708a9729ddf3864e4541e2","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/布局/index.html","hash":"3b14bfed52d590c9b3a587a1f80d8c02d6998b30","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/技巧篇/index.html","hash":"707420de91c9dadc56de309d86f18f6286ad6b6f","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/比例尺/index.html","hash":"baba645fa715a9204515a12f0cc1857c115e0942","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/选择集/index.html","hash":"bb47f60cb89f687e28d8aa7b5486a1c04fc657ab","modified":1619577285080},{"_id":"public/2021/03/24/D3.js/过渡/index.html","hash":"4f877ed4d990824bf0d02afd483888a453b98ab9","modified":1619577285080},{"_id":"public/2021/03/24/SVG/SVG 基础元素/index.html","hash":"704f47ab9980f99a766e3b79b5f454bb7f9f7d2f","modified":1619577285080},{"_id":"public/2021/03/24/SVG/viewBox 与 preserveAspectRatio/index.html","hash":"bd10492a61c1e7310a221fb5a3899b2ed1557dc4","modified":1619577285080},{"_id":"public/categories/D3-js/index.html","hash":"c6f1f3f510af1aadf55d06ed1af4ce0dd95dbec4","modified":1619577285080},{"_id":"public/tags/D3-js/index.html","hash":"7448c16ba8608ae6773d784b1c3e3ffe67280e19","modified":1619577285080},{"_id":"public/tags/SVG/index.html","hash":"a8811b7b4fb77f4c714a42519898afa76e597d2a","modified":1619577285080}],"Category":[{"name":"CSS","_id":"cknzv6w1r0004k96rdmqy7j2w"},{"name":"JavaScript","_id":"cknzv6w1v0009k96r0mfugf2t"},{"name":"浏览器","_id":"cknzv6w1w000dk96ran5f33h4"},{"name":"杂项","_id":"cknzv6w1x000gk96r8iesg836"},{"name":"Sass","parent":"cknzv6w1r0004k96rdmqy7j2w","_id":"cko0u90vi0003qd6r8qcj50o4"},{"name":"D3.js","_id":"cko0ubc1t0000rm6rg5z24oip"},{"name":"SVG","_id":"cko0uhcb7000qrm6r7f6b5zfw"}],"Data":[],"Page":[{"title":"分类","date":"2021-04-27T09:20:32.000Z","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-04-27 17:20:32\ncomments: false\n---\n","updated":"2021-04-27T11:39:14.993Z","path":"categories/index.html","_id":"cknzv6w1k0000k96r61664vna","layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2021-04-27T09:53:48.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-04-27 17:53:48\ntype: \"tags\"\ncomments: false\n---","updated":"2021-04-27T11:39:16.496Z","path":"tags/index.html","_id":"cknzv6w1p0002k96r1qh0a2wr","layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"响应式设计","date":"2021-03-21T16:00:00.000Z","_content":"\n# 响应式设计\n\n### 一、常见布局\n\n1. 固定布局：以像素为基本单位，只设计一套尺寸，不管浏览器宽度；\n2. 响应式布局：以像素为基本单位，设计多套尺寸，不同分辨率下页面样式有所不同；\n3. 弹性布局：以百分比作为基本单位，可以适应一定范围内的所有浏览器宽度，并以最佳的样式展示页面信息；\n4. 混合布局：混合像素、和百分比两种单位作为页面单位，和弹性布局类似；\n\n### 二. 响应式布局原理\n\n本质：页面中的整体布局不变化，各模块中的内容发生变化，主要有三种\n1. 压缩 ----  拉伸；\n2. 平铺 ----  换行；\n3. 添加 ----  删除；\n\n### 三. 实现响应式布局的方法\n\n1. CSS media query\n2. 流体布局 （百分比宽度）\n3. 弹性布局 （display：flex）\n4. javascript 操作 DOM","source":"_posts/CSS/响应式设计.md","raw":"---\ntitle: 响应式设计\ncategories: CSS # 添加博文分类\ntags: CSS # 添加博文标签\ndate: 2021-03-22\n---\n\n# 响应式设计\n\n### 一、常见布局\n\n1. 固定布局：以像素为基本单位，只设计一套尺寸，不管浏览器宽度；\n2. 响应式布局：以像素为基本单位，设计多套尺寸，不同分辨率下页面样式有所不同；\n3. 弹性布局：以百分比作为基本单位，可以适应一定范围内的所有浏览器宽度，并以最佳的样式展示页面信息；\n4. 混合布局：混合像素、和百分比两种单位作为页面单位，和弹性布局类似；\n\n### 二. 响应式布局原理\n\n本质：页面中的整体布局不变化，各模块中的内容发生变化，主要有三种\n1. 压缩 ----  拉伸；\n2. 平铺 ----  换行；\n3. 添加 ----  删除；\n\n### 三. 实现响应式布局的方法\n\n1. CSS media query\n2. 流体布局 （百分比宽度）\n3. 弹性布局 （display：flex）\n4. javascript 操作 DOM","slug":"CSS/响应式设计","published":1,"updated":"2021-04-28T02:23:55.570Z","_id":"cknzv6w1m0001k96rg3qx2ppq","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"响应式设计\"><a href=\"#响应式设计\" class=\"headerlink\" title=\"响应式设计\"></a>响应式设计</h1><h3 id=\"一、常见布局\"><a href=\"#一、常见布局\" class=\"headerlink\" title=\"一、常见布局\"></a>一、常见布局</h3><ol>\n<li>固定布局：以像素为基本单位，只设计一套尺寸，不管浏览器宽度；</li>\n<li>响应式布局：以像素为基本单位，设计多套尺寸，不同分辨率下页面样式有所不同；</li>\n<li>弹性布局：以百分比作为基本单位，可以适应一定范围内的所有浏览器宽度，并以最佳的样式展示页面信息；</li>\n<li>混合布局：混合像素、和百分比两种单位作为页面单位，和弹性布局类似；</li>\n</ol>\n<h3 id=\"二-响应式布局原理\"><a href=\"#二-响应式布局原理\" class=\"headerlink\" title=\"二. 响应式布局原理\"></a>二. 响应式布局原理</h3><p>本质：页面中的整体布局不变化，各模块中的内容发生变化，主要有三种</p>\n<ol>\n<li>压缩 —-  拉伸；</li>\n<li>平铺 —-  换行；</li>\n<li>添加 —-  删除；</li>\n</ol>\n<h3 id=\"三-实现响应式布局的方法\"><a href=\"#三-实现响应式布局的方法\" class=\"headerlink\" title=\"三. 实现响应式布局的方法\"></a>三. 实现响应式布局的方法</h3><ol>\n<li>CSS media query</li>\n<li>流体布局 （百分比宽度）</li>\n<li>弹性布局 （display：flex）</li>\n<li>javascript 操作 DOM</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"响应式设计\"><a href=\"#响应式设计\" class=\"headerlink\" title=\"响应式设计\"></a>响应式设计</h1><h3 id=\"一、常见布局\"><a href=\"#一、常见布局\" class=\"headerlink\" title=\"一、常见布局\"></a>一、常见布局</h3><ol>\n<li>固定布局：以像素为基本单位，只设计一套尺寸，不管浏览器宽度；</li>\n<li>响应式布局：以像素为基本单位，设计多套尺寸，不同分辨率下页面样式有所不同；</li>\n<li>弹性布局：以百分比作为基本单位，可以适应一定范围内的所有浏览器宽度，并以最佳的样式展示页面信息；</li>\n<li>混合布局：混合像素、和百分比两种单位作为页面单位，和弹性布局类似；</li>\n</ol>\n<h3 id=\"二-响应式布局原理\"><a href=\"#二-响应式布局原理\" class=\"headerlink\" title=\"二. 响应式布局原理\"></a>二. 响应式布局原理</h3><p>本质：页面中的整体布局不变化，各模块中的内容发生变化，主要有三种</p>\n<ol>\n<li>压缩 —-  拉伸；</li>\n<li>平铺 —-  换行；</li>\n<li>添加 —-  删除；</li>\n</ol>\n<h3 id=\"三-实现响应式布局的方法\"><a href=\"#三-实现响应式布局的方法\" class=\"headerlink\" title=\"三. 实现响应式布局的方法\"></a>三. 实现响应式布局的方法</h3><ol>\n<li>CSS media query</li>\n<li>流体布局 （百分比宽度）</li>\n<li>弹性布局 （display：flex）</li>\n<li>javascript 操作 DOM</li>\n</ol>\n"},{"title":"JSONP 原理","date":"2021-04-27T09:24:48.000Z","_content":"\n# JSONP 原理\n\n由于同源策略的原因，浏览器限制了 Ajax 请求必须在同一个源中，即**统一协议、域名和端口号**\n\n> 说明： 跨域的 Ajax 请求可以发出，但是必须在服务器端响应头中设置  Access-Control-Allow-Origin：“*”属性，否则在跨域请求的预检请求阶段（`OPTIONS`请求会携带 `Access-Control-Request-Method`、`Access-Control-Request-Headers`等头信息），如果后端不允许此次预检请求，则不会再发送后面真正的请求\n\n\n以下标签可以跨域：\n* <script src=\"...\"></script>\n* <img src=\"...\" />\n* <link rel=\"stylesheet\" href=\"...\">\n* <iframe></iframe>\n\n**JSONP （JSON with Padding）**\n说明: 在浏览器端的 js 中声明回调函数之后，通过 `<script>` 标签向服务器跨域请求数据，服务器将请求结果包裹在回调函数中，并动态执行回调函数。\n安全性： 是一种不安全的通信方式。 `<script>` 会执行跨域服务器中返回的任意 js 代码，只适用于可信的第三方脚本。\n优点： 配置简单，支持旧版浏览器，但不安全，不支持 POST\n\n\n示例：\n* 浏览器端声明 `callbackfunction (data) { console.log(data); }`\n* 动态创建 `<script>` 标签，并将 src 指向跨域地址 http://www.runoob.com/ajax?jsonp=callbackFunction\n* 服务器端返回 `callbackFunction([\"customername1\",\"customername2\"])`;\n* 请求结束后，`<script>` 标签内的 js 代码会自动执行，jsonp 流程结束\n\n\n```js\n// jsonp 实现方式\n\nfunction jsonp ({url, param, callback}) {\n  return new Promise((resolve, reject) => {\n    var script = document.createElement('script')\n    window.callback = function (data) {\n      resolve(data)\n      document.body.removeChild(script)\n    }\n    var param = {...param, callback}\n    var arr = []\n    for (let key in param) {\n      arr.push(`${key}=${param[key]}`)\n    }\n    script.src = `${url}?${arr.join('&')}`\n    document.body.appendChild(script)\n  })\n}\n```","source":"_posts/JavaScript/JSONP 原理.md","raw":"---\ntitle: JSONP 原理\ncategories: JavaScript\ntags: [JSONP, 同源策略]\ndate: 2021-04-27 17:24:48\n---\n\n# JSONP 原理\n\n由于同源策略的原因，浏览器限制了 Ajax 请求必须在同一个源中，即**统一协议、域名和端口号**\n\n> 说明： 跨域的 Ajax 请求可以发出，但是必须在服务器端响应头中设置  Access-Control-Allow-Origin：“*”属性，否则在跨域请求的预检请求阶段（`OPTIONS`请求会携带 `Access-Control-Request-Method`、`Access-Control-Request-Headers`等头信息），如果后端不允许此次预检请求，则不会再发送后面真正的请求\n\n\n以下标签可以跨域：\n* <script src=\"...\"></script>\n* <img src=\"...\" />\n* <link rel=\"stylesheet\" href=\"...\">\n* <iframe></iframe>\n\n**JSONP （JSON with Padding）**\n说明: 在浏览器端的 js 中声明回调函数之后，通过 `<script>` 标签向服务器跨域请求数据，服务器将请求结果包裹在回调函数中，并动态执行回调函数。\n安全性： 是一种不安全的通信方式。 `<script>` 会执行跨域服务器中返回的任意 js 代码，只适用于可信的第三方脚本。\n优点： 配置简单，支持旧版浏览器，但不安全，不支持 POST\n\n\n示例：\n* 浏览器端声明 `callbackfunction (data) { console.log(data); }`\n* 动态创建 `<script>` 标签，并将 src 指向跨域地址 http://www.runoob.com/ajax?jsonp=callbackFunction\n* 服务器端返回 `callbackFunction([\"customername1\",\"customername2\"])`;\n* 请求结束后，`<script>` 标签内的 js 代码会自动执行，jsonp 流程结束\n\n\n```js\n// jsonp 实现方式\n\nfunction jsonp ({url, param, callback}) {\n  return new Promise((resolve, reject) => {\n    var script = document.createElement('script')\n    window.callback = function (data) {\n      resolve(data)\n      document.body.removeChild(script)\n    }\n    var param = {...param, callback}\n    var arr = []\n    for (let key in param) {\n      arr.push(`${key}=${param[key]}`)\n    }\n    script.src = `${url}?${arr.join('&')}`\n    document.body.appendChild(script)\n  })\n}\n```","slug":"JavaScript/JSONP 原理","published":1,"updated":"2021-04-27T09:42:54.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknzv6w1p0003k96r9yzq6wkz","content":"<h1 id=\"JSONP-原理\"><a href=\"#JSONP-原理\" class=\"headerlink\" title=\"JSONP 原理\"></a>JSONP 原理</h1><p>由于同源策略的原因，浏览器限制了 Ajax 请求必须在同一个源中，即<strong>统一协议、域名和端口号</strong></p>\n<blockquote>\n<p>说明： 跨域的 Ajax 请求可以发出，但是必须在服务器端响应头中设置  Access-Control-Allow-Origin：“*”属性，否则在跨域请求的预检请求阶段（<code>OPTIONS</code>请求会携带 <code>Access-Control-Request-Method</code>、<code>Access-Control-Request-Headers</code>等头信息），如果后端不允许此次预检请求，则不会再发送后面真正的请求</p>\n</blockquote>\n<p>以下标签可以跨域：</p>\n<ul>\n<li><script src=\"...\"></script></li>\n<li><img src=\"...\" /></li>\n<li><link rel=\"stylesheet\" href=\"...\"></li>\n<li><iframe></iframe></li>\n</ul>\n<p><strong>JSONP （JSON with Padding）</strong><br>说明: 在浏览器端的 js 中声明回调函数之后，通过 <code>&lt;script&gt;</code> 标签向服务器跨域请求数据，服务器将请求结果包裹在回调函数中，并动态执行回调函数。<br>安全性： 是一种不安全的通信方式。 <code>&lt;script&gt;</code> 会执行跨域服务器中返回的任意 js 代码，只适用于可信的第三方脚本。<br>优点： 配置简单，支持旧版浏览器，但不安全，不支持 POST</p>\n<p>示例：</p>\n<ul>\n<li>浏览器端声明 <code>callbackfunction (data) &#123; console.log(data); &#125;</code></li>\n<li>动态创建 <code>&lt;script&gt;</code> 标签，并将 src 指向跨域地址 <a href=\"http://www.runoob.com/ajax?jsonp=callbackFunction\">http://www.runoob.com/ajax?jsonp=callbackFunction</a></li>\n<li>服务器端返回 <code>callbackFunction([&quot;customername1&quot;,&quot;customername2&quot;])</code>;</li>\n<li>请求结束后，<code>&lt;script&gt;</code> 标签内的 js 代码会自动执行，jsonp 流程结束</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// jsonp 实现方式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">jsonp</span> (<span class=\"params\">&#123;url, param, callback&#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;script&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.callback = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">      resolve(data)</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.body.removeChild(script)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> param = &#123;...param, callback&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> param) &#123;</span><br><span class=\"line\">      arr.push(<span class=\"string\">`<span class=\"subst\">$&#123;key&#125;</span>=<span class=\"subst\">$&#123;param[key]&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    script.src = <span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>?<span class=\"subst\">$&#123;arr.join(<span class=\"string\">&#x27;&amp;&#x27;</span>)&#125;</span>`</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(script)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"JSONP-原理\"><a href=\"#JSONP-原理\" class=\"headerlink\" title=\"JSONP 原理\"></a>JSONP 原理</h1><p>由于同源策略的原因，浏览器限制了 Ajax 请求必须在同一个源中，即<strong>统一协议、域名和端口号</strong></p>\n<blockquote>\n<p>说明： 跨域的 Ajax 请求可以发出，但是必须在服务器端响应头中设置  Access-Control-Allow-Origin：“*”属性，否则在跨域请求的预检请求阶段（<code>OPTIONS</code>请求会携带 <code>Access-Control-Request-Method</code>、<code>Access-Control-Request-Headers</code>等头信息），如果后端不允许此次预检请求，则不会再发送后面真正的请求</p>\n</blockquote>\n<p>以下标签可以跨域：</p>\n<ul>\n<li><script src=\"...\"></script></li>\n<li><img src=\"...\" /></li>\n<li><link rel=\"stylesheet\" href=\"...\"></li>\n<li><iframe></iframe></li>\n</ul>\n<p><strong>JSONP （JSON with Padding）</strong><br>说明: 在浏览器端的 js 中声明回调函数之后，通过 <code>&lt;script&gt;</code> 标签向服务器跨域请求数据，服务器将请求结果包裹在回调函数中，并动态执行回调函数。<br>安全性： 是一种不安全的通信方式。 <code>&lt;script&gt;</code> 会执行跨域服务器中返回的任意 js 代码，只适用于可信的第三方脚本。<br>优点： 配置简单，支持旧版浏览器，但不安全，不支持 POST</p>\n<p>示例：</p>\n<ul>\n<li>浏览器端声明 <code>callbackfunction (data) &#123; console.log(data); &#125;</code></li>\n<li>动态创建 <code>&lt;script&gt;</code> 标签，并将 src 指向跨域地址 <a href=\"http://www.runoob.com/ajax?jsonp=callbackFunction\">http://www.runoob.com/ajax?jsonp=callbackFunction</a></li>\n<li>服务器端返回 <code>callbackFunction([&quot;customername1&quot;,&quot;customername2&quot;])</code>;</li>\n<li>请求结束后，<code>&lt;script&gt;</code> 标签内的 js 代码会自动执行，jsonp 流程结束</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// jsonp 实现方式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">jsonp</span> (<span class=\"params\">&#123;url, param, callback&#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;script&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.callback = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">      resolve(data)</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.body.removeChild(script)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> param = &#123;...param, callback&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> param) &#123;</span><br><span class=\"line\">      arr.push(<span class=\"string\">`<span class=\"subst\">$&#123;key&#125;</span>=<span class=\"subst\">$&#123;param[key]&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    script.src = <span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>?<span class=\"subst\">$&#123;arr.join(<span class=\"string\">&#x27;&amp;&#x27;</span>)&#125;</span>`</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(script)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Performance API","date":"2021-04-27T09:21:48.000Z","_content":"\n# Performance API\n\n## performance.timing\n\nperformance对象是全局的，它的 timing 属性是一个对象，它包含了各种与浏览器性能有关的时间数据，提供浏览器处理网页各个阶段的耗时。\n\n![文档加载时间图](https://image-static.segmentfault.com/306/110/3061105775-56fde6dc11135_articlex)\n\n![性能指标](https://pic1.zhimg.com/80/v2-e4e26420d6b681b2b15b9edf9db9d4d0_1440w.jpg)\n\nperformance.timing对象包含下列属性（全部只读）：\n* **navigationStart**：当前浏览器窗口的前一个网页关闭，发生unload事件时的Unix毫秒时间戳。如果没有前一个网页，则等于fetchStart属性。\n* **unloadEventStart**：如果前一个网页与当前网页属于同一个域名，则返回前一个网页的unload事件发生时的Unix毫秒时间戳。如果没有前一个网页，或者之前的网页跳转不是在同一个域名内，则返回值为0。\n**unloadEventEnd**：如果前一个网页与当前网页属于同一个域名，则返回前一个网页unload事件的回调函数结束时的Unix毫秒时间戳。如果没有前一个网页，或者之前的网页跳转不是在同一个域名内，则返回值为0。\n**redirectStart**：返回第一个HTTP跳转开始时的Unix毫秒时间戳。如果没有跳转，或者不是同一个域名内部的跳转，则返回值为0。\n* **redirectEnd**：返回最后一个HTTP跳转结束时（即跳转回应的最后一个字节接受完成时）的Unix毫秒时间戳。如果没有跳转，或者不是同一个域名内部的跳转，则返回值为0。\n* **fetchStart**：返回浏览器准备使用HTTP请求读取文档时的Unix毫秒时间戳。该事件在网页查询本地缓存之前发生。\n* **domainLookupStart**：返回域名查询开始时的Unix毫秒时间戳。如果使用持久连接，或者信息是从本地缓存获取的，则返回值等同于fetchStart属性的值。\n* **domainLookupEnd**：返回域名查询结束时的Unix毫秒时间戳。如果使用持久连接，或者信息是从本地缓存获取的，则返回值等同于fetchStart属性的值。\n* **connectStart**：返回HTTP请求开始向服务器发送时的Unix毫秒时间戳。如果使用持久连接（persistent connection），则返回值等同于fetchStart属性的值。\n* **connectEnd**：返回浏览器与服务器之间的连接建立时的Unix毫秒时间戳。如果建立的是持久连接，则返回值等同于fetchStart属性的值。连接建立指的是所有握手和认证过程全部结束。\n* **secureConnectionStart**：返回浏览器与服务器开始安全链接的握手时的Unix毫秒时间戳。如果当前网页不要求安全连接，则返回0。\n* **requestStart**：返回浏览器向服务器发出HTTP请求时（或开始读取本地缓存时）的Unix毫秒时间戳。\n* **responseStart**：返回浏览器从服务器收到（或从本地缓存读取）第一个字节时的Unix毫秒时间戳。\n* **responseEnd**：返回浏览器从服务器收到（或从本地缓存读取）最后一个字节时（如果在此之前HTTP连接已经关闭，则返回关闭时）的Unix毫秒时间戳。\n* **domLoading**：返回当前网页DOM结构开始解析时（即Document.readyState属性变为“loading”、相应的readystatechange事件触发时）的Unix毫秒时间戳。\n* **domInteractive**：返回当前网页DOM结构结束解析、开始加载内嵌资源时（即Document.readyState属性变为“interactive”、相应的readystatechange事件触发时）的Unix毫秒时间戳。\n* **domContentLoadedEventStart**：返回当前网页DOMContentLoaded事件发生时（即DOM结构解析完毕、所有脚本开始运行时）的Unix毫秒时间戳。\n* **domContentLoadedEventEnd**：返回当前网页所有需要执行的脚本执行完成时的Unix毫秒时间戳。\n* **domComplete**：返回当前网页DOM结构生成时（即Document.readyState属性变为“complete”，以及相应的readystatechange事件发生时）的Unix毫秒时间戳。\n* **loadEventStart**：返回当前网页load事件的回调函数开始时的Unix毫秒时间戳。如果该事件还没有发生，返回0。\n* **loadEventEnd**：返回当前网页load事件的回调函数运行结束时的Unix毫秒时间戳。如果该事件还没有发生，返回0。\n\n\n![加载流程](https://pic4.zhimg.com/80/v2-d80be1162b4d17d7c6ff265c26e30c3f_1440w.jpg)\n\n关键指标数据如下：\n* DNS解析时间：`domainLookupEnd - domainLookupStart`\n* TCP建立连接：`connectEnd - connectStart`\n* 发送请求：`responseStart - requestStart`\n* 接收请求：`responseEnd - responseStart`\n* TTFB：`responseStart - fetchStart`\n* 白屏时间：`domLoading - fetchStart`\n* 解析 DOM 树：`domInteractive - domLoading`\n* 首次可交互时间：`domContentLoadedEventEnd - fetchStart` （粗略计算）\n* DOM Ready 时间：`domComplete - fetchStart`\n* 页面完全加载时间：`loadEventStart - fetchStart`\n* DOMContentLoaded 事件耗时：`domContentLoadedEventEnd - domContentLoadedEventStart`\n* DOMLoad 事件耗时：`loadEventEnd - loadEventStart`","source":"_posts/浏览器/Performance API.md","raw":"---\ntitle: Performance API\ncategories: 浏览器\ntags: [Performance, 性能]\ndate: 2021-04-27 17:21:48\n---\n\n# Performance API\n\n## performance.timing\n\nperformance对象是全局的，它的 timing 属性是一个对象，它包含了各种与浏览器性能有关的时间数据，提供浏览器处理网页各个阶段的耗时。\n\n![文档加载时间图](https://image-static.segmentfault.com/306/110/3061105775-56fde6dc11135_articlex)\n\n![性能指标](https://pic1.zhimg.com/80/v2-e4e26420d6b681b2b15b9edf9db9d4d0_1440w.jpg)\n\nperformance.timing对象包含下列属性（全部只读）：\n* **navigationStart**：当前浏览器窗口的前一个网页关闭，发生unload事件时的Unix毫秒时间戳。如果没有前一个网页，则等于fetchStart属性。\n* **unloadEventStart**：如果前一个网页与当前网页属于同一个域名，则返回前一个网页的unload事件发生时的Unix毫秒时间戳。如果没有前一个网页，或者之前的网页跳转不是在同一个域名内，则返回值为0。\n**unloadEventEnd**：如果前一个网页与当前网页属于同一个域名，则返回前一个网页unload事件的回调函数结束时的Unix毫秒时间戳。如果没有前一个网页，或者之前的网页跳转不是在同一个域名内，则返回值为0。\n**redirectStart**：返回第一个HTTP跳转开始时的Unix毫秒时间戳。如果没有跳转，或者不是同一个域名内部的跳转，则返回值为0。\n* **redirectEnd**：返回最后一个HTTP跳转结束时（即跳转回应的最后一个字节接受完成时）的Unix毫秒时间戳。如果没有跳转，或者不是同一个域名内部的跳转，则返回值为0。\n* **fetchStart**：返回浏览器准备使用HTTP请求读取文档时的Unix毫秒时间戳。该事件在网页查询本地缓存之前发生。\n* **domainLookupStart**：返回域名查询开始时的Unix毫秒时间戳。如果使用持久连接，或者信息是从本地缓存获取的，则返回值等同于fetchStart属性的值。\n* **domainLookupEnd**：返回域名查询结束时的Unix毫秒时间戳。如果使用持久连接，或者信息是从本地缓存获取的，则返回值等同于fetchStart属性的值。\n* **connectStart**：返回HTTP请求开始向服务器发送时的Unix毫秒时间戳。如果使用持久连接（persistent connection），则返回值等同于fetchStart属性的值。\n* **connectEnd**：返回浏览器与服务器之间的连接建立时的Unix毫秒时间戳。如果建立的是持久连接，则返回值等同于fetchStart属性的值。连接建立指的是所有握手和认证过程全部结束。\n* **secureConnectionStart**：返回浏览器与服务器开始安全链接的握手时的Unix毫秒时间戳。如果当前网页不要求安全连接，则返回0。\n* **requestStart**：返回浏览器向服务器发出HTTP请求时（或开始读取本地缓存时）的Unix毫秒时间戳。\n* **responseStart**：返回浏览器从服务器收到（或从本地缓存读取）第一个字节时的Unix毫秒时间戳。\n* **responseEnd**：返回浏览器从服务器收到（或从本地缓存读取）最后一个字节时（如果在此之前HTTP连接已经关闭，则返回关闭时）的Unix毫秒时间戳。\n* **domLoading**：返回当前网页DOM结构开始解析时（即Document.readyState属性变为“loading”、相应的readystatechange事件触发时）的Unix毫秒时间戳。\n* **domInteractive**：返回当前网页DOM结构结束解析、开始加载内嵌资源时（即Document.readyState属性变为“interactive”、相应的readystatechange事件触发时）的Unix毫秒时间戳。\n* **domContentLoadedEventStart**：返回当前网页DOMContentLoaded事件发生时（即DOM结构解析完毕、所有脚本开始运行时）的Unix毫秒时间戳。\n* **domContentLoadedEventEnd**：返回当前网页所有需要执行的脚本执行完成时的Unix毫秒时间戳。\n* **domComplete**：返回当前网页DOM结构生成时（即Document.readyState属性变为“complete”，以及相应的readystatechange事件发生时）的Unix毫秒时间戳。\n* **loadEventStart**：返回当前网页load事件的回调函数开始时的Unix毫秒时间戳。如果该事件还没有发生，返回0。\n* **loadEventEnd**：返回当前网页load事件的回调函数运行结束时的Unix毫秒时间戳。如果该事件还没有发生，返回0。\n\n\n![加载流程](https://pic4.zhimg.com/80/v2-d80be1162b4d17d7c6ff265c26e30c3f_1440w.jpg)\n\n关键指标数据如下：\n* DNS解析时间：`domainLookupEnd - domainLookupStart`\n* TCP建立连接：`connectEnd - connectStart`\n* 发送请求：`responseStart - requestStart`\n* 接收请求：`responseEnd - responseStart`\n* TTFB：`responseStart - fetchStart`\n* 白屏时间：`domLoading - fetchStart`\n* 解析 DOM 树：`domInteractive - domLoading`\n* 首次可交互时间：`domContentLoadedEventEnd - fetchStart` （粗略计算）\n* DOM Ready 时间：`domComplete - fetchStart`\n* 页面完全加载时间：`loadEventStart - fetchStart`\n* DOMContentLoaded 事件耗时：`domContentLoadedEventEnd - domContentLoadedEventStart`\n* DOMLoad 事件耗时：`loadEventEnd - loadEventStart`","slug":"浏览器/Performance API","published":1,"updated":"2021-04-27T09:43:15.644Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknzv6w1s0006k96rbptn0mat","content":"<h1 id=\"Performance-API\"><a href=\"#Performance-API\" class=\"headerlink\" title=\"Performance API\"></a>Performance API</h1><h2 id=\"performance-timing\"><a href=\"#performance-timing\" class=\"headerlink\" title=\"performance.timing\"></a>performance.timing</h2><p>performance对象是全局的，它的 timing 属性是一个对象，它包含了各种与浏览器性能有关的时间数据，提供浏览器处理网页各个阶段的耗时。</p>\n<p><img src=\"https://image-static.segmentfault.com/306/110/3061105775-56fde6dc11135_articlex\" alt=\"文档加载时间图\"></p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-e4e26420d6b681b2b15b9edf9db9d4d0_1440w.jpg\" alt=\"性能指标\"></p>\n<p>performance.timing对象包含下列属性（全部只读）：</p>\n<ul>\n<li><strong>navigationStart</strong>：当前浏览器窗口的前一个网页关闭，发生unload事件时的Unix毫秒时间戳。如果没有前一个网页，则等于fetchStart属性。</li>\n<li><strong>unloadEventStart</strong>：如果前一个网页与当前网页属于同一个域名，则返回前一个网页的unload事件发生时的Unix毫秒时间戳。如果没有前一个网页，或者之前的网页跳转不是在同一个域名内，则返回值为0。</li>\n<li>*unloadEventEnd**：如果前一个网页与当前网页属于同一个域名，则返回前一个网页unload事件的回调函数结束时的Unix毫秒时间戳。如果没有前一个网页，或者之前的网页跳转不是在同一个域名内，则返回值为0。</li>\n<li>*redirectStart**：返回第一个HTTP跳转开始时的Unix毫秒时间戳。如果没有跳转，或者不是同一个域名内部的跳转，则返回值为0。</li>\n<li><strong>redirectEnd</strong>：返回最后一个HTTP跳转结束时（即跳转回应的最后一个字节接受完成时）的Unix毫秒时间戳。如果没有跳转，或者不是同一个域名内部的跳转，则返回值为0。</li>\n<li><strong>fetchStart</strong>：返回浏览器准备使用HTTP请求读取文档时的Unix毫秒时间戳。该事件在网页查询本地缓存之前发生。</li>\n<li><strong>domainLookupStart</strong>：返回域名查询开始时的Unix毫秒时间戳。如果使用持久连接，或者信息是从本地缓存获取的，则返回值等同于fetchStart属性的值。</li>\n<li><strong>domainLookupEnd</strong>：返回域名查询结束时的Unix毫秒时间戳。如果使用持久连接，或者信息是从本地缓存获取的，则返回值等同于fetchStart属性的值。</li>\n<li><strong>connectStart</strong>：返回HTTP请求开始向服务器发送时的Unix毫秒时间戳。如果使用持久连接（persistent connection），则返回值等同于fetchStart属性的值。</li>\n<li><strong>connectEnd</strong>：返回浏览器与服务器之间的连接建立时的Unix毫秒时间戳。如果建立的是持久连接，则返回值等同于fetchStart属性的值。连接建立指的是所有握手和认证过程全部结束。</li>\n<li><strong>secureConnectionStart</strong>：返回浏览器与服务器开始安全链接的握手时的Unix毫秒时间戳。如果当前网页不要求安全连接，则返回0。</li>\n<li><strong>requestStart</strong>：返回浏览器向服务器发出HTTP请求时（或开始读取本地缓存时）的Unix毫秒时间戳。</li>\n<li><strong>responseStart</strong>：返回浏览器从服务器收到（或从本地缓存读取）第一个字节时的Unix毫秒时间戳。</li>\n<li><strong>responseEnd</strong>：返回浏览器从服务器收到（或从本地缓存读取）最后一个字节时（如果在此之前HTTP连接已经关闭，则返回关闭时）的Unix毫秒时间戳。</li>\n<li><strong>domLoading</strong>：返回当前网页DOM结构开始解析时（即Document.readyState属性变为“loading”、相应的readystatechange事件触发时）的Unix毫秒时间戳。</li>\n<li><strong>domInteractive</strong>：返回当前网页DOM结构结束解析、开始加载内嵌资源时（即Document.readyState属性变为“interactive”、相应的readystatechange事件触发时）的Unix毫秒时间戳。</li>\n<li><strong>domContentLoadedEventStart</strong>：返回当前网页DOMContentLoaded事件发生时（即DOM结构解析完毕、所有脚本开始运行时）的Unix毫秒时间戳。</li>\n<li><strong>domContentLoadedEventEnd</strong>：返回当前网页所有需要执行的脚本执行完成时的Unix毫秒时间戳。</li>\n<li><strong>domComplete</strong>：返回当前网页DOM结构生成时（即Document.readyState属性变为“complete”，以及相应的readystatechange事件发生时）的Unix毫秒时间戳。</li>\n<li><strong>loadEventStart</strong>：返回当前网页load事件的回调函数开始时的Unix毫秒时间戳。如果该事件还没有发生，返回0。</li>\n<li><strong>loadEventEnd</strong>：返回当前网页load事件的回调函数运行结束时的Unix毫秒时间戳。如果该事件还没有发生，返回0。</li>\n</ul>\n<p><img src=\"https://pic4.zhimg.com/80/v2-d80be1162b4d17d7c6ff265c26e30c3f_1440w.jpg\" alt=\"加载流程\"></p>\n<p>关键指标数据如下：</p>\n<ul>\n<li>DNS解析时间：<code>domainLookupEnd - domainLookupStart</code></li>\n<li>TCP建立连接：<code>connectEnd - connectStart</code></li>\n<li>发送请求：<code>responseStart - requestStart</code></li>\n<li>接收请求：<code>responseEnd - responseStart</code></li>\n<li>TTFB：<code>responseStart - fetchStart</code></li>\n<li>白屏时间：<code>domLoading - fetchStart</code></li>\n<li>解析 DOM 树：<code>domInteractive - domLoading</code></li>\n<li>首次可交互时间：<code>domContentLoadedEventEnd - fetchStart</code> （粗略计算）</li>\n<li>DOM Ready 时间：<code>domComplete - fetchStart</code></li>\n<li>页面完全加载时间：<code>loadEventStart - fetchStart</code></li>\n<li>DOMContentLoaded 事件耗时：<code>domContentLoadedEventEnd - domContentLoadedEventStart</code></li>\n<li>DOMLoad 事件耗时：<code>loadEventEnd - loadEventStart</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Performance-API\"><a href=\"#Performance-API\" class=\"headerlink\" title=\"Performance API\"></a>Performance API</h1><h2 id=\"performance-timing\"><a href=\"#performance-timing\" class=\"headerlink\" title=\"performance.timing\"></a>performance.timing</h2><p>performance对象是全局的，它的 timing 属性是一个对象，它包含了各种与浏览器性能有关的时间数据，提供浏览器处理网页各个阶段的耗时。</p>\n<p><img src=\"https://image-static.segmentfault.com/306/110/3061105775-56fde6dc11135_articlex\" alt=\"文档加载时间图\"></p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-e4e26420d6b681b2b15b9edf9db9d4d0_1440w.jpg\" alt=\"性能指标\"></p>\n<p>performance.timing对象包含下列属性（全部只读）：</p>\n<ul>\n<li><strong>navigationStart</strong>：当前浏览器窗口的前一个网页关闭，发生unload事件时的Unix毫秒时间戳。如果没有前一个网页，则等于fetchStart属性。</li>\n<li><strong>unloadEventStart</strong>：如果前一个网页与当前网页属于同一个域名，则返回前一个网页的unload事件发生时的Unix毫秒时间戳。如果没有前一个网页，或者之前的网页跳转不是在同一个域名内，则返回值为0。</li>\n<li>*unloadEventEnd**：如果前一个网页与当前网页属于同一个域名，则返回前一个网页unload事件的回调函数结束时的Unix毫秒时间戳。如果没有前一个网页，或者之前的网页跳转不是在同一个域名内，则返回值为0。</li>\n<li>*redirectStart**：返回第一个HTTP跳转开始时的Unix毫秒时间戳。如果没有跳转，或者不是同一个域名内部的跳转，则返回值为0。</li>\n<li><strong>redirectEnd</strong>：返回最后一个HTTP跳转结束时（即跳转回应的最后一个字节接受完成时）的Unix毫秒时间戳。如果没有跳转，或者不是同一个域名内部的跳转，则返回值为0。</li>\n<li><strong>fetchStart</strong>：返回浏览器准备使用HTTP请求读取文档时的Unix毫秒时间戳。该事件在网页查询本地缓存之前发生。</li>\n<li><strong>domainLookupStart</strong>：返回域名查询开始时的Unix毫秒时间戳。如果使用持久连接，或者信息是从本地缓存获取的，则返回值等同于fetchStart属性的值。</li>\n<li><strong>domainLookupEnd</strong>：返回域名查询结束时的Unix毫秒时间戳。如果使用持久连接，或者信息是从本地缓存获取的，则返回值等同于fetchStart属性的值。</li>\n<li><strong>connectStart</strong>：返回HTTP请求开始向服务器发送时的Unix毫秒时间戳。如果使用持久连接（persistent connection），则返回值等同于fetchStart属性的值。</li>\n<li><strong>connectEnd</strong>：返回浏览器与服务器之间的连接建立时的Unix毫秒时间戳。如果建立的是持久连接，则返回值等同于fetchStart属性的值。连接建立指的是所有握手和认证过程全部结束。</li>\n<li><strong>secureConnectionStart</strong>：返回浏览器与服务器开始安全链接的握手时的Unix毫秒时间戳。如果当前网页不要求安全连接，则返回0。</li>\n<li><strong>requestStart</strong>：返回浏览器向服务器发出HTTP请求时（或开始读取本地缓存时）的Unix毫秒时间戳。</li>\n<li><strong>responseStart</strong>：返回浏览器从服务器收到（或从本地缓存读取）第一个字节时的Unix毫秒时间戳。</li>\n<li><strong>responseEnd</strong>：返回浏览器从服务器收到（或从本地缓存读取）最后一个字节时（如果在此之前HTTP连接已经关闭，则返回关闭时）的Unix毫秒时间戳。</li>\n<li><strong>domLoading</strong>：返回当前网页DOM结构开始解析时（即Document.readyState属性变为“loading”、相应的readystatechange事件触发时）的Unix毫秒时间戳。</li>\n<li><strong>domInteractive</strong>：返回当前网页DOM结构结束解析、开始加载内嵌资源时（即Document.readyState属性变为“interactive”、相应的readystatechange事件触发时）的Unix毫秒时间戳。</li>\n<li><strong>domContentLoadedEventStart</strong>：返回当前网页DOMContentLoaded事件发生时（即DOM结构解析完毕、所有脚本开始运行时）的Unix毫秒时间戳。</li>\n<li><strong>domContentLoadedEventEnd</strong>：返回当前网页所有需要执行的脚本执行完成时的Unix毫秒时间戳。</li>\n<li><strong>domComplete</strong>：返回当前网页DOM结构生成时（即Document.readyState属性变为“complete”，以及相应的readystatechange事件发生时）的Unix毫秒时间戳。</li>\n<li><strong>loadEventStart</strong>：返回当前网页load事件的回调函数开始时的Unix毫秒时间戳。如果该事件还没有发生，返回0。</li>\n<li><strong>loadEventEnd</strong>：返回当前网页load事件的回调函数运行结束时的Unix毫秒时间戳。如果该事件还没有发生，返回0。</li>\n</ul>\n<p><img src=\"https://pic4.zhimg.com/80/v2-d80be1162b4d17d7c6ff265c26e30c3f_1440w.jpg\" alt=\"加载流程\"></p>\n<p>关键指标数据如下：</p>\n<ul>\n<li>DNS解析时间：<code>domainLookupEnd - domainLookupStart</code></li>\n<li>TCP建立连接：<code>connectEnd - connectStart</code></li>\n<li>发送请求：<code>responseStart - requestStart</code></li>\n<li>接收请求：<code>responseEnd - responseStart</code></li>\n<li>TTFB：<code>responseStart - fetchStart</code></li>\n<li>白屏时间：<code>domLoading - fetchStart</code></li>\n<li>解析 DOM 树：<code>domInteractive - domLoading</code></li>\n<li>首次可交互时间：<code>domContentLoadedEventEnd - fetchStart</code> （粗略计算）</li>\n<li>DOM Ready 时间：<code>domComplete - fetchStart</code></li>\n<li>页面完全加载时间：<code>loadEventStart - fetchStart</code></li>\n<li>DOMContentLoaded 事件耗时：<code>domContentLoadedEventEnd - domContentLoadedEventStart</code></li>\n<li>DOMLoad 事件耗时：<code>loadEventEnd - loadEventStart</code></li>\n</ul>\n"},{"title":"nginx 常用命令","date":"2021-04-27T09:22:48.000Z","_content":"\n\n# nginx 常用命令\n\n* `sudo nginx`  // 启动 nginx\n* `sudo nginx -s reload`  // 重启 nginx\n* `sudo nginx -s stop`  // 关闭 nginx\n* `ps -ef | grep nginx`  // 查看查看nginx进程\n* `sudo kill -TERM 主进程号`  // 杀死进程\n\n## linux 常用命令\n* cp [-r]\n* rm\n* open\n* pwd\n* clear reset","source":"_posts/杂项/nginx 常用命令.md","raw":"---\ntitle: nginx 常用命令\ncategories: 杂项\ntags: [server, nginx]\ndate: 2021-04-27 17:22:48\n---\n\n\n# nginx 常用命令\n\n* `sudo nginx`  // 启动 nginx\n* `sudo nginx -s reload`  // 重启 nginx\n* `sudo nginx -s stop`  // 关闭 nginx\n* `ps -ef | grep nginx`  // 查看查看nginx进程\n* `sudo kill -TERM 主进程号`  // 杀死进程\n\n## linux 常用命令\n* cp [-r]\n* rm\n* open\n* pwd\n* clear reset","slug":"杂项/nginx 常用命令","published":1,"updated":"2021-04-27T09:43:09.659Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknzv6w1t0007k96radz85m4b","content":"<h1 id=\"nginx-常用命令\"><a href=\"#nginx-常用命令\" class=\"headerlink\" title=\"nginx 常用命令\"></a>nginx 常用命令</h1><ul>\n<li><code>sudo nginx</code>  // 启动 nginx</li>\n<li><code>sudo nginx -s reload</code>  // 重启 nginx</li>\n<li><code>sudo nginx -s stop</code>  // 关闭 nginx</li>\n<li><code>ps -ef | grep nginx</code>  // 查看查看nginx进程</li>\n<li><code>sudo kill -TERM 主进程号</code>  // 杀死进程</li>\n</ul>\n<h2 id=\"linux-常用命令\"><a href=\"#linux-常用命令\" class=\"headerlink\" title=\"linux 常用命令\"></a>linux 常用命令</h2><ul>\n<li>cp [-r]</li>\n<li>rm</li>\n<li>open</li>\n<li>pwd</li>\n<li>clear reset</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"nginx-常用命令\"><a href=\"#nginx-常用命令\" class=\"headerlink\" title=\"nginx 常用命令\"></a>nginx 常用命令</h1><ul>\n<li><code>sudo nginx</code>  // 启动 nginx</li>\n<li><code>sudo nginx -s reload</code>  // 重启 nginx</li>\n<li><code>sudo nginx -s stop</code>  // 关闭 nginx</li>\n<li><code>ps -ef | grep nginx</code>  // 查看查看nginx进程</li>\n<li><code>sudo kill -TERM 主进程号</code>  // 杀死进程</li>\n</ul>\n<h2 id=\"linux-常用命令\"><a href=\"#linux-常用命令\" class=\"headerlink\" title=\"linux 常用命令\"></a>linux 常用命令</h2><ul>\n<li>cp [-r]</li>\n<li>rm</li>\n<li>open</li>\n<li>pwd</li>\n<li>clear reset</li>\n</ul>\n"},{"title":"pm2 常用命令","date":"2021-04-27T09:21:48.000Z","_content":"\n# pm2 常用命令\n\n### 1、node守护进程比较\n**node 守护进程比较**\n* nodemon：开发环境使用，修改后自动重启。\n* forever：管理多个站点，每个站点访问量不大，不需要监控。\n* pm2：网站访问量比较大，需要完整的监控界面。\n\n### pm2主要特性\n* 内建负载均衡（使用Node cluster 集群模块）\n* 后台运行\n* 0 秒停机重载\n* 开机自启动脚本\n* 停止不稳定的进程（避免无限循环）\n* 控制台检测\n* 提供远程控制和实时的接口API (允许和PM2进程管理器交互)\n\n\n### pm2 常用命令\n\n##### 1. 安装\n`npm install -g pm2`\n\n##### 2. 单个启动\n`pm2 start app.js`  # 启动\n`pm2 start app.js -i 4` # 启动4个应用实例，自动负载均衡\n\n`pm2 start app.js --watch` # 监听文件变化并重启\n\n### 3. 批量重启\n\n使用 `pm2 ecosystem` 或 `pm2 init` 会生成 `ecosystem.config.js` 文件\n\n然后运行 `pm2 start ecosystem.config.js --env dev`\n\n```js\nmodule.exports = {\n  apps : [{\n    name: 'app',\n    script: './app.js',\n    env_dev: {\n      NODE_ENV: 'dev', // 环境参数，当前指定为生产环境 process.env.NODE_ENV\n      REMOTE_ADDR: 'https://www.test.com',\n    },\n    env_sit: {\n      NODE_ENV: 'sit',\n      REMOTE_ADDR: 'https://www.test.com',\n    },\n    env_prod: {\n      NODE_ENV: 'prod',\n      REMOTE_ADDR: 'https://www.test.com',\n    },\n  }, {\n     name: 'worker',\n     script: 'worker.js'\n  }]\n}\n```\n\n##### 4. 重启\n`pm2 restart app_id | app_name` # 重启\n`pm2 restart all` # 重启所有进程，相当stop+start\n`pm2 reload all` # 0秒停机重载进程 (用于不间断进程)\n\n##### 5. 停止\n`pm2 stop app_id | app_name` # 重启\n`pm2 stop all` # 重启所有进程，相当stop+start\n\n##### 6. 删除\n`pm2 delete app_id | app_name`  # 从列表中删除指定的进程\n`pm2 delete all` # 从列表中删除全部进程\n`pm2 kill` # 杀死守护进程\n\n##### 7. 查看\n`pm2 list` # 查看进程\n`pm2 logs` # 查看日志\n`pm2 show app_name|app_id` # 查看进程详情\n`pm2 monit`  # 查看CPU和内存资源占用\n\n##### 8. 启动 HTTP 服务\n`pm2 serve|expose [options] [path] [port]`\n\n例如 `pm2 serve ./dist 8888`，在 dist 目录启动 http 服务，端口号为 8888\n\n","source":"_posts/杂项/pm2 常用命令.md","raw":"---\ntitle: pm2 常用命令\ncategories: 杂项\ntags: [server, node]\ndate: 2021-04-27 17:21:48\n---\n\n# pm2 常用命令\n\n### 1、node守护进程比较\n**node 守护进程比较**\n* nodemon：开发环境使用，修改后自动重启。\n* forever：管理多个站点，每个站点访问量不大，不需要监控。\n* pm2：网站访问量比较大，需要完整的监控界面。\n\n### pm2主要特性\n* 内建负载均衡（使用Node cluster 集群模块）\n* 后台运行\n* 0 秒停机重载\n* 开机自启动脚本\n* 停止不稳定的进程（避免无限循环）\n* 控制台检测\n* 提供远程控制和实时的接口API (允许和PM2进程管理器交互)\n\n\n### pm2 常用命令\n\n##### 1. 安装\n`npm install -g pm2`\n\n##### 2. 单个启动\n`pm2 start app.js`  # 启动\n`pm2 start app.js -i 4` # 启动4个应用实例，自动负载均衡\n\n`pm2 start app.js --watch` # 监听文件变化并重启\n\n### 3. 批量重启\n\n使用 `pm2 ecosystem` 或 `pm2 init` 会生成 `ecosystem.config.js` 文件\n\n然后运行 `pm2 start ecosystem.config.js --env dev`\n\n```js\nmodule.exports = {\n  apps : [{\n    name: 'app',\n    script: './app.js',\n    env_dev: {\n      NODE_ENV: 'dev', // 环境参数，当前指定为生产环境 process.env.NODE_ENV\n      REMOTE_ADDR: 'https://www.test.com',\n    },\n    env_sit: {\n      NODE_ENV: 'sit',\n      REMOTE_ADDR: 'https://www.test.com',\n    },\n    env_prod: {\n      NODE_ENV: 'prod',\n      REMOTE_ADDR: 'https://www.test.com',\n    },\n  }, {\n     name: 'worker',\n     script: 'worker.js'\n  }]\n}\n```\n\n##### 4. 重启\n`pm2 restart app_id | app_name` # 重启\n`pm2 restart all` # 重启所有进程，相当stop+start\n`pm2 reload all` # 0秒停机重载进程 (用于不间断进程)\n\n##### 5. 停止\n`pm2 stop app_id | app_name` # 重启\n`pm2 stop all` # 重启所有进程，相当stop+start\n\n##### 6. 删除\n`pm2 delete app_id | app_name`  # 从列表中删除指定的进程\n`pm2 delete all` # 从列表中删除全部进程\n`pm2 kill` # 杀死守护进程\n\n##### 7. 查看\n`pm2 list` # 查看进程\n`pm2 logs` # 查看日志\n`pm2 show app_name|app_id` # 查看进程详情\n`pm2 monit`  # 查看CPU和内存资源占用\n\n##### 8. 启动 HTTP 服务\n`pm2 serve|expose [options] [path] [port]`\n\n例如 `pm2 serve ./dist 8888`，在 dist 目录启动 http 服务，端口号为 8888\n\n","slug":"杂项/pm2 常用命令","published":1,"updated":"2021-04-27T11:59:27.247Z","_id":"cknzv6w1u0008k96r93999udz","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"pm2-常用命令\"><a href=\"#pm2-常用命令\" class=\"headerlink\" title=\"pm2 常用命令\"></a>pm2 常用命令</h1><h3 id=\"1、node守护进程比较\"><a href=\"#1、node守护进程比较\" class=\"headerlink\" title=\"1、node守护进程比较\"></a>1、node守护进程比较</h3><p><strong>node 守护进程比较</strong></p>\n<ul>\n<li>nodemon：开发环境使用，修改后自动重启。</li>\n<li>forever：管理多个站点，每个站点访问量不大，不需要监控。</li>\n<li>pm2：网站访问量比较大，需要完整的监控界面。</li>\n</ul>\n<h3 id=\"pm2主要特性\"><a href=\"#pm2主要特性\" class=\"headerlink\" title=\"pm2主要特性\"></a>pm2主要特性</h3><ul>\n<li>内建负载均衡（使用Node cluster 集群模块）</li>\n<li>后台运行</li>\n<li>0 秒停机重载</li>\n<li>开机自启动脚本</li>\n<li>停止不稳定的进程（避免无限循环）</li>\n<li>控制台检测</li>\n<li>提供远程控制和实时的接口API (允许和PM2进程管理器交互)</li>\n</ul>\n<h3 id=\"pm2-常用命令-1\"><a href=\"#pm2-常用命令-1\" class=\"headerlink\" title=\"pm2 常用命令\"></a>pm2 常用命令</h3><h5 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1. 安装\"></a>1. 安装</h5><p><code>npm install -g pm2</code></p>\n<h5 id=\"2-单个启动\"><a href=\"#2-单个启动\" class=\"headerlink\" title=\"2. 单个启动\"></a>2. 单个启动</h5><p><code>pm2 start app.js</code>  # 启动<br><code>pm2 start app.js -i 4</code> # 启动4个应用实例，自动负载均衡</p>\n<p><code>pm2 start app.js --watch</code> # 监听文件变化并重启</p>\n<h3 id=\"3-批量重启\"><a href=\"#3-批量重启\" class=\"headerlink\" title=\"3. 批量重启\"></a>3. 批量重启</h3><p>使用 <code>pm2 ecosystem</code> 或 <code>pm2 init</code> 会生成 <code>ecosystem.config.js</code> 文件</p>\n<p>然后运行 <code>pm2 start ecosystem.config.js --env dev</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  apps : [&#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;app&#x27;</span>,</span><br><span class=\"line\">    script: <span class=\"string\">&#x27;./app.js&#x27;</span>,</span><br><span class=\"line\">    env_dev: &#123;</span><br><span class=\"line\">      NODE_ENV: <span class=\"string\">&#x27;dev&#x27;</span>, <span class=\"comment\">// 环境参数，当前指定为生产环境 process.env.NODE_ENV</span></span><br><span class=\"line\">      REMOTE_ADDR: <span class=\"string\">&#x27;https://www.test.com&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    env_sit: &#123;</span><br><span class=\"line\">      NODE_ENV: <span class=\"string\">&#x27;sit&#x27;</span>,</span><br><span class=\"line\">      REMOTE_ADDR: <span class=\"string\">&#x27;https://www.test.com&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    env_prod: &#123;</span><br><span class=\"line\">      NODE_ENV: <span class=\"string\">&#x27;prod&#x27;</span>,</span><br><span class=\"line\">      REMOTE_ADDR: <span class=\"string\">&#x27;https://www.test.com&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">     name: <span class=\"string\">&#x27;worker&#x27;</span>,</span><br><span class=\"line\">     script: <span class=\"string\">&#x27;worker.js&#x27;</span></span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4-重启\"><a href=\"#4-重启\" class=\"headerlink\" title=\"4. 重启\"></a>4. 重启</h5><p><code>pm2 restart app_id | app_name</code> # 重启<br><code>pm2 restart all</code> # 重启所有进程，相当stop+start<br><code>pm2 reload all</code> # 0秒停机重载进程 (用于不间断进程)</p>\n<h5 id=\"5-停止\"><a href=\"#5-停止\" class=\"headerlink\" title=\"5. 停止\"></a>5. 停止</h5><p><code>pm2 stop app_id | app_name</code> # 重启<br><code>pm2 stop all</code> # 重启所有进程，相当stop+start</p>\n<h5 id=\"6-删除\"><a href=\"#6-删除\" class=\"headerlink\" title=\"6. 删除\"></a>6. 删除</h5><p><code>pm2 delete app_id | app_name</code>  # 从列表中删除指定的进程<br><code>pm2 delete all</code> # 从列表中删除全部进程<br><code>pm2 kill</code> # 杀死守护进程</p>\n<h5 id=\"7-查看\"><a href=\"#7-查看\" class=\"headerlink\" title=\"7. 查看\"></a>7. 查看</h5><p><code>pm2 list</code> # 查看进程<br><code>pm2 logs</code> # 查看日志<br><code>pm2 show app_name|app_id</code> # 查看进程详情<br><code>pm2 monit</code>  # 查看CPU和内存资源占用</p>\n<h5 id=\"8-启动-HTTP-服务\"><a href=\"#8-启动-HTTP-服务\" class=\"headerlink\" title=\"8. 启动 HTTP 服务\"></a>8. 启动 HTTP 服务</h5><p><code>pm2 serve|expose [options] [path] [port]</code></p>\n<p>例如 <code>pm2 serve ./dist 8888</code>，在 dist 目录启动 http 服务，端口号为 8888</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"pm2-常用命令\"><a href=\"#pm2-常用命令\" class=\"headerlink\" title=\"pm2 常用命令\"></a>pm2 常用命令</h1><h3 id=\"1、node守护进程比较\"><a href=\"#1、node守护进程比较\" class=\"headerlink\" title=\"1、node守护进程比较\"></a>1、node守护进程比较</h3><p><strong>node 守护进程比较</strong></p>\n<ul>\n<li>nodemon：开发环境使用，修改后自动重启。</li>\n<li>forever：管理多个站点，每个站点访问量不大，不需要监控。</li>\n<li>pm2：网站访问量比较大，需要完整的监控界面。</li>\n</ul>\n<h3 id=\"pm2主要特性\"><a href=\"#pm2主要特性\" class=\"headerlink\" title=\"pm2主要特性\"></a>pm2主要特性</h3><ul>\n<li>内建负载均衡（使用Node cluster 集群模块）</li>\n<li>后台运行</li>\n<li>0 秒停机重载</li>\n<li>开机自启动脚本</li>\n<li>停止不稳定的进程（避免无限循环）</li>\n<li>控制台检测</li>\n<li>提供远程控制和实时的接口API (允许和PM2进程管理器交互)</li>\n</ul>\n<h3 id=\"pm2-常用命令-1\"><a href=\"#pm2-常用命令-1\" class=\"headerlink\" title=\"pm2 常用命令\"></a>pm2 常用命令</h3><h5 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1. 安装\"></a>1. 安装</h5><p><code>npm install -g pm2</code></p>\n<h5 id=\"2-单个启动\"><a href=\"#2-单个启动\" class=\"headerlink\" title=\"2. 单个启动\"></a>2. 单个启动</h5><p><code>pm2 start app.js</code>  # 启动<br><code>pm2 start app.js -i 4</code> # 启动4个应用实例，自动负载均衡</p>\n<p><code>pm2 start app.js --watch</code> # 监听文件变化并重启</p>\n<h3 id=\"3-批量重启\"><a href=\"#3-批量重启\" class=\"headerlink\" title=\"3. 批量重启\"></a>3. 批量重启</h3><p>使用 <code>pm2 ecosystem</code> 或 <code>pm2 init</code> 会生成 <code>ecosystem.config.js</code> 文件</p>\n<p>然后运行 <code>pm2 start ecosystem.config.js --env dev</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  apps : [&#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;app&#x27;</span>,</span><br><span class=\"line\">    script: <span class=\"string\">&#x27;./app.js&#x27;</span>,</span><br><span class=\"line\">    env_dev: &#123;</span><br><span class=\"line\">      NODE_ENV: <span class=\"string\">&#x27;dev&#x27;</span>, <span class=\"comment\">// 环境参数，当前指定为生产环境 process.env.NODE_ENV</span></span><br><span class=\"line\">      REMOTE_ADDR: <span class=\"string\">&#x27;https://www.test.com&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    env_sit: &#123;</span><br><span class=\"line\">      NODE_ENV: <span class=\"string\">&#x27;sit&#x27;</span>,</span><br><span class=\"line\">      REMOTE_ADDR: <span class=\"string\">&#x27;https://www.test.com&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    env_prod: &#123;</span><br><span class=\"line\">      NODE_ENV: <span class=\"string\">&#x27;prod&#x27;</span>,</span><br><span class=\"line\">      REMOTE_ADDR: <span class=\"string\">&#x27;https://www.test.com&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">     name: <span class=\"string\">&#x27;worker&#x27;</span>,</span><br><span class=\"line\">     script: <span class=\"string\">&#x27;worker.js&#x27;</span></span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4-重启\"><a href=\"#4-重启\" class=\"headerlink\" title=\"4. 重启\"></a>4. 重启</h5><p><code>pm2 restart app_id | app_name</code> # 重启<br><code>pm2 restart all</code> # 重启所有进程，相当stop+start<br><code>pm2 reload all</code> # 0秒停机重载进程 (用于不间断进程)</p>\n<h5 id=\"5-停止\"><a href=\"#5-停止\" class=\"headerlink\" title=\"5. 停止\"></a>5. 停止</h5><p><code>pm2 stop app_id | app_name</code> # 重启<br><code>pm2 stop all</code> # 重启所有进程，相当stop+start</p>\n<h5 id=\"6-删除\"><a href=\"#6-删除\" class=\"headerlink\" title=\"6. 删除\"></a>6. 删除</h5><p><code>pm2 delete app_id | app_name</code>  # 从列表中删除指定的进程<br><code>pm2 delete all</code> # 从列表中删除全部进程<br><code>pm2 kill</code> # 杀死守护进程</p>\n<h5 id=\"7-查看\"><a href=\"#7-查看\" class=\"headerlink\" title=\"7. 查看\"></a>7. 查看</h5><p><code>pm2 list</code> # 查看进程<br><code>pm2 logs</code> # 查看日志<br><code>pm2 show app_name|app_id</code> # 查看进程详情<br><code>pm2 monit</code>  # 查看CPU和内存资源占用</p>\n<h5 id=\"8-启动-HTTP-服务\"><a href=\"#8-启动-HTTP-服务\" class=\"headerlink\" title=\"8. 启动 HTTP 服务\"></a>8. 启动 HTTP 服务</h5><p><code>pm2 serve|expose [options] [path] [port]</code></p>\n<p>例如 <code>pm2 serve ./dist 8888</code>，在 dist 目录启动 http 服务，端口号为 8888</p>\n"},{"title":"JavaScript 属性描述符","date":"2021-04-27T12:24:48.000Z","_content":"\n# 属性描述符\n\n用来描述属性的属性\n\n* 数据属性\n  * `value`：该属性对应的值\n  * `writable`：该属性是否可写\n  * `enumerable`：该属性是否能被枚举（ `for...in` 循环和 `Object.keys()` ）\n  * `configurable`：该属性是否可配置（控制 `writable`、`enumerable`等属性）\n* 访问器属性\n  * `set()`：调用赋值运算符时，执行对应的方法\n  * `get()`：调用.运算符时，执行对应的方法\n\n**note：**\n`value`、`writable` 不可与 `set()`、`get()` 同时存在\n\n```js\nvar obj = {\n  name: \"xxb\"\n};\n\nObject.defineProperty(obj, \"age\", {\n  enumerable: true,\n  configurable: true,\n  get: function () {\n    console.log(\"---\");\n    return 18;\n  },\n  set: function (newVal) {\n    console.log(\"+++++\");\n  }\n});\nobj.age = 1231231;\n```","source":"_posts/JavaScript/JavaScript 属性描述符.md","raw":"---\ntitle: JavaScript 属性描述符\ncategories: JavaScript\ntags: [JavaScript 基础]\ndate: 2021-04-27 20:24:48\n---\n\n# 属性描述符\n\n用来描述属性的属性\n\n* 数据属性\n  * `value`：该属性对应的值\n  * `writable`：该属性是否可写\n  * `enumerable`：该属性是否能被枚举（ `for...in` 循环和 `Object.keys()` ）\n  * `configurable`：该属性是否可配置（控制 `writable`、`enumerable`等属性）\n* 访问器属性\n  * `set()`：调用赋值运算符时，执行对应的方法\n  * `get()`：调用.运算符时，执行对应的方法\n\n**note：**\n`value`、`writable` 不可与 `set()`、`get()` 同时存在\n\n```js\nvar obj = {\n  name: \"xxb\"\n};\n\nObject.defineProperty(obj, \"age\", {\n  enumerable: true,\n  configurable: true,\n  get: function () {\n    console.log(\"---\");\n    return 18;\n  },\n  set: function (newVal) {\n    console.log(\"+++++\");\n  }\n});\nobj.age = 1231231;\n```","slug":"JavaScript/JavaScript 属性描述符","published":1,"updated":"2021-04-27T12:03:52.318Z","_id":"cknzz6sd50000is6retamarf5","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"属性描述符\"><a href=\"#属性描述符\" class=\"headerlink\" title=\"属性描述符\"></a>属性描述符</h1><p>用来描述属性的属性</p>\n<ul>\n<li>数据属性<ul>\n<li><code>value</code>：该属性对应的值</li>\n<li><code>writable</code>：该属性是否可写</li>\n<li><code>enumerable</code>：该属性是否能被枚举（ <code>for...in</code> 循环和 <code>Object.keys()</code> ）</li>\n<li><code>configurable</code>：该属性是否可配置（控制 <code>writable</code>、<code>enumerable</code>等属性）</li>\n</ul>\n</li>\n<li>访问器属性<ul>\n<li><code>set()</code>：调用赋值运算符时，执行对应的方法</li>\n<li><code>get()</code>：调用.运算符时，执行对应的方法</li>\n</ul>\n</li>\n</ul>\n<p><strong>note：</strong><br><code>value</code>、<code>writable</code> 不可与 <code>set()</code>、<code>get()</code> 同时存在</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">&quot;xxb&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(obj, <span class=\"string\">&quot;age&quot;</span>, &#123;</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;---&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">18</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  set: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newVal</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;+++++&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">obj.age = <span class=\"number\">1231231</span>;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"属性描述符\"><a href=\"#属性描述符\" class=\"headerlink\" title=\"属性描述符\"></a>属性描述符</h1><p>用来描述属性的属性</p>\n<ul>\n<li>数据属性<ul>\n<li><code>value</code>：该属性对应的值</li>\n<li><code>writable</code>：该属性是否可写</li>\n<li><code>enumerable</code>：该属性是否能被枚举（ <code>for...in</code> 循环和 <code>Object.keys()</code> ）</li>\n<li><code>configurable</code>：该属性是否可配置（控制 <code>writable</code>、<code>enumerable</code>等属性）</li>\n</ul>\n</li>\n<li>访问器属性<ul>\n<li><code>set()</code>：调用赋值运算符时，执行对应的方法</li>\n<li><code>get()</code>：调用.运算符时，执行对应的方法</li>\n</ul>\n</li>\n</ul>\n<p><strong>note：</strong><br><code>value</code>、<code>writable</code> 不可与 <code>set()</code>、<code>get()</code> 同时存在</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">&quot;xxb&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(obj, <span class=\"string\">&quot;age&quot;</span>, &#123;</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;---&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">18</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  set: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newVal</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;+++++&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">obj.age = <span class=\"number\">1231231</span>;</span><br></pre></td></tr></table></figure>"},{"title":"this 指向","date":"2021-04-27T09:24:48.000Z","_content":"\n# this 指向\n\n### 1、默认绑定\n\n独立函数调用时应用了 `this` 的默认绑定，`this` 指向全局对象\n\n\n> 如果使用严格模式（`use strict;`），那么全局对象将无法使用默认绑定，因此 `this` 会绑定到 `undefined`\n> node 环境中，每个模块被 `function (exports, require, module, __filename, __dirname) {...}` 包裹，所以 `this` 是 `{}` 对象，而函数中的 `this` 是 `global` 对象，而且通过 `var` 声明的变量不会挂载在 `global` 对象下\n\n\n```js\n// ---- 浏览器环境中 非严格模式------\nvar a = 2;\nconsole.log(this); // window 对象\nfunction foo () {\n    console.log(this); // window 对象\n    console.log(this.a); // 2\n}\nfoo(); // 2\n\n```\n\n```js\n// ---- 浏览器环境中 严格模式------\n\"use strict\";\nvar a = 2;\nconsole.log(this); // window 对象\nfunction foo () {\n    console.log(this); // undefined\n    console.log(this.a); // TypeError\n}\nfoo(); // 2\n\n```\n\n```js\n// ---- node 环境中 ------\nvar a = 2;\nconsole.log(this); // {}\nfunction foo () {\n    console.log(this); // global 对象\n    console.log(this.a); // undefined\n}\nfoo(); // 2\n```\n\n### 2、隐式绑定\n\n调用位置是否有上下文对象（即该方法是否被某个对象所拥有），隐式绑定规则会把函数调用中的 `this` 绑定到这个上下文对象。\n\n> 无论是直接在 obj 中定义还是先定义再添加为引用属性，这个函数严格来说都不属于 obj 对象（可以赋值给其他对象，改变上下文），调用位置会使用 obj 上下文来引用函数，因此可以说函数被调用时obj 对象“拥有”它\n\n```js\n// 对象属性引用链中只有最后一层会影响调用位置\nfunction foo() {\n    console.log(this.a);\n}\n\nvar obj2 = {\n    a: 42,\n    foo\n};\nvar obj1 = {\n    a: 2,\n    obj2\n};\n\nobj1.obj2.foo(); // 42\n\n```\n\n```js\n//  ** 隐式丢失 **\n//  被隐式绑定的函数丢失了绑定对象，则这个换上会应用默认绑定，从而把 this 绑定到全局对象或者 undefined \n//  `bar` 是 `obj.foo` 的一个引用，但实际上，它引用的是 `foo` 函数本身，此时的 `bar()` 其实是一个不带任何修饰的函数调用，应用了默认绑定。\nvar obj = {\n    a: 2,\n    foo: function () {\n        console.log(this.a);\n    }\n};\nvar bar = obj.foo; // 函数别名！\nvar a = \"oops, global\"; // a 是全局对象的属性\nbar(); // \"oops, global\"\n\n```\n\n> 回调函数会使 `this` 丢失或被修改\n\n### 3、显式绑定\n\n使用 `call()`、`apply()`、`bind()` 方法绑定 `this` 对象，动态切换上下文。\n\n```js\n// obj 对象绑定到 foo 函数\nfunction foo() {\n    console.log( this.a );\n}\nvar obj = {\n    a: 2\n};\nfoo.call( obj ); // 2\n\n```\n\n> `bind()` 会返回一个硬编码的新函数，它会把参数设置为 `this` 的上下文并调用原始函数\n\n### 4、new 绑定\n\n发生函数调用时，会进行以下步骤：\n\n1.  创建（或者说构造）一个全新的对象。\n2.  这个新对象会被执行 [[ 原型 ]] 连接。\n3.  这个新对象会绑定到函数调用的 this 。\n4.  如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。\n\n```js\nfunction foo(a) {\n    this.a = a;\n}\nvar bar = new foo(2);\nconsole.log( bar.a ); // 2\n\n```\n\n### 5、箭头函数\n\n箭头函数不使用 `this` 的四种标准规则，而是根据外层的词法作用域（函数或全局）来决定 `this` 。\n\n```js\nfunction foo() {\n  setTimeout(() => {\n    console.log('id:', this.id);\n  }, 100);\n}\nvar id = 21;\nfoo.call({ id: 42 }); // output ------> 42\n\n// ------ 使用 traceur 编译后的代码如下： -----\nfunction foo() {\n  var $__1 = this;\n  setTimeout(function() {\n    console.log('id:', $__1.id);\n  }, 100);\n}\nvar id = 21;\nfoo({id: 42});  // output ------> 42\n\n```\n\n### 6、常见 this 指向总结\n1.  在全局环境下，即在任何函数体外，`this` 指向全局对象（`window` 、`global`）；\n2.  函数直接调用时，`this` 指向全局对象，如执行函数中嵌套的函数；\n3.  对象方法中的 `this` ，与调用该方法的对象绑定；\n4.  构造函数中的 `this` ，与即将被创建的新对象绑定；\n5.  通过 `call` 和 `apply` 调用，函数中的 `this` 被动态绑定到第一个元素 ；\n6.  通过 `bind` 方法传入对象，函数中`this` 将永久地被绑定到了 `bind` 的第一个参数；\n7.  事件处理函数中的 `this`，指向监听器所在的 `DOM` 元素，与 `event.currentTarget` 一致；\n\n\n### 7、判断 this 指向的步骤 \n1. 首先查看函数调用的位置\n2. 看这个函数是否被显示的使用 `call`、 `apply`、 `bind` 等显示绑定，如果是，则会在代码中明确说明 `this` 的指向，否则进行下一步\n3. 看这个函数是被谁（对象、数组、函数等）调用，如果是用 `.` 操作符调用，则 `this` 指向该对象，否则进行下一步\n4. 是否使用 `new` 关键字调用了该函数，如果是，`this` 指向由 JavaScript 解释器创建的新创建的对象，否则进行下一步\n5. 是否在箭头函数中使用 `this`，如果是，则 `this` 指向父作用域中的上下文对象，否则进行下一步\n6. 如果是使用严格模式，则 `this` 关键字是未定义的，否则 `this` 指向全局对象 `window` 或 `global`\n\n\n### 8、注意事项\n1. 函数的执行过程中调用位置如何决定 `this` 的绑定对象\n2. 如果把 `null` 或者 `undefined` 作为 `this` 的绑定对象传入 `call` 、 `apply` 或者 `bind` ，这些值在调用时会被忽略，实际应用的是默认绑定规则\n3. 绑定优先级：new 绑定 > 显式绑定 > 隐身绑定 > 默认绑定","source":"_posts/JavaScript/this 指向.md","raw":"---\ntitle: this 指向\ncategories: JavaScript\ntags: [JavaScript 原理]\ndate: 2021-04-27 17:24:48\n---\n\n# this 指向\n\n### 1、默认绑定\n\n独立函数调用时应用了 `this` 的默认绑定，`this` 指向全局对象\n\n\n> 如果使用严格模式（`use strict;`），那么全局对象将无法使用默认绑定，因此 `this` 会绑定到 `undefined`\n> node 环境中，每个模块被 `function (exports, require, module, __filename, __dirname) {...}` 包裹，所以 `this` 是 `{}` 对象，而函数中的 `this` 是 `global` 对象，而且通过 `var` 声明的变量不会挂载在 `global` 对象下\n\n\n```js\n// ---- 浏览器环境中 非严格模式------\nvar a = 2;\nconsole.log(this); // window 对象\nfunction foo () {\n    console.log(this); // window 对象\n    console.log(this.a); // 2\n}\nfoo(); // 2\n\n```\n\n```js\n// ---- 浏览器环境中 严格模式------\n\"use strict\";\nvar a = 2;\nconsole.log(this); // window 对象\nfunction foo () {\n    console.log(this); // undefined\n    console.log(this.a); // TypeError\n}\nfoo(); // 2\n\n```\n\n```js\n// ---- node 环境中 ------\nvar a = 2;\nconsole.log(this); // {}\nfunction foo () {\n    console.log(this); // global 对象\n    console.log(this.a); // undefined\n}\nfoo(); // 2\n```\n\n### 2、隐式绑定\n\n调用位置是否有上下文对象（即该方法是否被某个对象所拥有），隐式绑定规则会把函数调用中的 `this` 绑定到这个上下文对象。\n\n> 无论是直接在 obj 中定义还是先定义再添加为引用属性，这个函数严格来说都不属于 obj 对象（可以赋值给其他对象，改变上下文），调用位置会使用 obj 上下文来引用函数，因此可以说函数被调用时obj 对象“拥有”它\n\n```js\n// 对象属性引用链中只有最后一层会影响调用位置\nfunction foo() {\n    console.log(this.a);\n}\n\nvar obj2 = {\n    a: 42,\n    foo\n};\nvar obj1 = {\n    a: 2,\n    obj2\n};\n\nobj1.obj2.foo(); // 42\n\n```\n\n```js\n//  ** 隐式丢失 **\n//  被隐式绑定的函数丢失了绑定对象，则这个换上会应用默认绑定，从而把 this 绑定到全局对象或者 undefined \n//  `bar` 是 `obj.foo` 的一个引用，但实际上，它引用的是 `foo` 函数本身，此时的 `bar()` 其实是一个不带任何修饰的函数调用，应用了默认绑定。\nvar obj = {\n    a: 2,\n    foo: function () {\n        console.log(this.a);\n    }\n};\nvar bar = obj.foo; // 函数别名！\nvar a = \"oops, global\"; // a 是全局对象的属性\nbar(); // \"oops, global\"\n\n```\n\n> 回调函数会使 `this` 丢失或被修改\n\n### 3、显式绑定\n\n使用 `call()`、`apply()`、`bind()` 方法绑定 `this` 对象，动态切换上下文。\n\n```js\n// obj 对象绑定到 foo 函数\nfunction foo() {\n    console.log( this.a );\n}\nvar obj = {\n    a: 2\n};\nfoo.call( obj ); // 2\n\n```\n\n> `bind()` 会返回一个硬编码的新函数，它会把参数设置为 `this` 的上下文并调用原始函数\n\n### 4、new 绑定\n\n发生函数调用时，会进行以下步骤：\n\n1.  创建（或者说构造）一个全新的对象。\n2.  这个新对象会被执行 [[ 原型 ]] 连接。\n3.  这个新对象会绑定到函数调用的 this 。\n4.  如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。\n\n```js\nfunction foo(a) {\n    this.a = a;\n}\nvar bar = new foo(2);\nconsole.log( bar.a ); // 2\n\n```\n\n### 5、箭头函数\n\n箭头函数不使用 `this` 的四种标准规则，而是根据外层的词法作用域（函数或全局）来决定 `this` 。\n\n```js\nfunction foo() {\n  setTimeout(() => {\n    console.log('id:', this.id);\n  }, 100);\n}\nvar id = 21;\nfoo.call({ id: 42 }); // output ------> 42\n\n// ------ 使用 traceur 编译后的代码如下： -----\nfunction foo() {\n  var $__1 = this;\n  setTimeout(function() {\n    console.log('id:', $__1.id);\n  }, 100);\n}\nvar id = 21;\nfoo({id: 42});  // output ------> 42\n\n```\n\n### 6、常见 this 指向总结\n1.  在全局环境下，即在任何函数体外，`this` 指向全局对象（`window` 、`global`）；\n2.  函数直接调用时，`this` 指向全局对象，如执行函数中嵌套的函数；\n3.  对象方法中的 `this` ，与调用该方法的对象绑定；\n4.  构造函数中的 `this` ，与即将被创建的新对象绑定；\n5.  通过 `call` 和 `apply` 调用，函数中的 `this` 被动态绑定到第一个元素 ；\n6.  通过 `bind` 方法传入对象，函数中`this` 将永久地被绑定到了 `bind` 的第一个参数；\n7.  事件处理函数中的 `this`，指向监听器所在的 `DOM` 元素，与 `event.currentTarget` 一致；\n\n\n### 7、判断 this 指向的步骤 \n1. 首先查看函数调用的位置\n2. 看这个函数是否被显示的使用 `call`、 `apply`、 `bind` 等显示绑定，如果是，则会在代码中明确说明 `this` 的指向，否则进行下一步\n3. 看这个函数是被谁（对象、数组、函数等）调用，如果是用 `.` 操作符调用，则 `this` 指向该对象，否则进行下一步\n4. 是否使用 `new` 关键字调用了该函数，如果是，`this` 指向由 JavaScript 解释器创建的新创建的对象，否则进行下一步\n5. 是否在箭头函数中使用 `this`，如果是，则 `this` 指向父作用域中的上下文对象，否则进行下一步\n6. 如果是使用严格模式，则 `this` 关键字是未定义的，否则 `this` 指向全局对象 `window` 或 `global`\n\n\n### 8、注意事项\n1. 函数的执行过程中调用位置如何决定 `this` 的绑定对象\n2. 如果把 `null` 或者 `undefined` 作为 `this` 的绑定对象传入 `call` 、 `apply` 或者 `bind` ，这些值在调用时会被忽略，实际应用的是默认绑定规则\n3. 绑定优先级：new 绑定 > 显式绑定 > 隐身绑定 > 默认绑定","slug":"JavaScript/this 指向","published":1,"updated":"2021-04-27T12:01:49.476Z","_id":"cknzzafoq0006is6r4yqgew4n","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"this-指向\"><a href=\"#this-指向\" class=\"headerlink\" title=\"this 指向\"></a>this 指向</h1><h3 id=\"1、默认绑定\"><a href=\"#1、默认绑定\" class=\"headerlink\" title=\"1、默认绑定\"></a>1、默认绑定</h3><p>独立函数调用时应用了 <code>this</code> 的默认绑定，<code>this</code> 指向全局对象</p>\n<blockquote>\n<p>如果使用严格模式（<code>use strict;</code>），那么全局对象将无法使用默认绑定，因此 <code>this</code> 会绑定到 <code>undefined</code><br>node 环境中，每个模块被 <code>function (exports, require, module, __filename, __dirname) &#123;...&#125;</code> 包裹，所以 <code>this</code> 是 <code>&#123;&#125;</code> 对象，而函数中的 <code>this</code> 是 <code>global</code> 对象，而且通过 <code>var</code> 声明的变量不会挂载在 <code>global</code> 对象下</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ---- 浏览器环境中 非严格模式------</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// window 对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// window 对象</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo(); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ---- 浏览器环境中 严格模式------</span></span><br><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// window 对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// undefined</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a); <span class=\"comment\">// TypeError</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo(); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ---- node 环境中 ------</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// &#123;&#125;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// global 对象</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a); <span class=\"comment\">// undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo(); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、隐式绑定\"><a href=\"#2、隐式绑定\" class=\"headerlink\" title=\"2、隐式绑定\"></a>2、隐式绑定</h3><p>调用位置是否有上下文对象（即该方法是否被某个对象所拥有），隐式绑定规则会把函数调用中的 <code>this</code> 绑定到这个上下文对象。</p>\n<blockquote>\n<p>无论是直接在 obj 中定义还是先定义再添加为引用属性，这个函数严格来说都不属于 obj 对象（可以赋值给其他对象，改变上下文），调用位置会使用 obj 上下文来引用函数，因此可以说函数被调用时obj 对象“拥有”它</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对象属性引用链中只有最后一层会影响调用位置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">    a: <span class=\"number\">42</span>,</span><br><span class=\"line\">    foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">    a: <span class=\"number\">2</span>,</span><br><span class=\"line\">    obj2</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj1.obj2.foo(); <span class=\"comment\">// 42</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  ** 隐式丢失 **</span></span><br><span class=\"line\"><span class=\"comment\">//  被隐式绑定的函数丢失了绑定对象，则这个换上会应用默认绑定，从而把 this 绑定到全局对象或者 undefined </span></span><br><span class=\"line\"><span class=\"comment\">//  `bar` 是 `obj.foo` 的一个引用，但实际上，它引用的是 `foo` 函数本身，此时的 `bar()` 其实是一个不带任何修饰的函数调用，应用了默认绑定。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    a: <span class=\"number\">2</span>,</span><br><span class=\"line\">    foo: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = obj.foo; <span class=\"comment\">// 函数别名！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&quot;oops, global&quot;</span>; <span class=\"comment\">// a 是全局对象的属性</span></span><br><span class=\"line\">bar(); <span class=\"comment\">// &quot;oops, global&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>回调函数会使 <code>this</code> 丢失或被修改</p>\n</blockquote>\n<h3 id=\"3、显式绑定\"><a href=\"#3、显式绑定\" class=\"headerlink\" title=\"3、显式绑定\"></a>3、显式绑定</h3><p>使用 <code>call()</code>、<code>apply()</code>、<code>bind()</code> 方法绑定 <code>this</code> 对象，动态切换上下文。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// obj 对象绑定到 foo 函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( <span class=\"built_in\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">foo.call( obj ); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>bind()</code> 会返回一个硬编码的新函数，它会把参数设置为 <code>this</code> 的上下文并调用原始函数</p>\n</blockquote>\n<h3 id=\"4、new-绑定\"><a href=\"#4、new-绑定\" class=\"headerlink\" title=\"4、new 绑定\"></a>4、new 绑定</h3><p>发生函数调用时，会进行以下步骤：</p>\n<ol>\n<li> 创建（或者说构造）一个全新的对象。</li>\n<li> 这个新对象会被执行 [[ 原型 ]] 连接。</li>\n<li> 这个新对象会绑定到函数调用的 this 。</li>\n<li> 如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.a = a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"keyword\">new</span> foo(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( bar.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5、箭头函数\"><a href=\"#5、箭头函数\" class=\"headerlink\" title=\"5、箭头函数\"></a>5、箭头函数</h3><p>箭头函数不使用 <code>this</code> 的四种标准规则，而是根据外层的词法作用域（函数或全局）来决定 <code>this</code> 。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;id:&#x27;</span>, <span class=\"built_in\">this</span>.id);</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> id = <span class=\"number\">21</span>;</span><br><span class=\"line\">foo.call(&#123; <span class=\"attr\">id</span>: <span class=\"number\">42</span> &#125;); <span class=\"comment\">// output ------&gt; 42</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ------ 使用 traceur 编译后的代码如下： -----</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> $__1 = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;id:&#x27;</span>, $__1.id);</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> id = <span class=\"number\">21</span>;</span><br><span class=\"line\">foo(&#123;<span class=\"attr\">id</span>: <span class=\"number\">42</span>&#125;);  <span class=\"comment\">// output ------&gt; 42</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6、常见-this-指向总结\"><a href=\"#6、常见-this-指向总结\" class=\"headerlink\" title=\"6、常见 this 指向总结\"></a>6、常见 this 指向总结</h3><ol>\n<li> 在全局环境下，即在任何函数体外，<code>this</code> 指向全局对象（<code>window</code> 、<code>global</code>）；</li>\n<li> 函数直接调用时，<code>this</code> 指向全局对象，如执行函数中嵌套的函数；</li>\n<li> 对象方法中的 <code>this</code> ，与调用该方法的对象绑定；</li>\n<li> 构造函数中的 <code>this</code> ，与即将被创建的新对象绑定；</li>\n<li> 通过 <code>call</code> 和 <code>apply</code> 调用，函数中的 <code>this</code> 被动态绑定到第一个元素 ；</li>\n<li> 通过 <code>bind</code> 方法传入对象，函数中<code>this</code> 将永久地被绑定到了 <code>bind</code> 的第一个参数；</li>\n<li> 事件处理函数中的 <code>this</code>，指向监听器所在的 <code>DOM</code> 元素，与 <code>event.currentTarget</code> 一致；</li>\n</ol>\n<h3 id=\"7、判断-this-指向的步骤\"><a href=\"#7、判断-this-指向的步骤\" class=\"headerlink\" title=\"7、判断 this 指向的步骤\"></a>7、判断 this 指向的步骤</h3><ol>\n<li>首先查看函数调用的位置</li>\n<li>看这个函数是否被显示的使用 <code>call</code>、 <code>apply</code>、 <code>bind</code> 等显示绑定，如果是，则会在代码中明确说明 <code>this</code> 的指向，否则进行下一步</li>\n<li>看这个函数是被谁（对象、数组、函数等）调用，如果是用 <code>.</code> 操作符调用，则 <code>this</code> 指向该对象，否则进行下一步</li>\n<li>是否使用 <code>new</code> 关键字调用了该函数，如果是，<code>this</code> 指向由 JavaScript 解释器创建的新创建的对象，否则进行下一步</li>\n<li>是否在箭头函数中使用 <code>this</code>，如果是，则 <code>this</code> 指向父作用域中的上下文对象，否则进行下一步</li>\n<li>如果是使用严格模式，则 <code>this</code> 关键字是未定义的，否则 <code>this</code> 指向全局对象 <code>window</code> 或 <code>global</code></li>\n</ol>\n<h3 id=\"8、注意事项\"><a href=\"#8、注意事项\" class=\"headerlink\" title=\"8、注意事项\"></a>8、注意事项</h3><ol>\n<li>函数的执行过程中调用位置如何决定 <code>this</code> 的绑定对象</li>\n<li>如果把 <code>null</code> 或者 <code>undefined</code> 作为 <code>this</code> 的绑定对象传入 <code>call</code> 、 <code>apply</code> 或者 <code>bind</code> ，这些值在调用时会被忽略，实际应用的是默认绑定规则</li>\n<li>绑定优先级：new 绑定 &gt; 显式绑定 &gt; 隐身绑定 &gt; 默认绑定</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"this-指向\"><a href=\"#this-指向\" class=\"headerlink\" title=\"this 指向\"></a>this 指向</h1><h3 id=\"1、默认绑定\"><a href=\"#1、默认绑定\" class=\"headerlink\" title=\"1、默认绑定\"></a>1、默认绑定</h3><p>独立函数调用时应用了 <code>this</code> 的默认绑定，<code>this</code> 指向全局对象</p>\n<blockquote>\n<p>如果使用严格模式（<code>use strict;</code>），那么全局对象将无法使用默认绑定，因此 <code>this</code> 会绑定到 <code>undefined</code><br>node 环境中，每个模块被 <code>function (exports, require, module, __filename, __dirname) &#123;...&#125;</code> 包裹，所以 <code>this</code> 是 <code>&#123;&#125;</code> 对象，而函数中的 <code>this</code> 是 <code>global</code> 对象，而且通过 <code>var</code> 声明的变量不会挂载在 <code>global</code> 对象下</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ---- 浏览器环境中 非严格模式------</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// window 对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// window 对象</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo(); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ---- 浏览器环境中 严格模式------</span></span><br><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// window 对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// undefined</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a); <span class=\"comment\">// TypeError</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo(); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ---- node 环境中 ------</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// &#123;&#125;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>); <span class=\"comment\">// global 对象</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a); <span class=\"comment\">// undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo(); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、隐式绑定\"><a href=\"#2、隐式绑定\" class=\"headerlink\" title=\"2、隐式绑定\"></a>2、隐式绑定</h3><p>调用位置是否有上下文对象（即该方法是否被某个对象所拥有），隐式绑定规则会把函数调用中的 <code>this</code> 绑定到这个上下文对象。</p>\n<blockquote>\n<p>无论是直接在 obj 中定义还是先定义再添加为引用属性，这个函数严格来说都不属于 obj 对象（可以赋值给其他对象，改变上下文），调用位置会使用 obj 上下文来引用函数，因此可以说函数被调用时obj 对象“拥有”它</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对象属性引用链中只有最后一层会影响调用位置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">    a: <span class=\"number\">42</span>,</span><br><span class=\"line\">    foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">    a: <span class=\"number\">2</span>,</span><br><span class=\"line\">    obj2</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj1.obj2.foo(); <span class=\"comment\">// 42</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  ** 隐式丢失 **</span></span><br><span class=\"line\"><span class=\"comment\">//  被隐式绑定的函数丢失了绑定对象，则这个换上会应用默认绑定，从而把 this 绑定到全局对象或者 undefined </span></span><br><span class=\"line\"><span class=\"comment\">//  `bar` 是 `obj.foo` 的一个引用，但实际上，它引用的是 `foo` 函数本身，此时的 `bar()` 其实是一个不带任何修饰的函数调用，应用了默认绑定。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    a: <span class=\"number\">2</span>,</span><br><span class=\"line\">    foo: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = obj.foo; <span class=\"comment\">// 函数别名！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&quot;oops, global&quot;</span>; <span class=\"comment\">// a 是全局对象的属性</span></span><br><span class=\"line\">bar(); <span class=\"comment\">// &quot;oops, global&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>回调函数会使 <code>this</code> 丢失或被修改</p>\n</blockquote>\n<h3 id=\"3、显式绑定\"><a href=\"#3、显式绑定\" class=\"headerlink\" title=\"3、显式绑定\"></a>3、显式绑定</h3><p>使用 <code>call()</code>、<code>apply()</code>、<code>bind()</code> 方法绑定 <code>this</code> 对象，动态切换上下文。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// obj 对象绑定到 foo 函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( <span class=\"built_in\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">foo.call( obj ); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>bind()</code> 会返回一个硬编码的新函数，它会把参数设置为 <code>this</code> 的上下文并调用原始函数</p>\n</blockquote>\n<h3 id=\"4、new-绑定\"><a href=\"#4、new-绑定\" class=\"headerlink\" title=\"4、new 绑定\"></a>4、new 绑定</h3><p>发生函数调用时，会进行以下步骤：</p>\n<ol>\n<li> 创建（或者说构造）一个全新的对象。</li>\n<li> 这个新对象会被执行 [[ 原型 ]] 连接。</li>\n<li> 这个新对象会绑定到函数调用的 this 。</li>\n<li> 如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.a = a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"keyword\">new</span> foo(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( bar.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5、箭头函数\"><a href=\"#5、箭头函数\" class=\"headerlink\" title=\"5、箭头函数\"></a>5、箭头函数</h3><p>箭头函数不使用 <code>this</code> 的四种标准规则，而是根据外层的词法作用域（函数或全局）来决定 <code>this</code> 。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;id:&#x27;</span>, <span class=\"built_in\">this</span>.id);</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> id = <span class=\"number\">21</span>;</span><br><span class=\"line\">foo.call(&#123; <span class=\"attr\">id</span>: <span class=\"number\">42</span> &#125;); <span class=\"comment\">// output ------&gt; 42</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ------ 使用 traceur 编译后的代码如下： -----</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> $__1 = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;id:&#x27;</span>, $__1.id);</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> id = <span class=\"number\">21</span>;</span><br><span class=\"line\">foo(&#123;<span class=\"attr\">id</span>: <span class=\"number\">42</span>&#125;);  <span class=\"comment\">// output ------&gt; 42</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6、常见-this-指向总结\"><a href=\"#6、常见-this-指向总结\" class=\"headerlink\" title=\"6、常见 this 指向总结\"></a>6、常见 this 指向总结</h3><ol>\n<li> 在全局环境下，即在任何函数体外，<code>this</code> 指向全局对象（<code>window</code> 、<code>global</code>）；</li>\n<li> 函数直接调用时，<code>this</code> 指向全局对象，如执行函数中嵌套的函数；</li>\n<li> 对象方法中的 <code>this</code> ，与调用该方法的对象绑定；</li>\n<li> 构造函数中的 <code>this</code> ，与即将被创建的新对象绑定；</li>\n<li> 通过 <code>call</code> 和 <code>apply</code> 调用，函数中的 <code>this</code> 被动态绑定到第一个元素 ；</li>\n<li> 通过 <code>bind</code> 方法传入对象，函数中<code>this</code> 将永久地被绑定到了 <code>bind</code> 的第一个参数；</li>\n<li> 事件处理函数中的 <code>this</code>，指向监听器所在的 <code>DOM</code> 元素，与 <code>event.currentTarget</code> 一致；</li>\n</ol>\n<h3 id=\"7、判断-this-指向的步骤\"><a href=\"#7、判断-this-指向的步骤\" class=\"headerlink\" title=\"7、判断 this 指向的步骤\"></a>7、判断 this 指向的步骤</h3><ol>\n<li>首先查看函数调用的位置</li>\n<li>看这个函数是否被显示的使用 <code>call</code>、 <code>apply</code>、 <code>bind</code> 等显示绑定，如果是，则会在代码中明确说明 <code>this</code> 的指向，否则进行下一步</li>\n<li>看这个函数是被谁（对象、数组、函数等）调用，如果是用 <code>.</code> 操作符调用，则 <code>this</code> 指向该对象，否则进行下一步</li>\n<li>是否使用 <code>new</code> 关键字调用了该函数，如果是，<code>this</code> 指向由 JavaScript 解释器创建的新创建的对象，否则进行下一步</li>\n<li>是否在箭头函数中使用 <code>this</code>，如果是，则 <code>this</code> 指向父作用域中的上下文对象，否则进行下一步</li>\n<li>如果是使用严格模式，则 <code>this</code> 关键字是未定义的，否则 <code>this</code> 指向全局对象 <code>window</code> 或 <code>global</code></li>\n</ol>\n<h3 id=\"8、注意事项\"><a href=\"#8、注意事项\" class=\"headerlink\" title=\"8、注意事项\"></a>8、注意事项</h3><ol>\n<li>函数的执行过程中调用位置如何决定 <code>this</code> 的绑定对象</li>\n<li>如果把 <code>null</code> 或者 <code>undefined</code> 作为 <code>this</code> 的绑定对象传入 <code>call</code> 、 <code>apply</code> 或者 <code>bind</code> ，这些值在调用时会被忽略，实际应用的是默认绑定规则</li>\n<li>绑定优先级：new 绑定 &gt; 显式绑定 &gt; 隐身绑定 &gt; 默认绑定</li>\n</ol>\n"},{"title":"可视化交互","date":"2021-03-23T16:00:00.000Z","_content":"\n# 可视化交互\n\n### 1、事件类型\n* 鼠标事件\n    * `click` 单击\n    * `dbclick` 双击\n    * `mousemove` 鼠标移动\n    * `mouseenter` 鼠标进入\n    * `mouseleave` 鼠标离开\n    * `mouseover` 鼠标滑入\n    * `mouseout` 鼠标滑出\n    * `mousedown` 鼠标按下\n    * `mouseup` 鼠标弹起\n* 触摸事件\n    * `touchstart` 触摸点在屏幕上接触时\n    * `touchmove` 触摸点在屏幕上移动时\n    * `touchend` 触摸点在屏幕上移开时\n* 缩放、平移事件 `d3.behavior.zoom`\n    * `d3.behavior.zoom` 创建一个缩放行为\n    * `zoom(selection)` 将此缩放行为应用到 selection 上（一般使用 `selection.call(zoom)`）\n    * `zoom.on(type, listener)` 设置事件类型和监听器\n        * `zoomstart` 缩放开始时\n        * `zoom` 缩放中\n        * `zoomend` 缩放结束时\n    * `zoom.scaleExtent()` 设置缩放的最小、最大值，默认为 `[0, +∞]`\n    * `zoom.scale()` 设置初始的缩放大小\n    * `zoom.translate()` 设置当前缩放的平移向量，默认为 `[0, 0]`\n    * `zoom.duration()` 取得或设置双击事件的过渡持续的时间\n    * `zoom.x()` 设置 X轴 方向的比例尺\n    * `zoom.y()` 设置 Y轴 方向的比例尺\n* 拖拽事件 `d3.behavior.drag`\n    * `d3.behavior.darg` 创建一个拖拽行为\n    * `darg(selection)` 将此拖拽行为应用到 selection 上（一般使用 `selection.call(darg)`）\n    * `darg.on(type, listener)` 设置事件类型和监听器\n        * `dargstart` 拖拽开始时\n        * `darg` 拖拽中\n        * `dargend` 拖拽结束时\n    * `dray.origin()` 设置拖动行为的原点\n\n### 2、事件对象 `d3.event`\n\n说明  `d3.evnet` 对象是 DOM 事件，并实现了标准事件字段\n\n* `event.x`: 相对于可视区的坐标（与 `event.clientX` 一样）\n* `event.clientX`: 相对于可视区的坐标（与滚动的距离无关，以浏览器左上角为基准）\n* `event.offsetX`: 相对于容器的坐标（鼠标与触发事件的元素的距离）\n* `event.pageX`: 鼠标位置相对于文档的坐标（包含滚动的距离，以文档左上角为基准）\n* `event.screenX`: 鼠标位置相对于屏幕 X 轴的坐标（与滚动的距离无关，以屏幕左上角为基准）\n* `event.translate`: 返回鼠标位移的数据，如 `[100, 20]`\n* `event.scale`: 返回鼠标缩放的大小，如 `1.2`\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .circle-item {\n            fill: none;\n            stroke: #090;\n            stroke-width: 4;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = document.documentElement.clientWidth;\n        let h = document.documentElement.clientHeight;\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        svg.append('text')\n            .attr('x', 10)\n            .attr('y', 24)\n            .attr('class', 'mouse-info');\n\n        function updateInfo(str) {\n            svg.select('.mouse-info').text(str);\n        }\n\n        svg.on('mousemove', () => {\n            let event = d3.event;\n            let str = `x ：${event.offsetX} \\n Y: ${event.offsetY}`;\n            updateInfo(str);\n        });\n        \n        svg.on('click', function () {\n            let event = d3.event;\n            console.log(event);\n            let x = event.offsetX;\n            let y = event.offsetY;\n\n            let data = [1, 2, 3, 4];\n\n            svg.selectAll('cirle')\n                .data(data)\n                .enter()\n                .append('circle')\n                .attr('class', 'circle-item')\n                .attr('cx', x)\n                .attr('cy', y)\n                .attr('r', 0)\n            .transition()\n                .duration(2000)\n                .delay((d, i) => Math.pow(i + 1, 2) * 100)\n                .ease('ease-out')\n                .attr('r', 500)\n                .style('stroke-width', 1)\n                .style('opacity', 0)\n                .each('end', function () {\n                    d3.select(this).remove();\n                });\n                \n        });\n    </script>\n\n</body>\n\n</html>\n```\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .circle-item {\n            opacity: .5;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 800;\n        let h = 600;\n        let r = 60;\n\n        let data = [{\n            x: w / 2 - r,\n            y: w / 2 - r\n        }, {\n            x: w / 2 - r,\n            y: w / 2 + r\n        }, {\n            x: w / 2 + r,\n            y: w / 2 - r\n\n        }, {\n            x: w / 2 + r,\n            y: w / 2 + r\n        }];\n\n        function dragHandler() {\n            let event = d3.event;\n            d3.select(this)\n                .attr('transform', `translate(${event.x}, ${event.y})`);\n        }\n        \n        let drag = d3.behavior.drag().on('drag', dragHandler);\n        let color = d3.scale.category10();\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n            \n            \n        let container = svg.append('g')\n            .attr('class', 'container');\n            \n            \n        container.selectAll('circle')\n            .data(data)\n            .enter()\n            .append('circle')\n            .attr('class', 'circle-item')\n            .attr('transform', d => `translate(${d.x}, ${d.y})`)\n            .attr('r', 60)\n            .style('fill', (d, i) => color(i))\n            .call(drag);\n    </script>\n\n</body>\n\n</html>\n```\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .circle-item {\n            fill: #090;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 800;\n        let h = 600;\n        let r = 60;\n        \n        let data = [{\n            x: w / 2 - r,\n            y: w / 2 - r\n        }, {\n            x: w / 2 - r,\n            y: w / 2 + r\n        }, {\n            x: w / 2 + r,\n            y: w / 2 - r\n            \n        }, {\n            x: w / 2 + r,\n            y: w / 2 + r\n        }];\n\n        function zoomHandler () {\n            let event = d3.event;\n            d3.select('.container')\n                .attr('transform', `translate(${event.translate}) scale(${event.scale})`);\n        }\n\n        let zoom = d3.behavior.zoom()\n            .scaleExtent([1, 10])\n            .on('zoom', zoomHandler);\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h)\n            .call(zoom);\n\n\n        let container = svg.append('g')\n            .attr('class', 'container');\n\n\n        container.selectAll('circle')\n            .data(data)\n            .enter()\n            .append('circle')\n            .attr('class', 'circle-item')\n            .attr('transform', d => `translate(${d.x}, ${d.y})`)\n            .attr('r', 60);\n    </script>\n\n</body>\n\n</html>\n```","source":"_posts/D3.js/可视化交互.md","raw":"---\ntitle: 可视化交互\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 可视化交互\n\n### 1、事件类型\n* 鼠标事件\n    * `click` 单击\n    * `dbclick` 双击\n    * `mousemove` 鼠标移动\n    * `mouseenter` 鼠标进入\n    * `mouseleave` 鼠标离开\n    * `mouseover` 鼠标滑入\n    * `mouseout` 鼠标滑出\n    * `mousedown` 鼠标按下\n    * `mouseup` 鼠标弹起\n* 触摸事件\n    * `touchstart` 触摸点在屏幕上接触时\n    * `touchmove` 触摸点在屏幕上移动时\n    * `touchend` 触摸点在屏幕上移开时\n* 缩放、平移事件 `d3.behavior.zoom`\n    * `d3.behavior.zoom` 创建一个缩放行为\n    * `zoom(selection)` 将此缩放行为应用到 selection 上（一般使用 `selection.call(zoom)`）\n    * `zoom.on(type, listener)` 设置事件类型和监听器\n        * `zoomstart` 缩放开始时\n        * `zoom` 缩放中\n        * `zoomend` 缩放结束时\n    * `zoom.scaleExtent()` 设置缩放的最小、最大值，默认为 `[0, +∞]`\n    * `zoom.scale()` 设置初始的缩放大小\n    * `zoom.translate()` 设置当前缩放的平移向量，默认为 `[0, 0]`\n    * `zoom.duration()` 取得或设置双击事件的过渡持续的时间\n    * `zoom.x()` 设置 X轴 方向的比例尺\n    * `zoom.y()` 设置 Y轴 方向的比例尺\n* 拖拽事件 `d3.behavior.drag`\n    * `d3.behavior.darg` 创建一个拖拽行为\n    * `darg(selection)` 将此拖拽行为应用到 selection 上（一般使用 `selection.call(darg)`）\n    * `darg.on(type, listener)` 设置事件类型和监听器\n        * `dargstart` 拖拽开始时\n        * `darg` 拖拽中\n        * `dargend` 拖拽结束时\n    * `dray.origin()` 设置拖动行为的原点\n\n### 2、事件对象 `d3.event`\n\n说明  `d3.evnet` 对象是 DOM 事件，并实现了标准事件字段\n\n* `event.x`: 相对于可视区的坐标（与 `event.clientX` 一样）\n* `event.clientX`: 相对于可视区的坐标（与滚动的距离无关，以浏览器左上角为基准）\n* `event.offsetX`: 相对于容器的坐标（鼠标与触发事件的元素的距离）\n* `event.pageX`: 鼠标位置相对于文档的坐标（包含滚动的距离，以文档左上角为基准）\n* `event.screenX`: 鼠标位置相对于屏幕 X 轴的坐标（与滚动的距离无关，以屏幕左上角为基准）\n* `event.translate`: 返回鼠标位移的数据，如 `[100, 20]`\n* `event.scale`: 返回鼠标缩放的大小，如 `1.2`\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .circle-item {\n            fill: none;\n            stroke: #090;\n            stroke-width: 4;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = document.documentElement.clientWidth;\n        let h = document.documentElement.clientHeight;\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        svg.append('text')\n            .attr('x', 10)\n            .attr('y', 24)\n            .attr('class', 'mouse-info');\n\n        function updateInfo(str) {\n            svg.select('.mouse-info').text(str);\n        }\n\n        svg.on('mousemove', () => {\n            let event = d3.event;\n            let str = `x ：${event.offsetX} \\n Y: ${event.offsetY}`;\n            updateInfo(str);\n        });\n        \n        svg.on('click', function () {\n            let event = d3.event;\n            console.log(event);\n            let x = event.offsetX;\n            let y = event.offsetY;\n\n            let data = [1, 2, 3, 4];\n\n            svg.selectAll('cirle')\n                .data(data)\n                .enter()\n                .append('circle')\n                .attr('class', 'circle-item')\n                .attr('cx', x)\n                .attr('cy', y)\n                .attr('r', 0)\n            .transition()\n                .duration(2000)\n                .delay((d, i) => Math.pow(i + 1, 2) * 100)\n                .ease('ease-out')\n                .attr('r', 500)\n                .style('stroke-width', 1)\n                .style('opacity', 0)\n                .each('end', function () {\n                    d3.select(this).remove();\n                });\n                \n        });\n    </script>\n\n</body>\n\n</html>\n```\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .circle-item {\n            opacity: .5;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 800;\n        let h = 600;\n        let r = 60;\n\n        let data = [{\n            x: w / 2 - r,\n            y: w / 2 - r\n        }, {\n            x: w / 2 - r,\n            y: w / 2 + r\n        }, {\n            x: w / 2 + r,\n            y: w / 2 - r\n\n        }, {\n            x: w / 2 + r,\n            y: w / 2 + r\n        }];\n\n        function dragHandler() {\n            let event = d3.event;\n            d3.select(this)\n                .attr('transform', `translate(${event.x}, ${event.y})`);\n        }\n        \n        let drag = d3.behavior.drag().on('drag', dragHandler);\n        let color = d3.scale.category10();\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n            \n            \n        let container = svg.append('g')\n            .attr('class', 'container');\n            \n            \n        container.selectAll('circle')\n            .data(data)\n            .enter()\n            .append('circle')\n            .attr('class', 'circle-item')\n            .attr('transform', d => `translate(${d.x}, ${d.y})`)\n            .attr('r', 60)\n            .style('fill', (d, i) => color(i))\n            .call(drag);\n    </script>\n\n</body>\n\n</html>\n```\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .circle-item {\n            fill: #090;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 800;\n        let h = 600;\n        let r = 60;\n        \n        let data = [{\n            x: w / 2 - r,\n            y: w / 2 - r\n        }, {\n            x: w / 2 - r,\n            y: w / 2 + r\n        }, {\n            x: w / 2 + r,\n            y: w / 2 - r\n            \n        }, {\n            x: w / 2 + r,\n            y: w / 2 + r\n        }];\n\n        function zoomHandler () {\n            let event = d3.event;\n            d3.select('.container')\n                .attr('transform', `translate(${event.translate}) scale(${event.scale})`);\n        }\n\n        let zoom = d3.behavior.zoom()\n            .scaleExtent([1, 10])\n            .on('zoom', zoomHandler);\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h)\n            .call(zoom);\n\n\n        let container = svg.append('g')\n            .attr('class', 'container');\n\n\n        container.selectAll('circle')\n            .data(data)\n            .enter()\n            .append('circle')\n            .attr('class', 'circle-item')\n            .attr('transform', d => `translate(${d.x}, ${d.y})`)\n            .attr('r', 60);\n    </script>\n\n</body>\n\n</html>\n```","slug":"D3.js/可视化交互","published":1,"updated":"2021-04-28T02:31:14.932Z","_id":"cko0u126e0000y26r9x4s5a3h","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"可视化交互\"><a href=\"#可视化交互\" class=\"headerlink\" title=\"可视化交互\"></a>可视化交互</h1><h3 id=\"1、事件类型\"><a href=\"#1、事件类型\" class=\"headerlink\" title=\"1、事件类型\"></a>1、事件类型</h3><ul>\n<li>鼠标事件<ul>\n<li><code>click</code> 单击</li>\n<li><code>dbclick</code> 双击</li>\n<li><code>mousemove</code> 鼠标移动</li>\n<li><code>mouseenter</code> 鼠标进入</li>\n<li><code>mouseleave</code> 鼠标离开</li>\n<li><code>mouseover</code> 鼠标滑入</li>\n<li><code>mouseout</code> 鼠标滑出</li>\n<li><code>mousedown</code> 鼠标按下</li>\n<li><code>mouseup</code> 鼠标弹起</li>\n</ul>\n</li>\n<li>触摸事件<ul>\n<li><code>touchstart</code> 触摸点在屏幕上接触时</li>\n<li><code>touchmove</code> 触摸点在屏幕上移动时</li>\n<li><code>touchend</code> 触摸点在屏幕上移开时</li>\n</ul>\n</li>\n<li>缩放、平移事件 <code>d3.behavior.zoom</code><ul>\n<li><code>d3.behavior.zoom</code> 创建一个缩放行为</li>\n<li><code>zoom(selection)</code> 将此缩放行为应用到 selection 上（一般使用 <code>selection.call(zoom)</code>）</li>\n<li><code>zoom.on(type, listener)</code> 设置事件类型和监听器<ul>\n<li><code>zoomstart</code> 缩放开始时</li>\n<li><code>zoom</code> 缩放中</li>\n<li><code>zoomend</code> 缩放结束时</li>\n</ul>\n</li>\n<li><code>zoom.scaleExtent()</code> 设置缩放的最小、最大值，默认为 <code>[0, +∞]</code></li>\n<li><code>zoom.scale()</code> 设置初始的缩放大小</li>\n<li><code>zoom.translate()</code> 设置当前缩放的平移向量，默认为 <code>[0, 0]</code></li>\n<li><code>zoom.duration()</code> 取得或设置双击事件的过渡持续的时间</li>\n<li><code>zoom.x()</code> 设置 X轴 方向的比例尺</li>\n<li><code>zoom.y()</code> 设置 Y轴 方向的比例尺</li>\n</ul>\n</li>\n<li>拖拽事件 <code>d3.behavior.drag</code><ul>\n<li><code>d3.behavior.darg</code> 创建一个拖拽行为</li>\n<li><code>darg(selection)</code> 将此拖拽行为应用到 selection 上（一般使用 <code>selection.call(darg)</code>）</li>\n<li><code>darg.on(type, listener)</code> 设置事件类型和监听器<ul>\n<li><code>dargstart</code> 拖拽开始时</li>\n<li><code>darg</code> 拖拽中</li>\n<li><code>dargend</code> 拖拽结束时</li>\n</ul>\n</li>\n<li><code>dray.origin()</code> 设置拖动行为的原点</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、事件对象-d3-event\"><a href=\"#2、事件对象-d3-event\" class=\"headerlink\" title=\"2、事件对象 d3.event\"></a>2、事件对象 <code>d3.event</code></h3><p>说明  <code>d3.evnet</code> 对象是 DOM 事件，并实现了标准事件字段</p>\n<ul>\n<li><code>event.x</code>: 相对于可视区的坐标（与 <code>event.clientX</code> 一样）</li>\n<li><code>event.clientX</code>: 相对于可视区的坐标（与滚动的距离无关，以浏览器左上角为基准）</li>\n<li><code>event.offsetX</code>: 相对于容器的坐标（鼠标与触发事件的元素的距离）</li>\n<li><code>event.pageX</code>: 鼠标位置相对于文档的坐标（包含滚动的距离，以文档左上角为基准）</li>\n<li><code>event.screenX</code>: 鼠标位置相对于屏幕 X 轴的坐标（与滚动的距离无关，以屏幕左上角为基准）</li>\n<li><code>event.translate</code>: 返回鼠标位移的数据，如 <code>[100, 20]</code></li>\n<li><code>event.scale</code>: 返回鼠标缩放的大小，如 <code>1.2</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .circle-item &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: none;</span></span><br><span class=\"line\"><span class=\"css\">            stroke: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\"><span class=\"css\">            stroke-<span class=\"attribute\">width</span>: <span class=\"number\">4</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"built_in\">document</span>.documentElement.clientWidth;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;text&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">10</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">24</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;mouse-info&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateInfo</span>(<span class=\"params\">str</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            svg.select(<span class=\"string\">&#x27;.mouse-info&#x27;</span>).text(str);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.on(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> event = d3.event;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> str = <span class=\"string\">`x ：<span class=\"subst\">$&#123;event.offsetX&#125;</span> \\n Y: <span class=\"subst\">$&#123;event.offsetY&#125;</span>`</span>;</span></span><br><span class=\"line\">            updateInfo(str);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"javascript\">        svg.on(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> event = d3.event;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(event);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> x = event.offsetX;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> y = event.offsetY;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> data = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            svg.selectAll(<span class=\"string\">&#x27;cirle&#x27;</span>)</span></span><br><span class=\"line\">                .data(data)</span><br><span class=\"line\">                .enter()</span><br><span class=\"line\"><span class=\"javascript\">                .append(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;circle-item&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;cx&#x27;</span>, x)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;cy&#x27;</span>, y)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\">            .transition()</span><br><span class=\"line\">                .duration(2000)</span><br><span class=\"line\"><span class=\"javascript\">                .delay(<span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> <span class=\"built_in\">Math</span>.pow(i + <span class=\"number\">1</span>, <span class=\"number\">2</span>) * <span class=\"number\">100</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .ease(<span class=\"string\">&#x27;ease-out&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;stroke-width&#x27;</span>, <span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;opacity&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .each(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    d3.select(<span class=\"built_in\">this</span>).remove();</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                </span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .circle-item &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">opacity</span>: .<span class=\"number\">5</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">800</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> r = <span class=\"number\">60</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = [&#123;</span></span><br><span class=\"line\">            x: w / 2 - r,</span><br><span class=\"line\">            y: w / 2 - r</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 - r,</span><br><span class=\"line\">            y: w / 2 + r</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 + r,</span><br><span class=\"line\">            y: w / 2 - r</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 + r,</span><br><span class=\"line\">            y: w / 2 + r</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dragHandler</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> event = d3.event;</span></span><br><span class=\"line\"><span class=\"javascript\">            d3.select(<span class=\"built_in\">this</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;event.x&#125;</span>, <span class=\"subst\">$&#123;event.y&#125;</span>)`</span>);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> drag = d3.behavior.drag().on(<span class=\"string\">&#x27;drag&#x27;</span>, dragHandler);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> color = d3.scale.category10();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> container = svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"javascript\">        container.selectAll(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\">            .data(data)</span><br><span class=\"line\">            .enter()</span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;circle-item&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"function\"><span class=\"params\">d</span> =&gt;</span> <span class=\"string\">`translate(<span class=\"subst\">$&#123;d.x&#125;</span>, <span class=\"subst\">$&#123;d.y&#125;</span>)`</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"number\">60</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> color(i))</span></span><br><span class=\"line\">            .call(drag);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .circle-item &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">800</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> r = <span class=\"number\">60</span>;</span></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = [&#123;</span></span><br><span class=\"line\">            x: w / 2 - r,</span><br><span class=\"line\">            y: w / 2 - r</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 - r,</span><br><span class=\"line\">            y: w / 2 + r</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 + r,</span><br><span class=\"line\">            y: w / 2 - r</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 + r,</span><br><span class=\"line\">            y: w / 2 + r</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomHandler</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> event = d3.event;</span></span><br><span class=\"line\"><span class=\"javascript\">            d3.select(<span class=\"string\">&#x27;.container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;event.translate&#125;</span>) scale(<span class=\"subst\">$&#123;event.scale&#125;</span>)`</span>);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> zoom = d3.behavior.zoom()</span></span><br><span class=\"line\">            .scaleExtent([1, 10])</span><br><span class=\"line\"><span class=\"javascript\">            .on(<span class=\"string\">&#x27;zoom&#x27;</span>, zoomHandler);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h)</span></span><br><span class=\"line\">            .call(zoom);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> container = svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        container.selectAll(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\">            .data(data)</span><br><span class=\"line\">            .enter()</span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;circle-item&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"function\"><span class=\"params\">d</span> =&gt;</span> <span class=\"string\">`translate(<span class=\"subst\">$&#123;d.x&#125;</span>, <span class=\"subst\">$&#123;d.y&#125;</span>)`</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"number\">60</span>);</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"可视化交互\"><a href=\"#可视化交互\" class=\"headerlink\" title=\"可视化交互\"></a>可视化交互</h1><h3 id=\"1、事件类型\"><a href=\"#1、事件类型\" class=\"headerlink\" title=\"1、事件类型\"></a>1、事件类型</h3><ul>\n<li>鼠标事件<ul>\n<li><code>click</code> 单击</li>\n<li><code>dbclick</code> 双击</li>\n<li><code>mousemove</code> 鼠标移动</li>\n<li><code>mouseenter</code> 鼠标进入</li>\n<li><code>mouseleave</code> 鼠标离开</li>\n<li><code>mouseover</code> 鼠标滑入</li>\n<li><code>mouseout</code> 鼠标滑出</li>\n<li><code>mousedown</code> 鼠标按下</li>\n<li><code>mouseup</code> 鼠标弹起</li>\n</ul>\n</li>\n<li>触摸事件<ul>\n<li><code>touchstart</code> 触摸点在屏幕上接触时</li>\n<li><code>touchmove</code> 触摸点在屏幕上移动时</li>\n<li><code>touchend</code> 触摸点在屏幕上移开时</li>\n</ul>\n</li>\n<li>缩放、平移事件 <code>d3.behavior.zoom</code><ul>\n<li><code>d3.behavior.zoom</code> 创建一个缩放行为</li>\n<li><code>zoom(selection)</code> 将此缩放行为应用到 selection 上（一般使用 <code>selection.call(zoom)</code>）</li>\n<li><code>zoom.on(type, listener)</code> 设置事件类型和监听器<ul>\n<li><code>zoomstart</code> 缩放开始时</li>\n<li><code>zoom</code> 缩放中</li>\n<li><code>zoomend</code> 缩放结束时</li>\n</ul>\n</li>\n<li><code>zoom.scaleExtent()</code> 设置缩放的最小、最大值，默认为 <code>[0, +∞]</code></li>\n<li><code>zoom.scale()</code> 设置初始的缩放大小</li>\n<li><code>zoom.translate()</code> 设置当前缩放的平移向量，默认为 <code>[0, 0]</code></li>\n<li><code>zoom.duration()</code> 取得或设置双击事件的过渡持续的时间</li>\n<li><code>zoom.x()</code> 设置 X轴 方向的比例尺</li>\n<li><code>zoom.y()</code> 设置 Y轴 方向的比例尺</li>\n</ul>\n</li>\n<li>拖拽事件 <code>d3.behavior.drag</code><ul>\n<li><code>d3.behavior.darg</code> 创建一个拖拽行为</li>\n<li><code>darg(selection)</code> 将此拖拽行为应用到 selection 上（一般使用 <code>selection.call(darg)</code>）</li>\n<li><code>darg.on(type, listener)</code> 设置事件类型和监听器<ul>\n<li><code>dargstart</code> 拖拽开始时</li>\n<li><code>darg</code> 拖拽中</li>\n<li><code>dargend</code> 拖拽结束时</li>\n</ul>\n</li>\n<li><code>dray.origin()</code> 设置拖动行为的原点</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、事件对象-d3-event\"><a href=\"#2、事件对象-d3-event\" class=\"headerlink\" title=\"2、事件对象 d3.event\"></a>2、事件对象 <code>d3.event</code></h3><p>说明  <code>d3.evnet</code> 对象是 DOM 事件，并实现了标准事件字段</p>\n<ul>\n<li><code>event.x</code>: 相对于可视区的坐标（与 <code>event.clientX</code> 一样）</li>\n<li><code>event.clientX</code>: 相对于可视区的坐标（与滚动的距离无关，以浏览器左上角为基准）</li>\n<li><code>event.offsetX</code>: 相对于容器的坐标（鼠标与触发事件的元素的距离）</li>\n<li><code>event.pageX</code>: 鼠标位置相对于文档的坐标（包含滚动的距离，以文档左上角为基准）</li>\n<li><code>event.screenX</code>: 鼠标位置相对于屏幕 X 轴的坐标（与滚动的距离无关，以屏幕左上角为基准）</li>\n<li><code>event.translate</code>: 返回鼠标位移的数据，如 <code>[100, 20]</code></li>\n<li><code>event.scale</code>: 返回鼠标缩放的大小，如 <code>1.2</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .circle-item &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: none;</span></span><br><span class=\"line\"><span class=\"css\">            stroke: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\"><span class=\"css\">            stroke-<span class=\"attribute\">width</span>: <span class=\"number\">4</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"built_in\">document</span>.documentElement.clientWidth;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;text&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">10</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">24</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;mouse-info&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateInfo</span>(<span class=\"params\">str</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            svg.select(<span class=\"string\">&#x27;.mouse-info&#x27;</span>).text(str);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.on(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> event = d3.event;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> str = <span class=\"string\">`x ：<span class=\"subst\">$&#123;event.offsetX&#125;</span> \\n Y: <span class=\"subst\">$&#123;event.offsetY&#125;</span>`</span>;</span></span><br><span class=\"line\">            updateInfo(str);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"javascript\">        svg.on(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> event = d3.event;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(event);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> x = event.offsetX;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> y = event.offsetY;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> data = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            svg.selectAll(<span class=\"string\">&#x27;cirle&#x27;</span>)</span></span><br><span class=\"line\">                .data(data)</span><br><span class=\"line\">                .enter()</span><br><span class=\"line\"><span class=\"javascript\">                .append(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;circle-item&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;cx&#x27;</span>, x)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;cy&#x27;</span>, y)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\">            .transition()</span><br><span class=\"line\">                .duration(2000)</span><br><span class=\"line\"><span class=\"javascript\">                .delay(<span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> <span class=\"built_in\">Math</span>.pow(i + <span class=\"number\">1</span>, <span class=\"number\">2</span>) * <span class=\"number\">100</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .ease(<span class=\"string\">&#x27;ease-out&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;stroke-width&#x27;</span>, <span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;opacity&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .each(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    d3.select(<span class=\"built_in\">this</span>).remove();</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                </span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .circle-item &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">opacity</span>: .<span class=\"number\">5</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">800</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> r = <span class=\"number\">60</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = [&#123;</span></span><br><span class=\"line\">            x: w / 2 - r,</span><br><span class=\"line\">            y: w / 2 - r</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 - r,</span><br><span class=\"line\">            y: w / 2 + r</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 + r,</span><br><span class=\"line\">            y: w / 2 - r</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 + r,</span><br><span class=\"line\">            y: w / 2 + r</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dragHandler</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> event = d3.event;</span></span><br><span class=\"line\"><span class=\"javascript\">            d3.select(<span class=\"built_in\">this</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;event.x&#125;</span>, <span class=\"subst\">$&#123;event.y&#125;</span>)`</span>);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> drag = d3.behavior.drag().on(<span class=\"string\">&#x27;drag&#x27;</span>, dragHandler);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> color = d3.scale.category10();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> container = svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"javascript\">        container.selectAll(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\">            .data(data)</span><br><span class=\"line\">            .enter()</span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;circle-item&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"function\"><span class=\"params\">d</span> =&gt;</span> <span class=\"string\">`translate(<span class=\"subst\">$&#123;d.x&#125;</span>, <span class=\"subst\">$&#123;d.y&#125;</span>)`</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"number\">60</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> color(i))</span></span><br><span class=\"line\">            .call(drag);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .circle-item &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">800</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> r = <span class=\"number\">60</span>;</span></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = [&#123;</span></span><br><span class=\"line\">            x: w / 2 - r,</span><br><span class=\"line\">            y: w / 2 - r</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 - r,</span><br><span class=\"line\">            y: w / 2 + r</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 + r,</span><br><span class=\"line\">            y: w / 2 - r</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            x: w / 2 + r,</span><br><span class=\"line\">            y: w / 2 + r</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomHandler</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> event = d3.event;</span></span><br><span class=\"line\"><span class=\"javascript\">            d3.select(<span class=\"string\">&#x27;.container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;event.translate&#125;</span>) scale(<span class=\"subst\">$&#123;event.scale&#125;</span>)`</span>);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> zoom = d3.behavior.zoom()</span></span><br><span class=\"line\">            .scaleExtent([1, 10])</span><br><span class=\"line\"><span class=\"javascript\">            .on(<span class=\"string\">&#x27;zoom&#x27;</span>, zoomHandler);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h)</span></span><br><span class=\"line\">            .call(zoom);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> container = svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        container.selectAll(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\">            .data(data)</span><br><span class=\"line\">            .enter()</span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;circle-item&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"function\"><span class=\"params\">d</span> =&gt;</span> <span class=\"string\">`translate(<span class=\"subst\">$&#123;d.x&#125;</span>, <span class=\"subst\">$&#123;d.y&#125;</span>)`</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"number\">60</span>);</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"坐标轴","date":"2021-03-23T16:00:00.000Z","_content":"\n# 坐标轴\n\n说明：使用 `let axis = d3.svg.axis()` 生成坐标轴\n\n> 坐标轴上所有的文字、线段都以轴最外面的元素 `g` 为标准进行布局，并设置 `g` 元素的 `transform: tanslate(x, y)`（如果没有 `g` 元素，则会以根元素 `svg` 为标准）\n\n* `axis(selection)`： 将轴绘制在选择集上，一般是添加到 `g` 元素上，与 `selection.call(axis)` 的功能一样\n* `axis.orient(orientation)`： orientation 参数设置坐标轴方向 ，并返回轴（可选值为 `bottom`、`top`、`left`、`right`，默认为 `bottom`）\n* `axis.tickValues(arr)`: 指定的数值将用于刻度中的文本\n* `axis.ticks(num)`：num 参数设置或获取（当参数为空时）坐标轴刻度的个数\n* `axis.innerTickSize(size)`：size 参数设置或获取（当参数为空时）内部坐标轴刻度线的长度（px）\n* `axis.outerTickSize(size)`：size 参数设置或获取（当参数为空时）外部坐标轴刻度线的长度（px）\n* `axis.tickSize(inner, outer)`：设定或获取坐标轴内外刻度线的长度\n* `axis.tickPadding(padding)`: padding 参数设置刻度线与文本间的距离 \n* `axis.tickFormat(fn)`: 格式化显示在坐标轴上的数据 \n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>D3.js - 坐标轴</title>\n    <style>\n        .container {\n            border: 1px solid #999;\n        }\n\n        .rect-background {\n            fill: #ddd;\n        }\n\n        .axis path {\n            display: none;\n        }\n        .axis line {\n            fill: none;\n            stroke: #fff;\n            shape-rendering: crispEdges;\n        }\n\n        .axis text {\n            font-family: sans-serif;\n            font-size: 12px;\n        }\n\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 960;\n        let h = 600;\n        let padding = 40;\n        let xData = [-450, 450];\n        let yData = [-250, 250];\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('class', 'container')\n            .attr('width', w)\n            .attr('height', h);\n\n        let xScale = d3.scale.linear()\n            .domain(xData)\n            .range([0, w - padding * 2]);\n\n        let yScale = d3.scale.linear()\n            .domain(yData)\n            .range([0, h - padding * 2]);\n\n        let xAxis = d3.svg.axis()\n            .scale(xScale)\n            .orient('bottom')\n            .tickSize(-h);\n\n        let yAxis = d3.svg.axis()\n            .scale(yScale)\n            .orient('left')\n            .tickSize(-w)\n            .ticks(5);\n\n        function zoomed() {\n            svg.select('.x-axis').call(xAxis);\n            svg.select('.y-axis').call(yAxis);\n        }\n\n        let zoom = d3.behavior.zoom()\n            .x(xScale)\n            .y(yScale)\n            .scaleExtent([1, 3])\n            .on('zoom', zoomed);\n\n        svg.append('g')\n            .attr('transform', `translate(${padding}, ${padding})`)\n            .append('rect')\n            .attr('class', 'rect-background')\n            .attr('width', w - padding * 2)\n            .attr('height', h - padding * 2);\n\n\n        svg.append('g')\n            .attr('class', 'axis x-axis')\n            .attr('transform', `translate(${padding}, ${h - padding})`)\n            .call(xAxis);\n            \n        svg.append('g')\n            .attr('class', 'axis y-axis')\n            .attr('transform', `translate(${padding}, ${padding})`)\n            .call(yAxis);\n\n        svg.select('.rect-background').call(zoom);\n    </script>\n</body>\n\n</html>\n```","source":"_posts/D3.js/坐标轴.md","raw":"---\ntitle: 坐标轴\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 坐标轴\n\n说明：使用 `let axis = d3.svg.axis()` 生成坐标轴\n\n> 坐标轴上所有的文字、线段都以轴最外面的元素 `g` 为标准进行布局，并设置 `g` 元素的 `transform: tanslate(x, y)`（如果没有 `g` 元素，则会以根元素 `svg` 为标准）\n\n* `axis(selection)`： 将轴绘制在选择集上，一般是添加到 `g` 元素上，与 `selection.call(axis)` 的功能一样\n* `axis.orient(orientation)`： orientation 参数设置坐标轴方向 ，并返回轴（可选值为 `bottom`、`top`、`left`、`right`，默认为 `bottom`）\n* `axis.tickValues(arr)`: 指定的数值将用于刻度中的文本\n* `axis.ticks(num)`：num 参数设置或获取（当参数为空时）坐标轴刻度的个数\n* `axis.innerTickSize(size)`：size 参数设置或获取（当参数为空时）内部坐标轴刻度线的长度（px）\n* `axis.outerTickSize(size)`：size 参数设置或获取（当参数为空时）外部坐标轴刻度线的长度（px）\n* `axis.tickSize(inner, outer)`：设定或获取坐标轴内外刻度线的长度\n* `axis.tickPadding(padding)`: padding 参数设置刻度线与文本间的距离 \n* `axis.tickFormat(fn)`: 格式化显示在坐标轴上的数据 \n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>D3.js - 坐标轴</title>\n    <style>\n        .container {\n            border: 1px solid #999;\n        }\n\n        .rect-background {\n            fill: #ddd;\n        }\n\n        .axis path {\n            display: none;\n        }\n        .axis line {\n            fill: none;\n            stroke: #fff;\n            shape-rendering: crispEdges;\n        }\n\n        .axis text {\n            font-family: sans-serif;\n            font-size: 12px;\n        }\n\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 960;\n        let h = 600;\n        let padding = 40;\n        let xData = [-450, 450];\n        let yData = [-250, 250];\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('class', 'container')\n            .attr('width', w)\n            .attr('height', h);\n\n        let xScale = d3.scale.linear()\n            .domain(xData)\n            .range([0, w - padding * 2]);\n\n        let yScale = d3.scale.linear()\n            .domain(yData)\n            .range([0, h - padding * 2]);\n\n        let xAxis = d3.svg.axis()\n            .scale(xScale)\n            .orient('bottom')\n            .tickSize(-h);\n\n        let yAxis = d3.svg.axis()\n            .scale(yScale)\n            .orient('left')\n            .tickSize(-w)\n            .ticks(5);\n\n        function zoomed() {\n            svg.select('.x-axis').call(xAxis);\n            svg.select('.y-axis').call(yAxis);\n        }\n\n        let zoom = d3.behavior.zoom()\n            .x(xScale)\n            .y(yScale)\n            .scaleExtent([1, 3])\n            .on('zoom', zoomed);\n\n        svg.append('g')\n            .attr('transform', `translate(${padding}, ${padding})`)\n            .append('rect')\n            .attr('class', 'rect-background')\n            .attr('width', w - padding * 2)\n            .attr('height', h - padding * 2);\n\n\n        svg.append('g')\n            .attr('class', 'axis x-axis')\n            .attr('transform', `translate(${padding}, ${h - padding})`)\n            .call(xAxis);\n            \n        svg.append('g')\n            .attr('class', 'axis y-axis')\n            .attr('transform', `translate(${padding}, ${padding})`)\n            .call(yAxis);\n\n        svg.select('.rect-background').call(zoom);\n    </script>\n</body>\n\n</html>\n```","slug":"D3.js/坐标轴","published":1,"updated":"2021-04-28T02:31:25.108Z","_id":"cko0u126n0001y26r7fptggbm","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"坐标轴\"><a href=\"#坐标轴\" class=\"headerlink\" title=\"坐标轴\"></a>坐标轴</h1><p>说明：使用 <code>let axis = d3.svg.axis()</code> 生成坐标轴</p>\n<blockquote>\n<p>坐标轴上所有的文字、线段都以轴最外面的元素 <code>g</code> 为标准进行布局，并设置 <code>g</code> 元素的 <code>transform: tanslate(x, y)</code>（如果没有 <code>g</code> 元素，则会以根元素 <code>svg</code> 为标准）</p>\n</blockquote>\n<ul>\n<li><code>axis(selection)</code>： 将轴绘制在选择集上，一般是添加到 <code>g</code> 元素上，与 <code>selection.call(axis)</code> 的功能一样</li>\n<li><code>axis.orient(orientation)</code>： orientation 参数设置坐标轴方向 ，并返回轴（可选值为 <code>bottom</code>、<code>top</code>、<code>left</code>、<code>right</code>，默认为 <code>bottom</code>）</li>\n<li><code>axis.tickValues(arr)</code>: 指定的数值将用于刻度中的文本</li>\n<li><code>axis.ticks(num)</code>：num 参数设置或获取（当参数为空时）坐标轴刻度的个数</li>\n<li><code>axis.innerTickSize(size)</code>：size 参数设置或获取（当参数为空时）内部坐标轴刻度线的长度（px）</li>\n<li><code>axis.outerTickSize(size)</code>：size 参数设置或获取（当参数为空时）外部坐标轴刻度线的长度（px）</li>\n<li><code>axis.tickSize(inner, outer)</code>：设定或获取坐标轴内外刻度线的长度</li>\n<li><code>axis.tickPadding(padding)</code>: padding 参数设置刻度线与文本间的距离 </li>\n<li><code>axis.tickFormat(fn)</code>: 格式化显示在坐标轴上的数据 </li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>D3.js - 坐标轴<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .container &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#999</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .rect-background &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#ddd</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .axis path &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .axis line &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: none;</span></span><br><span class=\"line\"><span class=\"css\">            stroke: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"css\">            shape-rendering: crispEdges;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .axis text &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-family</span>: sans-serif;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">960</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = <span class=\"number\">40</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xData = [-<span class=\"number\">450</span>, <span class=\"number\">450</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yData = [-<span class=\"number\">250</span>, <span class=\"number\">250</span>];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xScale = d3.scale.linear()</span></span><br><span class=\"line\">            .domain(xData)</span><br><span class=\"line\">            .range([0, w - padding * 2]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yScale = d3.scale.linear()</span></span><br><span class=\"line\">            .domain(yData)</span><br><span class=\"line\">            .range([0, h - padding * 2]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xAxis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(xScale)</span><br><span class=\"line\"><span class=\"javascript\">            .orient(<span class=\"string\">&#x27;bottom&#x27;</span>)</span></span><br><span class=\"line\">            .tickSize(-h);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yAxis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(yScale)</span><br><span class=\"line\"><span class=\"javascript\">            .orient(<span class=\"string\">&#x27;left&#x27;</span>)</span></span><br><span class=\"line\">            .tickSize(-w)</span><br><span class=\"line\">            .ticks(5);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomed</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            svg.select(<span class=\"string\">&#x27;.x-axis&#x27;</span>).call(xAxis);</span></span><br><span class=\"line\"><span class=\"javascript\">            svg.select(<span class=\"string\">&#x27;.y-axis&#x27;</span>).call(yAxis);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> zoom = d3.behavior.zoom()</span></span><br><span class=\"line\">            .x(xScale)</span><br><span class=\"line\">            .y(yScale)</span><br><span class=\"line\">            .scaleExtent([1, 3])</span><br><span class=\"line\"><span class=\"javascript\">            .on(<span class=\"string\">&#x27;zoom&#x27;</span>, zoomed);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding&#125;</span>, <span class=\"subst\">$&#123;padding&#125;</span>)`</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;rect-background&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w - padding * <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h - padding * <span class=\"number\">2</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;axis x-axis&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding&#125;</span>, <span class=\"subst\">$&#123;h - padding&#125;</span>)`</span>)</span></span><br><span class=\"line\">            .call(xAxis);</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;axis y-axis&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding&#125;</span>, <span class=\"subst\">$&#123;padding&#125;</span>)`</span>)</span></span><br><span class=\"line\">            .call(yAxis);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.select(<span class=\"string\">&#x27;.rect-background&#x27;</span>).call(zoom);</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"坐标轴\"><a href=\"#坐标轴\" class=\"headerlink\" title=\"坐标轴\"></a>坐标轴</h1><p>说明：使用 <code>let axis = d3.svg.axis()</code> 生成坐标轴</p>\n<blockquote>\n<p>坐标轴上所有的文字、线段都以轴最外面的元素 <code>g</code> 为标准进行布局，并设置 <code>g</code> 元素的 <code>transform: tanslate(x, y)</code>（如果没有 <code>g</code> 元素，则会以根元素 <code>svg</code> 为标准）</p>\n</blockquote>\n<ul>\n<li><code>axis(selection)</code>： 将轴绘制在选择集上，一般是添加到 <code>g</code> 元素上，与 <code>selection.call(axis)</code> 的功能一样</li>\n<li><code>axis.orient(orientation)</code>： orientation 参数设置坐标轴方向 ，并返回轴（可选值为 <code>bottom</code>、<code>top</code>、<code>left</code>、<code>right</code>，默认为 <code>bottom</code>）</li>\n<li><code>axis.tickValues(arr)</code>: 指定的数值将用于刻度中的文本</li>\n<li><code>axis.ticks(num)</code>：num 参数设置或获取（当参数为空时）坐标轴刻度的个数</li>\n<li><code>axis.innerTickSize(size)</code>：size 参数设置或获取（当参数为空时）内部坐标轴刻度线的长度（px）</li>\n<li><code>axis.outerTickSize(size)</code>：size 参数设置或获取（当参数为空时）外部坐标轴刻度线的长度（px）</li>\n<li><code>axis.tickSize(inner, outer)</code>：设定或获取坐标轴内外刻度线的长度</li>\n<li><code>axis.tickPadding(padding)</code>: padding 参数设置刻度线与文本间的距离 </li>\n<li><code>axis.tickFormat(fn)</code>: 格式化显示在坐标轴上的数据 </li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>D3.js - 坐标轴<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .container &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#999</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .rect-background &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#ddd</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .axis path &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .axis line &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: none;</span></span><br><span class=\"line\"><span class=\"css\">            stroke: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"css\">            shape-rendering: crispEdges;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .axis text &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-family</span>: sans-serif;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">960</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = <span class=\"number\">40</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xData = [-<span class=\"number\">450</span>, <span class=\"number\">450</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yData = [-<span class=\"number\">250</span>, <span class=\"number\">250</span>];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xScale = d3.scale.linear()</span></span><br><span class=\"line\">            .domain(xData)</span><br><span class=\"line\">            .range([0, w - padding * 2]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yScale = d3.scale.linear()</span></span><br><span class=\"line\">            .domain(yData)</span><br><span class=\"line\">            .range([0, h - padding * 2]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xAxis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(xScale)</span><br><span class=\"line\"><span class=\"javascript\">            .orient(<span class=\"string\">&#x27;bottom&#x27;</span>)</span></span><br><span class=\"line\">            .tickSize(-h);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yAxis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(yScale)</span><br><span class=\"line\"><span class=\"javascript\">            .orient(<span class=\"string\">&#x27;left&#x27;</span>)</span></span><br><span class=\"line\">            .tickSize(-w)</span><br><span class=\"line\">            .ticks(5);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomed</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            svg.select(<span class=\"string\">&#x27;.x-axis&#x27;</span>).call(xAxis);</span></span><br><span class=\"line\"><span class=\"javascript\">            svg.select(<span class=\"string\">&#x27;.y-axis&#x27;</span>).call(yAxis);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> zoom = d3.behavior.zoom()</span></span><br><span class=\"line\">            .x(xScale)</span><br><span class=\"line\">            .y(yScale)</span><br><span class=\"line\">            .scaleExtent([1, 3])</span><br><span class=\"line\"><span class=\"javascript\">            .on(<span class=\"string\">&#x27;zoom&#x27;</span>, zoomed);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding&#125;</span>, <span class=\"subst\">$&#123;padding&#125;</span>)`</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;rect-background&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w - padding * <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h - padding * <span class=\"number\">2</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;axis x-axis&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding&#125;</span>, <span class=\"subst\">$&#123;h - padding&#125;</span>)`</span>)</span></span><br><span class=\"line\">            .call(xAxis);</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;axis y-axis&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding&#125;</span>, <span class=\"subst\">$&#123;padding&#125;</span>)`</span>)</span></span><br><span class=\"line\">            .call(yAxis);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.select(<span class=\"string\">&#x27;.rect-background&#x27;</span>).call(zoom);</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"工具函数","date":"2021-03-23T16:00:00.000Z","_content":"\n# 工具函数\n\n### 数组\n* d3.range([start, ]stop[, step]): 生成一个包含算数级数的数组\n* d3.shuffle(): 随机化一个数组的顺序\n* d3.sum(): 计算数字数组的和\n\n### 时间格式化 `d3.time.format`\n\n```js\nvar date = new Date();\nvar formatter = d3.time.format('%Y-%m-%d %H:%M:%S');\nformatter(date); // 2018-01-26 16:38:05\n```\n\n%j：在本年中的天数 [001, 366] \n%y：不含纪元的年份 [00, 99] \n%Y：包含纪年的4位数年份\n%d：在本月的天数， 不足2位用0补全 [01, 31] \n%e：在本月的天数， 不足2位用空格补全 [ 1, 31]\n%m：月份 [01, 12] \n%b：月的缩写 // Jan \n%B：月的全称 // January\n%H：小时， 24小时制 [00, 23] \n%I：小时， 12小时制 [01, 12]\n%M：分钟 [00, 59] \n%S：秒 [00, 60] \n%L：毫秒 [000, 999] \n%a：星期的缩写 // Thu \n%A：星期的全称 // Thursday\n%p：AM或PM \n%x：日期部分， 等同于 `%m%d%Y` \n%X：时间部分， 等同于 `%H:%M:%S` \n\n### 颜色序数比例尺 `d3.scale.category10`\n\n构造一个新的序数比例尺，使用以下 10（20）种颜色\n\n* d3.scale.category10()\n* d3.scale.category20()\n* d3.scale.category20b()\n* d3.scale.category20c()\n\n说明：该比例尺有默认的值域包含 10 中颜色，但并没有设置范围域。传递给比例尺函数的每个唯一值将从输出范围中分配一个新值。\n\n```js\nvar scale = d3.scale.category10();\nscale(0); // #1f77b4\nscale(1); // #ff7f0e\nscale(10); // #2ca02c\nscale.domain(); // [0, 1, 10]\nscale(10); // #2ca02c\nscale(15); // #d62728\nscale.domain(); // [0, 1, 10, 15]\nscale.range(); // [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"]\n```\n\n","source":"_posts/D3.js/工具函数.md","raw":"---\ntitle: 工具函数\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 工具函数\n\n### 数组\n* d3.range([start, ]stop[, step]): 生成一个包含算数级数的数组\n* d3.shuffle(): 随机化一个数组的顺序\n* d3.sum(): 计算数字数组的和\n\n### 时间格式化 `d3.time.format`\n\n```js\nvar date = new Date();\nvar formatter = d3.time.format('%Y-%m-%d %H:%M:%S');\nformatter(date); // 2018-01-26 16:38:05\n```\n\n%j：在本年中的天数 [001, 366] \n%y：不含纪元的年份 [00, 99] \n%Y：包含纪年的4位数年份\n%d：在本月的天数， 不足2位用0补全 [01, 31] \n%e：在本月的天数， 不足2位用空格补全 [ 1, 31]\n%m：月份 [01, 12] \n%b：月的缩写 // Jan \n%B：月的全称 // January\n%H：小时， 24小时制 [00, 23] \n%I：小时， 12小时制 [01, 12]\n%M：分钟 [00, 59] \n%S：秒 [00, 60] \n%L：毫秒 [000, 999] \n%a：星期的缩写 // Thu \n%A：星期的全称 // Thursday\n%p：AM或PM \n%x：日期部分， 等同于 `%m%d%Y` \n%X：时间部分， 等同于 `%H:%M:%S` \n\n### 颜色序数比例尺 `d3.scale.category10`\n\n构造一个新的序数比例尺，使用以下 10（20）种颜色\n\n* d3.scale.category10()\n* d3.scale.category20()\n* d3.scale.category20b()\n* d3.scale.category20c()\n\n说明：该比例尺有默认的值域包含 10 中颜色，但并没有设置范围域。传递给比例尺函数的每个唯一值将从输出范围中分配一个新值。\n\n```js\nvar scale = d3.scale.category10();\nscale(0); // #1f77b4\nscale(1); // #ff7f0e\nscale(10); // #2ca02c\nscale.domain(); // [0, 1, 10]\nscale(10); // #2ca02c\nscale(15); // #d62728\nscale.domain(); // [0, 1, 10, 15]\nscale.range(); // [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"]\n```\n\n","slug":"D3.js/工具函数","published":1,"updated":"2021-04-28T02:30:58.469Z","_id":"cko0u126o0002y26rhjen63xs","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"工具函数\"><a href=\"#工具函数\" class=\"headerlink\" title=\"工具函数\"></a>工具函数</h1><h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><ul>\n<li>d3.range([start, ]stop[, step]): 生成一个包含算数级数的数组</li>\n<li>d3.shuffle(): 随机化一个数组的顺序</li>\n<li>d3.sum(): 计算数字数组的和</li>\n</ul>\n<h3 id=\"时间格式化-d3-time-format\"><a href=\"#时间格式化-d3-time-format\" class=\"headerlink\" title=\"时间格式化 d3.time.format\"></a>时间格式化 <code>d3.time.format</code></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> formatter = d3.time.format(<span class=\"string\">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>);</span><br><span class=\"line\">formatter(date); <span class=\"comment\">// 2018-01-26 16:38:05</span></span><br></pre></td></tr></table></figure>\n\n<p>%j：在本年中的天数 [001, 366]<br>%y：不含纪元的年份 [00, 99]<br>%Y：包含纪年的4位数年份<br>%d：在本月的天数， 不足2位用0补全 [01, 31]<br>%e：在本月的天数， 不足2位用空格补全 [ 1, 31]<br>%m：月份 [01, 12]<br>%b：月的缩写 // Jan<br>%B：月的全称 // January<br>%H：小时， 24小时制 [00, 23]<br>%I：小时， 12小时制 [01, 12]<br>%M：分钟 [00, 59]<br>%S：秒 [00, 60]<br>%L：毫秒 [000, 999]<br>%a：星期的缩写 // Thu<br>%A：星期的全称 // Thursday<br>%p：AM或PM<br>%x：日期部分， 等同于 <code>%m%d%Y</code><br>%X：时间部分， 等同于 <code>%H:%M:%S</code> </p>\n<h3 id=\"颜色序数比例尺-d3-scale-category10\"><a href=\"#颜色序数比例尺-d3-scale-category10\" class=\"headerlink\" title=\"颜色序数比例尺 d3.scale.category10\"></a>颜色序数比例尺 <code>d3.scale.category10</code></h3><p>构造一个新的序数比例尺，使用以下 10（20）种颜色</p>\n<ul>\n<li>d3.scale.category10()</li>\n<li>d3.scale.category20()</li>\n<li>d3.scale.category20b()</li>\n<li>d3.scale.category20c()</li>\n</ul>\n<p>说明：该比例尺有默认的值域包含 10 中颜色，但并没有设置范围域。传递给比例尺函数的每个唯一值将从输出范围中分配一个新值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scale = d3.scale.category10();</span><br><span class=\"line\">scale(<span class=\"number\">0</span>); <span class=\"comment\">// #1f77b4</span></span><br><span class=\"line\">scale(<span class=\"number\">1</span>); <span class=\"comment\">// #ff7f0e</span></span><br><span class=\"line\">scale(<span class=\"number\">10</span>); <span class=\"comment\">// #2ca02c</span></span><br><span class=\"line\">scale.domain(); <span class=\"comment\">// [0, 1, 10]</span></span><br><span class=\"line\">scale(<span class=\"number\">10</span>); <span class=\"comment\">// #2ca02c</span></span><br><span class=\"line\">scale(<span class=\"number\">15</span>); <span class=\"comment\">// #d62728</span></span><br><span class=\"line\">scale.domain(); <span class=\"comment\">// [0, 1, 10, 15]</span></span><br><span class=\"line\">scale.range(); <span class=\"comment\">// [&quot;#1f77b4&quot;, &quot;#ff7f0e&quot;, &quot;#2ca02c&quot;, &quot;#d62728&quot;, &quot;#9467bd&quot;, &quot;#8c564b&quot;, &quot;#e377c2&quot;, &quot;#7f7f7f&quot;, &quot;#bcbd22&quot;, &quot;#17becf&quot;]</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"工具函数\"><a href=\"#工具函数\" class=\"headerlink\" title=\"工具函数\"></a>工具函数</h1><h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><ul>\n<li>d3.range([start, ]stop[, step]): 生成一个包含算数级数的数组</li>\n<li>d3.shuffle(): 随机化一个数组的顺序</li>\n<li>d3.sum(): 计算数字数组的和</li>\n</ul>\n<h3 id=\"时间格式化-d3-time-format\"><a href=\"#时间格式化-d3-time-format\" class=\"headerlink\" title=\"时间格式化 d3.time.format\"></a>时间格式化 <code>d3.time.format</code></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> formatter = d3.time.format(<span class=\"string\">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>);</span><br><span class=\"line\">formatter(date); <span class=\"comment\">// 2018-01-26 16:38:05</span></span><br></pre></td></tr></table></figure>\n\n<p>%j：在本年中的天数 [001, 366]<br>%y：不含纪元的年份 [00, 99]<br>%Y：包含纪年的4位数年份<br>%d：在本月的天数， 不足2位用0补全 [01, 31]<br>%e：在本月的天数， 不足2位用空格补全 [ 1, 31]<br>%m：月份 [01, 12]<br>%b：月的缩写 // Jan<br>%B：月的全称 // January<br>%H：小时， 24小时制 [00, 23]<br>%I：小时， 12小时制 [01, 12]<br>%M：分钟 [00, 59]<br>%S：秒 [00, 60]<br>%L：毫秒 [000, 999]<br>%a：星期的缩写 // Thu<br>%A：星期的全称 // Thursday<br>%p：AM或PM<br>%x：日期部分， 等同于 <code>%m%d%Y</code><br>%X：时间部分， 等同于 <code>%H:%M:%S</code> </p>\n<h3 id=\"颜色序数比例尺-d3-scale-category10\"><a href=\"#颜色序数比例尺-d3-scale-category10\" class=\"headerlink\" title=\"颜色序数比例尺 d3.scale.category10\"></a>颜色序数比例尺 <code>d3.scale.category10</code></h3><p>构造一个新的序数比例尺，使用以下 10（20）种颜色</p>\n<ul>\n<li>d3.scale.category10()</li>\n<li>d3.scale.category20()</li>\n<li>d3.scale.category20b()</li>\n<li>d3.scale.category20c()</li>\n</ul>\n<p>说明：该比例尺有默认的值域包含 10 中颜色，但并没有设置范围域。传递给比例尺函数的每个唯一值将从输出范围中分配一个新值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scale = d3.scale.category10();</span><br><span class=\"line\">scale(<span class=\"number\">0</span>); <span class=\"comment\">// #1f77b4</span></span><br><span class=\"line\">scale(<span class=\"number\">1</span>); <span class=\"comment\">// #ff7f0e</span></span><br><span class=\"line\">scale(<span class=\"number\">10</span>); <span class=\"comment\">// #2ca02c</span></span><br><span class=\"line\">scale.domain(); <span class=\"comment\">// [0, 1, 10]</span></span><br><span class=\"line\">scale(<span class=\"number\">10</span>); <span class=\"comment\">// #2ca02c</span></span><br><span class=\"line\">scale(<span class=\"number\">15</span>); <span class=\"comment\">// #d62728</span></span><br><span class=\"line\">scale.domain(); <span class=\"comment\">// [0, 1, 10, 15]</span></span><br><span class=\"line\">scale.range(); <span class=\"comment\">// [&quot;#1f77b4&quot;, &quot;#ff7f0e&quot;, &quot;#2ca02c&quot;, &quot;#d62728&quot;, &quot;#9467bd&quot;, &quot;#8c564b&quot;, &quot;#e377c2&quot;, &quot;#7f7f7f&quot;, &quot;#bcbd22&quot;, &quot;#17becf&quot;]</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"update、enter 与 exit","date":"2021-03-23T16:00:00.000Z","_content":"\n# update、enter 与 exit\n\n作用：处理选择集和数据集关系不确定的情况，对各种选择集分别作处理。\n\n`selection.data()` 操作返回的是三个 Virtual selection，这三个 Virtual selection 是 enter、 update 以及 exit。\n\n假设用三个 `<p>` 元素的选择集（对应的数据分别为 `[0, 1, 2]`），\n\n如果将新数据集 [3, 6, 9, 12, 15] 绑定到选择集上，则前三个数据（3，6，9）有与之对应的元素，这部分成为 `Update`\n而后面两个数据（12，15）没有与之对应的元素，这部分成为 `Enter`\n\n如果将新数据集 `[4, 6]` 绑定到选择集上，则前两个数据（4，6）有与之对应的元素，这部分成为 `Update`\n而原来选择集最后一个数据（2）没有与之对应的元素，这部分成为 `Exit`\n\n\n** update、enter、exit的区别**\n\n`d3.selectAll('text')` 的返回值是一个选择集，返回的是当前 DOM 的信息\n`d3.selectAll('text').data(dataSet)` 的返回值是一个选择集，有 `enter()`、`exit()` 方法，返回的是绑定前后对比的信息\n\n* `update`: 表示在 DOM 中即将被更新的选择集，update 部分的处理办法一般是：**更新属性值**，如 `let updateSelection = svg.selectAll('circle').data(dataSet)`\n* `enter`: 表示在 DOM 中即将被添加的选择集，enter 部分的处理办法一般是：**添加元素后，赋予属性值**，如 `let enterSelection = svg.selectAll('circle').data(dataSet).enter()`\n* `exit`: 表示在 DOM 中即将被删除的选择集，exit 部分的处理办法一般是：**修改属性值，删除元素**，如 `let exitSelection = svg.selectAll('circle').data(dataSet).exit()`\n\n说明：并没有 `svg.selectAll('circle').data(dataSet).update()` 方法，`svg.selectAll('circle').data(dataSet)` 直接返回 Update 选择集（） \n\n> * 比较的是数据集与选择集，而不是比较数据集与选择集中的数据（与 Vue 中的 key 属性、DOM元素复用没有任何联系）\n> * 当有通过数据更新视图时，正确的顺序应该是 `update()` 、`enter()`、`exit()`\n> * 重新将数据绑定到选择集上时，不可能同时存在 `enter()`、`exit()`\n\n对于数组中的数据元素，如果缺少与之对应的 DOM 元素，那么就会有一个占位符来顶替，而 `enter()` 方法返回的就是这些占位符集合的引用。\n这个引用后只能链接 `append()`，`insert()` 以及 `select()` 操作符，通过他们来操作该引用所指向的集合。\n\n### `data()` 数据绑定（`selection.selectAll().data().enter().append()`）\n* `let selectoin = svg.selectAll('circle')` 因为 SVG 容器是空的，返回一个新的空选择 `selection`。 \n* `enterSelectoin = selection.data(dataSet)` 将这个选择连接到一组数据，产生三个新的选择，代表三种可能的状态：`enter`、`update` 和 `exit`。由于选择是空的，所以`update` 和 `exit` 的 `selection` 是空的，而 `enter` 的 `selection` 包含每个新基准的占位符。\n* `selection.data(dataSet)` 返回更新选择，`selection.enter()` 返回 `enter` 选择，而进入和退出选择被挂起 。\n* `enterSelectoin.append()` 将缺失的元素添加到 SVG 容器中，这会为每个数据附加一个新的 `circle` 到 SVG 容器。\n\n> 当把数据分配到一个元素上时，这个数据被存储到该元素的 `_data_` 属性中, 数据可以通过 `_data_` 属性被再选。这也就是我们所说的数据绑定到 DOM 元素\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>D3.js - enter、update、exit</title>\n    <style>\n        .container text {\n            font-size: 30px;\n            fill: #090;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 500;\n        let h = 400;\n        let padding = {\n            top: 20,\n            right: 20,\n            bottom: 30,\n            left: 40\n        };\n        let dataSet = 'abcdefghijklmn'.split('');\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        let container = svg.append('g')\n            .attr('class', 'container')\n            .attr('transform', `translate(${padding.left}, ${padding.top})`)\n            .attr('width', w - padding.left - padding.right)\n            .attr('height', h - padding.top - padding.bottom);\n\n        function update(dataSet) {\n            let texts = container.selectAll('text').data(dataSet/* , (d) => d */);\n\n            console.log(dataSet);\n\n            // update 部分\n            texts.attr('x', (data, i) => i * 30)\n                .attr('y', 120)\n                .style('fill', '#f00')\n                .text((data) => { console.log('update ----> ' + data); return data; });\n\n            // enter 部分\n            texts.enter()\n                .append('text')\n                .attr('x', (data, i) => i * 30)\n                .attr('y', 120)\n                .style('fill', '#0f0')\n                .text((data) => { console.log('enter ----> ' + data); return data; });\n\n            // exit 部分\n            texts.exit()\n                .transition()\n                .duration(200)\n                .style('opacity', (data) => { console.log('exit ----> ' + data); return 0; })\n                .style('transform', 'scale(0)')\n                .remove();\n        }\n\n        window.setInterval(() => {\n            let data = ['A', 'B', ...d3.shuffle(dataSet).slice(0, Math.ceil(Math.random() * 10))];\n            update(data);\n        }, 1000);\n    </script>\n</body>\n</html>\n```","source":"_posts/D3.js/update、enter 与 exit.md","raw":"---\ntitle: update、enter 与 exit\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# update、enter 与 exit\n\n作用：处理选择集和数据集关系不确定的情况，对各种选择集分别作处理。\n\n`selection.data()` 操作返回的是三个 Virtual selection，这三个 Virtual selection 是 enter、 update 以及 exit。\n\n假设用三个 `<p>` 元素的选择集（对应的数据分别为 `[0, 1, 2]`），\n\n如果将新数据集 [3, 6, 9, 12, 15] 绑定到选择集上，则前三个数据（3，6，9）有与之对应的元素，这部分成为 `Update`\n而后面两个数据（12，15）没有与之对应的元素，这部分成为 `Enter`\n\n如果将新数据集 `[4, 6]` 绑定到选择集上，则前两个数据（4，6）有与之对应的元素，这部分成为 `Update`\n而原来选择集最后一个数据（2）没有与之对应的元素，这部分成为 `Exit`\n\n\n** update、enter、exit的区别**\n\n`d3.selectAll('text')` 的返回值是一个选择集，返回的是当前 DOM 的信息\n`d3.selectAll('text').data(dataSet)` 的返回值是一个选择集，有 `enter()`、`exit()` 方法，返回的是绑定前后对比的信息\n\n* `update`: 表示在 DOM 中即将被更新的选择集，update 部分的处理办法一般是：**更新属性值**，如 `let updateSelection = svg.selectAll('circle').data(dataSet)`\n* `enter`: 表示在 DOM 中即将被添加的选择集，enter 部分的处理办法一般是：**添加元素后，赋予属性值**，如 `let enterSelection = svg.selectAll('circle').data(dataSet).enter()`\n* `exit`: 表示在 DOM 中即将被删除的选择集，exit 部分的处理办法一般是：**修改属性值，删除元素**，如 `let exitSelection = svg.selectAll('circle').data(dataSet).exit()`\n\n说明：并没有 `svg.selectAll('circle').data(dataSet).update()` 方法，`svg.selectAll('circle').data(dataSet)` 直接返回 Update 选择集（） \n\n> * 比较的是数据集与选择集，而不是比较数据集与选择集中的数据（与 Vue 中的 key 属性、DOM元素复用没有任何联系）\n> * 当有通过数据更新视图时，正确的顺序应该是 `update()` 、`enter()`、`exit()`\n> * 重新将数据绑定到选择集上时，不可能同时存在 `enter()`、`exit()`\n\n对于数组中的数据元素，如果缺少与之对应的 DOM 元素，那么就会有一个占位符来顶替，而 `enter()` 方法返回的就是这些占位符集合的引用。\n这个引用后只能链接 `append()`，`insert()` 以及 `select()` 操作符，通过他们来操作该引用所指向的集合。\n\n### `data()` 数据绑定（`selection.selectAll().data().enter().append()`）\n* `let selectoin = svg.selectAll('circle')` 因为 SVG 容器是空的，返回一个新的空选择 `selection`。 \n* `enterSelectoin = selection.data(dataSet)` 将这个选择连接到一组数据，产生三个新的选择，代表三种可能的状态：`enter`、`update` 和 `exit`。由于选择是空的，所以`update` 和 `exit` 的 `selection` 是空的，而 `enter` 的 `selection` 包含每个新基准的占位符。\n* `selection.data(dataSet)` 返回更新选择，`selection.enter()` 返回 `enter` 选择，而进入和退出选择被挂起 。\n* `enterSelectoin.append()` 将缺失的元素添加到 SVG 容器中，这会为每个数据附加一个新的 `circle` 到 SVG 容器。\n\n> 当把数据分配到一个元素上时，这个数据被存储到该元素的 `_data_` 属性中, 数据可以通过 `_data_` 属性被再选。这也就是我们所说的数据绑定到 DOM 元素\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>D3.js - enter、update、exit</title>\n    <style>\n        .container text {\n            font-size: 30px;\n            fill: #090;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 500;\n        let h = 400;\n        let padding = {\n            top: 20,\n            right: 20,\n            bottom: 30,\n            left: 40\n        };\n        let dataSet = 'abcdefghijklmn'.split('');\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        let container = svg.append('g')\n            .attr('class', 'container')\n            .attr('transform', `translate(${padding.left}, ${padding.top})`)\n            .attr('width', w - padding.left - padding.right)\n            .attr('height', h - padding.top - padding.bottom);\n\n        function update(dataSet) {\n            let texts = container.selectAll('text').data(dataSet/* , (d) => d */);\n\n            console.log(dataSet);\n\n            // update 部分\n            texts.attr('x', (data, i) => i * 30)\n                .attr('y', 120)\n                .style('fill', '#f00')\n                .text((data) => { console.log('update ----> ' + data); return data; });\n\n            // enter 部分\n            texts.enter()\n                .append('text')\n                .attr('x', (data, i) => i * 30)\n                .attr('y', 120)\n                .style('fill', '#0f0')\n                .text((data) => { console.log('enter ----> ' + data); return data; });\n\n            // exit 部分\n            texts.exit()\n                .transition()\n                .duration(200)\n                .style('opacity', (data) => { console.log('exit ----> ' + data); return 0; })\n                .style('transform', 'scale(0)')\n                .remove();\n        }\n\n        window.setInterval(() => {\n            let data = ['A', 'B', ...d3.shuffle(dataSet).slice(0, Math.ceil(Math.random() * 10))];\n            update(data);\n        }, 1000);\n    </script>\n</body>\n</html>\n```","slug":"D3.js/update、enter 与 exit","published":1,"updated":"2021-04-28T02:31:29.128Z","_id":"cko0u126p0003y26r9cg3h72g","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"update、enter-与-exit\"><a href=\"#update、enter-与-exit\" class=\"headerlink\" title=\"update、enter 与 exit\"></a>update、enter 与 exit</h1><p>作用：处理选择集和数据集关系不确定的情况，对各种选择集分别作处理。</p>\n<p><code>selection.data()</code> 操作返回的是三个 Virtual selection，这三个 Virtual selection 是 enter、 update 以及 exit。</p>\n<p>假设用三个 <code>&lt;p&gt;</code> 元素的选择集（对应的数据分别为 <code>[0, 1, 2]</code>），</p>\n<p>如果将新数据集 [3, 6, 9, 12, 15] 绑定到选择集上，则前三个数据（3，6，9）有与之对应的元素，这部分成为 <code>Update</code><br>而后面两个数据（12，15）没有与之对应的元素，这部分成为 <code>Enter</code></p>\n<p>如果将新数据集 <code>[4, 6]</code> 绑定到选择集上，则前两个数据（4，6）有与之对应的元素，这部分成为 <code>Update</code><br>而原来选择集最后一个数据（2）没有与之对应的元素，这部分成为 <code>Exit</code></p>\n<p>** update、enter、exit的区别**</p>\n<p><code>d3.selectAll(&#39;text&#39;)</code> 的返回值是一个选择集，返回的是当前 DOM 的信息<br><code>d3.selectAll(&#39;text&#39;).data(dataSet)</code> 的返回值是一个选择集，有 <code>enter()</code>、<code>exit()</code> 方法，返回的是绑定前后对比的信息</p>\n<ul>\n<li><code>update</code>: 表示在 DOM 中即将被更新的选择集，update 部分的处理办法一般是：<strong>更新属性值</strong>，如 <code>let updateSelection = svg.selectAll(&#39;circle&#39;).data(dataSet)</code></li>\n<li><code>enter</code>: 表示在 DOM 中即将被添加的选择集，enter 部分的处理办法一般是：<strong>添加元素后，赋予属性值</strong>，如 <code>let enterSelection = svg.selectAll(&#39;circle&#39;).data(dataSet).enter()</code></li>\n<li><code>exit</code>: 表示在 DOM 中即将被删除的选择集，exit 部分的处理办法一般是：<strong>修改属性值，删除元素</strong>，如 <code>let exitSelection = svg.selectAll(&#39;circle&#39;).data(dataSet).exit()</code></li>\n</ul>\n<p>说明：并没有 <code>svg.selectAll(&#39;circle&#39;).data(dataSet).update()</code> 方法，<code>svg.selectAll(&#39;circle&#39;).data(dataSet)</code> 直接返回 Update 选择集（） </p>\n<blockquote>\n<ul>\n<li>比较的是数据集与选择集，而不是比较数据集与选择集中的数据（与 Vue 中的 key 属性、DOM元素复用没有任何联系）</li>\n<li>当有通过数据更新视图时，正确的顺序应该是 <code>update()</code> 、<code>enter()</code>、<code>exit()</code></li>\n<li>重新将数据绑定到选择集上时，不可能同时存在 <code>enter()</code>、<code>exit()</code></li>\n</ul>\n</blockquote>\n<p>对于数组中的数据元素，如果缺少与之对应的 DOM 元素，那么就会有一个占位符来顶替，而 <code>enter()</code> 方法返回的就是这些占位符集合的引用。<br>这个引用后只能链接 <code>append()</code>，<code>insert()</code> 以及 <code>select()</code> 操作符，通过他们来操作该引用所指向的集合。</p>\n<h3 id=\"data-数据绑定（selection-selectAll-data-enter-append-）\"><a href=\"#data-数据绑定（selection-selectAll-data-enter-append-）\" class=\"headerlink\" title=\"data() 数据绑定（selection.selectAll().data().enter().append()）\"></a><code>data()</code> 数据绑定（<code>selection.selectAll().data().enter().append()</code>）</h3><ul>\n<li><code>let selectoin = svg.selectAll(&#39;circle&#39;)</code> 因为 SVG 容器是空的，返回一个新的空选择 <code>selection</code>。 </li>\n<li><code>enterSelectoin = selection.data(dataSet)</code> 将这个选择连接到一组数据，产生三个新的选择，代表三种可能的状态：<code>enter</code>、<code>update</code> 和 <code>exit</code>。由于选择是空的，所以<code>update</code> 和 <code>exit</code> 的 <code>selection</code> 是空的，而 <code>enter</code> 的 <code>selection</code> 包含每个新基准的占位符。</li>\n<li><code>selection.data(dataSet)</code> 返回更新选择，<code>selection.enter()</code> 返回 <code>enter</code> 选择，而进入和退出选择被挂起 。</li>\n<li><code>enterSelectoin.append()</code> 将缺失的元素添加到 SVG 容器中，这会为每个数据附加一个新的 <code>circle</code> 到 SVG 容器。</li>\n</ul>\n<blockquote>\n<p>当把数据分配到一个元素上时，这个数据被存储到该元素的 <code>_data_</code> 属性中, 数据可以通过 <code>_data_</code> 属性被再选。这也就是我们所说的数据绑定到 DOM 元素</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>D3.js - enter、update、exit<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .container text &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">500</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = &#123;</span></span><br><span class=\"line\">            top: 20,</span><br><span class=\"line\">            right: 20,</span><br><span class=\"line\">            bottom: 30,</span><br><span class=\"line\">            left: 40</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> dataSet = <span class=\"string\">&#x27;abcdefghijklmn&#x27;</span>.split(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> container = svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding.left&#125;</span>, <span class=\"subst\">$&#123;padding.top&#125;</span>)`</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w - padding.left - padding.right)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h - padding.top - padding.bottom);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">dataSet</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> texts = container.selectAll(<span class=\"string\">&#x27;text&#x27;</span>).data(dataSet<span class=\"comment\">/* , (d) =&gt; d */</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(dataSet);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// update 部分</span></span></span><br><span class=\"line\"><span class=\"javascript\">            texts.attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> i * <span class=\"number\">30</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">120</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;#f00&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .text(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;update ----&gt; &#x27;</span> + data); <span class=\"keyword\">return</span> data; &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// enter 部分</span></span></span><br><span class=\"line\">            texts.enter()</span><br><span class=\"line\"><span class=\"javascript\">                .append(<span class=\"string\">&#x27;text&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> i * <span class=\"number\">30</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">120</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;#0f0&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .text(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;enter ----&gt; &#x27;</span> + data); <span class=\"keyword\">return</span> data; &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// exit 部分</span></span></span><br><span class=\"line\">            texts.exit()</span><br><span class=\"line\">                .transition()</span><br><span class=\"line\">                .duration(200)</span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;opacity&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;exit ----&gt; &#x27;</span> + data); <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;scale(0)&#x27;</span>)</span></span><br><span class=\"line\">                .remove();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">window</span>.setInterval(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> data = [<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, ...d3.shuffle(dataSet).slice(<span class=\"number\">0</span>, <span class=\"built_in\">Math</span>.ceil(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>))];</span></span><br><span class=\"line\">            update(data);</span><br><span class=\"line\">        &#125;, 1000);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"update、enter-与-exit\"><a href=\"#update、enter-与-exit\" class=\"headerlink\" title=\"update、enter 与 exit\"></a>update、enter 与 exit</h1><p>作用：处理选择集和数据集关系不确定的情况，对各种选择集分别作处理。</p>\n<p><code>selection.data()</code> 操作返回的是三个 Virtual selection，这三个 Virtual selection 是 enter、 update 以及 exit。</p>\n<p>假设用三个 <code>&lt;p&gt;</code> 元素的选择集（对应的数据分别为 <code>[0, 1, 2]</code>），</p>\n<p>如果将新数据集 [3, 6, 9, 12, 15] 绑定到选择集上，则前三个数据（3，6，9）有与之对应的元素，这部分成为 <code>Update</code><br>而后面两个数据（12，15）没有与之对应的元素，这部分成为 <code>Enter</code></p>\n<p>如果将新数据集 <code>[4, 6]</code> 绑定到选择集上，则前两个数据（4，6）有与之对应的元素，这部分成为 <code>Update</code><br>而原来选择集最后一个数据（2）没有与之对应的元素，这部分成为 <code>Exit</code></p>\n<p>** update、enter、exit的区别**</p>\n<p><code>d3.selectAll(&#39;text&#39;)</code> 的返回值是一个选择集，返回的是当前 DOM 的信息<br><code>d3.selectAll(&#39;text&#39;).data(dataSet)</code> 的返回值是一个选择集，有 <code>enter()</code>、<code>exit()</code> 方法，返回的是绑定前后对比的信息</p>\n<ul>\n<li><code>update</code>: 表示在 DOM 中即将被更新的选择集，update 部分的处理办法一般是：<strong>更新属性值</strong>，如 <code>let updateSelection = svg.selectAll(&#39;circle&#39;).data(dataSet)</code></li>\n<li><code>enter</code>: 表示在 DOM 中即将被添加的选择集，enter 部分的处理办法一般是：<strong>添加元素后，赋予属性值</strong>，如 <code>let enterSelection = svg.selectAll(&#39;circle&#39;).data(dataSet).enter()</code></li>\n<li><code>exit</code>: 表示在 DOM 中即将被删除的选择集，exit 部分的处理办法一般是：<strong>修改属性值，删除元素</strong>，如 <code>let exitSelection = svg.selectAll(&#39;circle&#39;).data(dataSet).exit()</code></li>\n</ul>\n<p>说明：并没有 <code>svg.selectAll(&#39;circle&#39;).data(dataSet).update()</code> 方法，<code>svg.selectAll(&#39;circle&#39;).data(dataSet)</code> 直接返回 Update 选择集（） </p>\n<blockquote>\n<ul>\n<li>比较的是数据集与选择集，而不是比较数据集与选择集中的数据（与 Vue 中的 key 属性、DOM元素复用没有任何联系）</li>\n<li>当有通过数据更新视图时，正确的顺序应该是 <code>update()</code> 、<code>enter()</code>、<code>exit()</code></li>\n<li>重新将数据绑定到选择集上时，不可能同时存在 <code>enter()</code>、<code>exit()</code></li>\n</ul>\n</blockquote>\n<p>对于数组中的数据元素，如果缺少与之对应的 DOM 元素，那么就会有一个占位符来顶替，而 <code>enter()</code> 方法返回的就是这些占位符集合的引用。<br>这个引用后只能链接 <code>append()</code>，<code>insert()</code> 以及 <code>select()</code> 操作符，通过他们来操作该引用所指向的集合。</p>\n<h3 id=\"data-数据绑定（selection-selectAll-data-enter-append-）\"><a href=\"#data-数据绑定（selection-selectAll-data-enter-append-）\" class=\"headerlink\" title=\"data() 数据绑定（selection.selectAll().data().enter().append()）\"></a><code>data()</code> 数据绑定（<code>selection.selectAll().data().enter().append()</code>）</h3><ul>\n<li><code>let selectoin = svg.selectAll(&#39;circle&#39;)</code> 因为 SVG 容器是空的，返回一个新的空选择 <code>selection</code>。 </li>\n<li><code>enterSelectoin = selection.data(dataSet)</code> 将这个选择连接到一组数据，产生三个新的选择，代表三种可能的状态：<code>enter</code>、<code>update</code> 和 <code>exit</code>。由于选择是空的，所以<code>update</code> 和 <code>exit</code> 的 <code>selection</code> 是空的，而 <code>enter</code> 的 <code>selection</code> 包含每个新基准的占位符。</li>\n<li><code>selection.data(dataSet)</code> 返回更新选择，<code>selection.enter()</code> 返回 <code>enter</code> 选择，而进入和退出选择被挂起 。</li>\n<li><code>enterSelectoin.append()</code> 将缺失的元素添加到 SVG 容器中，这会为每个数据附加一个新的 <code>circle</code> 到 SVG 容器。</li>\n</ul>\n<blockquote>\n<p>当把数据分配到一个元素上时，这个数据被存储到该元素的 <code>_data_</code> 属性中, 数据可以通过 <code>_data_</code> 属性被再选。这也就是我们所说的数据绑定到 DOM 元素</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>D3.js - enter、update、exit<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .container text &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">500</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = &#123;</span></span><br><span class=\"line\">            top: 20,</span><br><span class=\"line\">            right: 20,</span><br><span class=\"line\">            bottom: 30,</span><br><span class=\"line\">            left: 40</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> dataSet = <span class=\"string\">&#x27;abcdefghijklmn&#x27;</span>.split(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> container = svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding.left&#125;</span>, <span class=\"subst\">$&#123;padding.top&#125;</span>)`</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w - padding.left - padding.right)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h - padding.top - padding.bottom);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">dataSet</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> texts = container.selectAll(<span class=\"string\">&#x27;text&#x27;</span>).data(dataSet<span class=\"comment\">/* , (d) =&gt; d */</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(dataSet);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// update 部分</span></span></span><br><span class=\"line\"><span class=\"javascript\">            texts.attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> i * <span class=\"number\">30</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">120</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;#f00&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .text(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;update ----&gt; &#x27;</span> + data); <span class=\"keyword\">return</span> data; &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// enter 部分</span></span></span><br><span class=\"line\">            texts.enter()</span><br><span class=\"line\"><span class=\"javascript\">                .append(<span class=\"string\">&#x27;text&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> i * <span class=\"number\">30</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">120</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;#0f0&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .text(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;enter ----&gt; &#x27;</span> + data); <span class=\"keyword\">return</span> data; &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// exit 部分</span></span></span><br><span class=\"line\">            texts.exit()</span><br><span class=\"line\">                .transition()</span><br><span class=\"line\">                .duration(200)</span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;opacity&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;exit ----&gt; &#x27;</span> + data); <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;scale(0)&#x27;</span>)</span></span><br><span class=\"line\">                .remove();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">window</span>.setInterval(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> data = [<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, ...d3.shuffle(dataSet).slice(<span class=\"number\">0</span>, <span class=\"built_in\">Math</span>.ceil(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>))];</span></span><br><span class=\"line\">            update(data);</span><br><span class=\"line\">        &#125;, 1000);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"形状","date":"2021-03-23T16:00:00.000Z","_content":"\n# 形状\n\n### 线条生成器 `d3.svg.line`\n\n* line.x()\n* line.y()\n* line.interpolate()\n    * linear：分段的线性片段，如折线。\n    * step：水平和垂直片段之间交替，如台阶函数。\n    * step-before：垂直和水平片段之间交替，如台阶函数。\n    * step-after： 水平和垂直片段之间交替，如台阶函数。\n    * basis：一个B-spline，在末尾控制点的重复。\n    * basis-open：一个开放的B-spline；首尾不相交。\n    * cardinal：一个Cardinal spline，在末尾控制点的重复。\n    * cardinal-open：一个开放的Cardinal spline；首尾不相交，但是会和其他控制点相交。\n    * monotone：立方插值(cubic interpolation)保存y值得单调性。\n* line.tension()\n\n### 区域生成器 `d3.svg.area`\n\n* area.x()\n* area.y0()\n* area.y1()\n* area.interpolate()\n* area.tensioin()\n\n### 圆弧生成器 `d3.svg.arc`\n\n* arc() 生成一个像饼图或圆环图中的固定弧度\n* arc.centroid(args) 计算弧中心，返回值为一个数组\n* arc.innerRadius() 获取或设置内半径访问器\n* arc.outerRadius() 获取或设置外半径访问器\n* arc.cornerRadius() 获取或设置拐角（corner）半径访问器\n* arc.startAngle() 获取或设置开始角度访问器\n* arc.endAngle() 获取或设置结束角度访问器\n* arc.padAngle() 获取或设置填补（pad）角度访问器\n* arc.padRadius() 获取或设置填补（pad）半径访问器\n\n\n```js\nlet w = 600;\nlet h = 400;\n\nlet svg = d3.select('body')\n    .append('svg')\n    .attr('width', w)\n    .attr('height', h);\n\nlet endAngle = 2 * Math.PI;\n\nlet data = [{ startAngle: 0, endAngle: 0.1 * endAngle },\n    { startAngle: 0.1 * endAngle, endAngle: 0.2 * endAngle },\n    { startAngle: 0.2 * endAngle, endAngle: 0.4 * endAngle },\n    { startAngle: 0.4 * endAngle, endAngle: 0.6 * endAngle },\n    { startAngle: 0.6 * endAngle, endAngle: 0.7 * endAngle },\n    { startAngle: 0.7 * endAngle, endAngle: 0.9 * endAngle },\n    { startAngle: 0.9 * endAngle, endAngle: endAngle }];\n\nlet arc = d3.svg.arc()\n    .innerRadius(100)\n    .outerRadius(150);\n\nlet color = d3.scale.category10();\n\nsvg.append('g')\n    .attr('class', 'arc')\n    .attr('transform', 'translate(250, 250)')\n.selectAll('path')\n    .data(data)\n    .enter()\n    .append('path')\n    .style('fill', (d, i) => color(i))\n    .transition()\n    .duration(1200)\n    .attrTween('d', (d) => {\n        let start = {\n            startAngle: 0,\n            endAngle: 0\n        };\n\n        let interpolate = d3.interpolate(start, d);\n\n        return (t) => arc(interpolate(t));\n    });\n```","source":"_posts/D3.js/形状.md","raw":"---\ntitle: 形状\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 形状\n\n### 线条生成器 `d3.svg.line`\n\n* line.x()\n* line.y()\n* line.interpolate()\n    * linear：分段的线性片段，如折线。\n    * step：水平和垂直片段之间交替，如台阶函数。\n    * step-before：垂直和水平片段之间交替，如台阶函数。\n    * step-after： 水平和垂直片段之间交替，如台阶函数。\n    * basis：一个B-spline，在末尾控制点的重复。\n    * basis-open：一个开放的B-spline；首尾不相交。\n    * cardinal：一个Cardinal spline，在末尾控制点的重复。\n    * cardinal-open：一个开放的Cardinal spline；首尾不相交，但是会和其他控制点相交。\n    * monotone：立方插值(cubic interpolation)保存y值得单调性。\n* line.tension()\n\n### 区域生成器 `d3.svg.area`\n\n* area.x()\n* area.y0()\n* area.y1()\n* area.interpolate()\n* area.tensioin()\n\n### 圆弧生成器 `d3.svg.arc`\n\n* arc() 生成一个像饼图或圆环图中的固定弧度\n* arc.centroid(args) 计算弧中心，返回值为一个数组\n* arc.innerRadius() 获取或设置内半径访问器\n* arc.outerRadius() 获取或设置外半径访问器\n* arc.cornerRadius() 获取或设置拐角（corner）半径访问器\n* arc.startAngle() 获取或设置开始角度访问器\n* arc.endAngle() 获取或设置结束角度访问器\n* arc.padAngle() 获取或设置填补（pad）角度访问器\n* arc.padRadius() 获取或设置填补（pad）半径访问器\n\n\n```js\nlet w = 600;\nlet h = 400;\n\nlet svg = d3.select('body')\n    .append('svg')\n    .attr('width', w)\n    .attr('height', h);\n\nlet endAngle = 2 * Math.PI;\n\nlet data = [{ startAngle: 0, endAngle: 0.1 * endAngle },\n    { startAngle: 0.1 * endAngle, endAngle: 0.2 * endAngle },\n    { startAngle: 0.2 * endAngle, endAngle: 0.4 * endAngle },\n    { startAngle: 0.4 * endAngle, endAngle: 0.6 * endAngle },\n    { startAngle: 0.6 * endAngle, endAngle: 0.7 * endAngle },\n    { startAngle: 0.7 * endAngle, endAngle: 0.9 * endAngle },\n    { startAngle: 0.9 * endAngle, endAngle: endAngle }];\n\nlet arc = d3.svg.arc()\n    .innerRadius(100)\n    .outerRadius(150);\n\nlet color = d3.scale.category10();\n\nsvg.append('g')\n    .attr('class', 'arc')\n    .attr('transform', 'translate(250, 250)')\n.selectAll('path')\n    .data(data)\n    .enter()\n    .append('path')\n    .style('fill', (d, i) => color(i))\n    .transition()\n    .duration(1200)\n    .attrTween('d', (d) => {\n        let start = {\n            startAngle: 0,\n            endAngle: 0\n        };\n\n        let interpolate = d3.interpolate(start, d);\n\n        return (t) => arc(interpolate(t));\n    });\n```","slug":"D3.js/形状","published":1,"updated":"2021-04-28T02:31:17.703Z","_id":"cko0u126q0004y26rhwaw5mkh","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"形状\"><a href=\"#形状\" class=\"headerlink\" title=\"形状\"></a>形状</h1><h3 id=\"线条生成器-d3-svg-line\"><a href=\"#线条生成器-d3-svg-line\" class=\"headerlink\" title=\"线条生成器 d3.svg.line\"></a>线条生成器 <code>d3.svg.line</code></h3><ul>\n<li>line.x()</li>\n<li>line.y()</li>\n<li>line.interpolate()<ul>\n<li>linear：分段的线性片段，如折线。</li>\n<li>step：水平和垂直片段之间交替，如台阶函数。</li>\n<li>step-before：垂直和水平片段之间交替，如台阶函数。</li>\n<li>step-after： 水平和垂直片段之间交替，如台阶函数。</li>\n<li>basis：一个B-spline，在末尾控制点的重复。</li>\n<li>basis-open：一个开放的B-spline；首尾不相交。</li>\n<li>cardinal：一个Cardinal spline，在末尾控制点的重复。</li>\n<li>cardinal-open：一个开放的Cardinal spline；首尾不相交，但是会和其他控制点相交。</li>\n<li>monotone：立方插值(cubic interpolation)保存y值得单调性。</li>\n</ul>\n</li>\n<li>line.tension()</li>\n</ul>\n<h3 id=\"区域生成器-d3-svg-area\"><a href=\"#区域生成器-d3-svg-area\" class=\"headerlink\" title=\"区域生成器 d3.svg.area\"></a>区域生成器 <code>d3.svg.area</code></h3><ul>\n<li>area.x()</li>\n<li>area.y0()</li>\n<li>area.y1()</li>\n<li>area.interpolate()</li>\n<li>area.tensioin()</li>\n</ul>\n<h3 id=\"圆弧生成器-d3-svg-arc\"><a href=\"#圆弧生成器-d3-svg-arc\" class=\"headerlink\" title=\"圆弧生成器 d3.svg.arc\"></a>圆弧生成器 <code>d3.svg.arc</code></h3><ul>\n<li>arc() 生成一个像饼图或圆环图中的固定弧度</li>\n<li>arc.centroid(args) 计算弧中心，返回值为一个数组</li>\n<li>arc.innerRadius() 获取或设置内半径访问器</li>\n<li>arc.outerRadius() 获取或设置外半径访问器</li>\n<li>arc.cornerRadius() 获取或设置拐角（corner）半径访问器</li>\n<li>arc.startAngle() 获取或设置开始角度访问器</li>\n<li>arc.endAngle() 获取或设置结束角度访问器</li>\n<li>arc.padAngle() 获取或设置填补（pad）角度访问器</li>\n<li>arc.padRadius() 获取或设置填补（pad）半径访问器</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> w = <span class=\"number\">600</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span><br><span class=\"line\">    .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> endAngle = <span class=\"number\">2</span> * <span class=\"built_in\">Math</span>.PI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> data = [&#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0</span>, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.1</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.1</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.2</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.2</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.4</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.4</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.6</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.6</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.7</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.7</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.9</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.9</span> * endAngle, <span class=\"attr\">endAngle</span>: endAngle &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arc = d3.svg.arc()</span><br><span class=\"line\">    .innerRadius(<span class=\"number\">100</span>)</span><br><span class=\"line\">    .outerRadius(<span class=\"number\">150</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> color = d3.scale.category10();</span><br><span class=\"line\"></span><br><span class=\"line\">svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;arc&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;translate(250, 250)&#x27;</span>)</span><br><span class=\"line\">.selectAll(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\">    .data(data)</span><br><span class=\"line\">    .enter()</span><br><span class=\"line\">    .append(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\">    .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> color(i))</span><br><span class=\"line\">    .transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1200</span>)</span><br><span class=\"line\">    .attrTween(<span class=\"string\">&#x27;d&#x27;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> start = &#123;</span><br><span class=\"line\">            startAngle: <span class=\"number\">0</span>,</span><br><span class=\"line\">            endAngle: <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> interpolate = d3.interpolate(start, d);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">t</span>) =&gt;</span> arc(interpolate(t));</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"形状\"><a href=\"#形状\" class=\"headerlink\" title=\"形状\"></a>形状</h1><h3 id=\"线条生成器-d3-svg-line\"><a href=\"#线条生成器-d3-svg-line\" class=\"headerlink\" title=\"线条生成器 d3.svg.line\"></a>线条生成器 <code>d3.svg.line</code></h3><ul>\n<li>line.x()</li>\n<li>line.y()</li>\n<li>line.interpolate()<ul>\n<li>linear：分段的线性片段，如折线。</li>\n<li>step：水平和垂直片段之间交替，如台阶函数。</li>\n<li>step-before：垂直和水平片段之间交替，如台阶函数。</li>\n<li>step-after： 水平和垂直片段之间交替，如台阶函数。</li>\n<li>basis：一个B-spline，在末尾控制点的重复。</li>\n<li>basis-open：一个开放的B-spline；首尾不相交。</li>\n<li>cardinal：一个Cardinal spline，在末尾控制点的重复。</li>\n<li>cardinal-open：一个开放的Cardinal spline；首尾不相交，但是会和其他控制点相交。</li>\n<li>monotone：立方插值(cubic interpolation)保存y值得单调性。</li>\n</ul>\n</li>\n<li>line.tension()</li>\n</ul>\n<h3 id=\"区域生成器-d3-svg-area\"><a href=\"#区域生成器-d3-svg-area\" class=\"headerlink\" title=\"区域生成器 d3.svg.area\"></a>区域生成器 <code>d3.svg.area</code></h3><ul>\n<li>area.x()</li>\n<li>area.y0()</li>\n<li>area.y1()</li>\n<li>area.interpolate()</li>\n<li>area.tensioin()</li>\n</ul>\n<h3 id=\"圆弧生成器-d3-svg-arc\"><a href=\"#圆弧生成器-d3-svg-arc\" class=\"headerlink\" title=\"圆弧生成器 d3.svg.arc\"></a>圆弧生成器 <code>d3.svg.arc</code></h3><ul>\n<li>arc() 生成一个像饼图或圆环图中的固定弧度</li>\n<li>arc.centroid(args) 计算弧中心，返回值为一个数组</li>\n<li>arc.innerRadius() 获取或设置内半径访问器</li>\n<li>arc.outerRadius() 获取或设置外半径访问器</li>\n<li>arc.cornerRadius() 获取或设置拐角（corner）半径访问器</li>\n<li>arc.startAngle() 获取或设置开始角度访问器</li>\n<li>arc.endAngle() 获取或设置结束角度访问器</li>\n<li>arc.padAngle() 获取或设置填补（pad）角度访问器</li>\n<li>arc.padRadius() 获取或设置填补（pad）半径访问器</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> w = <span class=\"number\">600</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span><br><span class=\"line\">    .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> endAngle = <span class=\"number\">2</span> * <span class=\"built_in\">Math</span>.PI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> data = [&#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0</span>, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.1</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.1</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.2</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.2</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.4</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.4</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.6</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.6</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.7</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.7</span> * endAngle, <span class=\"attr\">endAngle</span>: <span class=\"number\">0.9</span> * endAngle &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">startAngle</span>: <span class=\"number\">0.9</span> * endAngle, <span class=\"attr\">endAngle</span>: endAngle &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arc = d3.svg.arc()</span><br><span class=\"line\">    .innerRadius(<span class=\"number\">100</span>)</span><br><span class=\"line\">    .outerRadius(<span class=\"number\">150</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> color = d3.scale.category10();</span><br><span class=\"line\"></span><br><span class=\"line\">svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;arc&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;translate(250, 250)&#x27;</span>)</span><br><span class=\"line\">.selectAll(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\">    .data(data)</span><br><span class=\"line\">    .enter()</span><br><span class=\"line\">    .append(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\">    .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> color(i))</span><br><span class=\"line\">    .transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1200</span>)</span><br><span class=\"line\">    .attrTween(<span class=\"string\">&#x27;d&#x27;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> start = &#123;</span><br><span class=\"line\">            startAngle: <span class=\"number\">0</span>,</span><br><span class=\"line\">            endAngle: <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> interpolate = d3.interpolate(start, d);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">t</span>) =&gt;</span> arc(interpolate(t));</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>"},{"title":"布局","date":"2021-03-23T16:00:00.000Z","_content":"\n# 布局\n\n### 1、饼布局 `d3.layout.pie`\n\n* pie.endAngl 取得或设置饼布局整体的结束角度\n* pie.padAngle 取得或设置饼布局填充角度\n* pie.sort 控制饼片段的顺时针方向的顺序\n* pie.startAngle 取得或设置饼布局整体的开始角度\n* pie.value 取得或设置值访问器函数\n* pie 计算饼图或圆环图中弧的开始和结束角度\n\n### 力布局 `d3.layout.force`\n* force.links() 取得或者设置节点间的链接数组\n* force.nodes() 取得或者设置布局的节点数组\n* force.size() 取得或者设置布局大小\n* force.linkDistance() 取得或者设置链接距离\n* force.charge() 取得或者设置电荷强度\n* force.on() 监听在计算布局位置时的更新\n    * start 力学图运动开始\n    * tick 力学图运动中\n    * end 力学图运动结束\n* force.drag() 给节点绑定拖动行为\n    * dragstart 单个节点拖拽开始\n    * drag 单个节点拖拽中\n    * dragend 单个节点拖拽结束\n* force.alpha() 取得或者设置力布局的冷却参数\n\n### 树布局 `d3.layout.tree`\n* `tree()` tree.nodes的别名\n* `tree.children()` 取得或设置孩子访问器\n* `tree.size()` 用x和y指定树的尺寸\n* `tree.nodes()` 计算父布局并返回一组节点\n* `tree.links()` 计算树节点的父-子连接\n* `tree.sort()` 控制遍历顺序中兄弟节点的顺序\n* `tree.nodeSize()` 为每个节点指定一个固定的尺寸\n* `tree.separation()` 取得或设置相邻节点的间隔函数\n","source":"_posts/D3.js/布局.md","raw":"---\ntitle: 布局\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 布局\n\n### 1、饼布局 `d3.layout.pie`\n\n* pie.endAngl 取得或设置饼布局整体的结束角度\n* pie.padAngle 取得或设置饼布局填充角度\n* pie.sort 控制饼片段的顺时针方向的顺序\n* pie.startAngle 取得或设置饼布局整体的开始角度\n* pie.value 取得或设置值访问器函数\n* pie 计算饼图或圆环图中弧的开始和结束角度\n\n### 力布局 `d3.layout.force`\n* force.links() 取得或者设置节点间的链接数组\n* force.nodes() 取得或者设置布局的节点数组\n* force.size() 取得或者设置布局大小\n* force.linkDistance() 取得或者设置链接距离\n* force.charge() 取得或者设置电荷强度\n* force.on() 监听在计算布局位置时的更新\n    * start 力学图运动开始\n    * tick 力学图运动中\n    * end 力学图运动结束\n* force.drag() 给节点绑定拖动行为\n    * dragstart 单个节点拖拽开始\n    * drag 单个节点拖拽中\n    * dragend 单个节点拖拽结束\n* force.alpha() 取得或者设置力布局的冷却参数\n\n### 树布局 `d3.layout.tree`\n* `tree()` tree.nodes的别名\n* `tree.children()` 取得或设置孩子访问器\n* `tree.size()` 用x和y指定树的尺寸\n* `tree.nodes()` 计算父布局并返回一组节点\n* `tree.links()` 计算树节点的父-子连接\n* `tree.sort()` 控制遍历顺序中兄弟节点的顺序\n* `tree.nodeSize()` 为每个节点指定一个固定的尺寸\n* `tree.separation()` 取得或设置相邻节点的间隔函数\n","slug":"D3.js/布局","published":1,"updated":"2021-04-28T02:30:46.361Z","_id":"cko0u126r0005y26rgqlb1smt","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h1><h3 id=\"1、饼布局-d3-layout-pie\"><a href=\"#1、饼布局-d3-layout-pie\" class=\"headerlink\" title=\"1、饼布局 d3.layout.pie\"></a>1、饼布局 <code>d3.layout.pie</code></h3><ul>\n<li>pie.endAngl 取得或设置饼布局整体的结束角度</li>\n<li>pie.padAngle 取得或设置饼布局填充角度</li>\n<li>pie.sort 控制饼片段的顺时针方向的顺序</li>\n<li>pie.startAngle 取得或设置饼布局整体的开始角度</li>\n<li>pie.value 取得或设置值访问器函数</li>\n<li>pie 计算饼图或圆环图中弧的开始和结束角度</li>\n</ul>\n<h3 id=\"力布局-d3-layout-force\"><a href=\"#力布局-d3-layout-force\" class=\"headerlink\" title=\"力布局 d3.layout.force\"></a>力布局 <code>d3.layout.force</code></h3><ul>\n<li>force.links() 取得或者设置节点间的链接数组</li>\n<li>force.nodes() 取得或者设置布局的节点数组</li>\n<li>force.size() 取得或者设置布局大小</li>\n<li>force.linkDistance() 取得或者设置链接距离</li>\n<li>force.charge() 取得或者设置电荷强度</li>\n<li>force.on() 监听在计算布局位置时的更新<ul>\n<li>start 力学图运动开始</li>\n<li>tick 力学图运动中</li>\n<li>end 力学图运动结束</li>\n</ul>\n</li>\n<li>force.drag() 给节点绑定拖动行为<ul>\n<li>dragstart 单个节点拖拽开始</li>\n<li>drag 单个节点拖拽中</li>\n<li>dragend 单个节点拖拽结束</li>\n</ul>\n</li>\n<li>force.alpha() 取得或者设置力布局的冷却参数</li>\n</ul>\n<h3 id=\"树布局-d3-layout-tree\"><a href=\"#树布局-d3-layout-tree\" class=\"headerlink\" title=\"树布局 d3.layout.tree\"></a>树布局 <code>d3.layout.tree</code></h3><ul>\n<li><code>tree()</code> tree.nodes的别名</li>\n<li><code>tree.children()</code> 取得或设置孩子访问器</li>\n<li><code>tree.size()</code> 用x和y指定树的尺寸</li>\n<li><code>tree.nodes()</code> 计算父布局并返回一组节点</li>\n<li><code>tree.links()</code> 计算树节点的父-子连接</li>\n<li><code>tree.sort()</code> 控制遍历顺序中兄弟节点的顺序</li>\n<li><code>tree.nodeSize()</code> 为每个节点指定一个固定的尺寸</li>\n<li><code>tree.separation()</code> 取得或设置相邻节点的间隔函数</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h1><h3 id=\"1、饼布局-d3-layout-pie\"><a href=\"#1、饼布局-d3-layout-pie\" class=\"headerlink\" title=\"1、饼布局 d3.layout.pie\"></a>1、饼布局 <code>d3.layout.pie</code></h3><ul>\n<li>pie.endAngl 取得或设置饼布局整体的结束角度</li>\n<li>pie.padAngle 取得或设置饼布局填充角度</li>\n<li>pie.sort 控制饼片段的顺时针方向的顺序</li>\n<li>pie.startAngle 取得或设置饼布局整体的开始角度</li>\n<li>pie.value 取得或设置值访问器函数</li>\n<li>pie 计算饼图或圆环图中弧的开始和结束角度</li>\n</ul>\n<h3 id=\"力布局-d3-layout-force\"><a href=\"#力布局-d3-layout-force\" class=\"headerlink\" title=\"力布局 d3.layout.force\"></a>力布局 <code>d3.layout.force</code></h3><ul>\n<li>force.links() 取得或者设置节点间的链接数组</li>\n<li>force.nodes() 取得或者设置布局的节点数组</li>\n<li>force.size() 取得或者设置布局大小</li>\n<li>force.linkDistance() 取得或者设置链接距离</li>\n<li>force.charge() 取得或者设置电荷强度</li>\n<li>force.on() 监听在计算布局位置时的更新<ul>\n<li>start 力学图运动开始</li>\n<li>tick 力学图运动中</li>\n<li>end 力学图运动结束</li>\n</ul>\n</li>\n<li>force.drag() 给节点绑定拖动行为<ul>\n<li>dragstart 单个节点拖拽开始</li>\n<li>drag 单个节点拖拽中</li>\n<li>dragend 单个节点拖拽结束</li>\n</ul>\n</li>\n<li>force.alpha() 取得或者设置力布局的冷却参数</li>\n</ul>\n<h3 id=\"树布局-d3-layout-tree\"><a href=\"#树布局-d3-layout-tree\" class=\"headerlink\" title=\"树布局 d3.layout.tree\"></a>树布局 <code>d3.layout.tree</code></h3><ul>\n<li><code>tree()</code> tree.nodes的别名</li>\n<li><code>tree.children()</code> 取得或设置孩子访问器</li>\n<li><code>tree.size()</code> 用x和y指定树的尺寸</li>\n<li><code>tree.nodes()</code> 计算父布局并返回一组节点</li>\n<li><code>tree.links()</code> 计算树节点的父-子连接</li>\n<li><code>tree.sort()</code> 控制遍历顺序中兄弟节点的顺序</li>\n<li><code>tree.nodeSize()</code> 为每个节点指定一个固定的尺寸</li>\n<li><code>tree.separation()</code> 取得或设置相邻节点的间隔函数</li>\n</ul>\n"},{"title":"技巧","date":"2021-03-23T16:00:00.000Z","_content":"\n# 技巧\n\n\n* 画布区域要有留白 `padding = [20, 20, 30, 40]`\n* Y 轴方向的尺度需要做倒置处理，因为浏览器默认 SVG 的 Y 轴是从上至下，但按照图标惯例是从下至上，所以数据项的值越大时，对应的 Y 轴坐标应该越小。为了处理这些逆转，可以在定义范围时交换这些值，如 `d3.scale.linear().domain([0, maxVal]).range([height, 0])`\n* `<g>` 元素内的所有元素都是以父元素 `<g>` 为标准进行排版\n    * 图形区域用 `<g>` 元素包裹\n    * 坐标轴区域用 `<g>` 元素包裹\n    * 图例区域用 `<g>` 元素包裹\n    * ... \n* 对于图标中可能会重叠的项，可以添加透明度，增强层次感","source":"_posts/D3.js/技巧篇.md","raw":"---\ntitle: 技巧\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 技巧\n\n\n* 画布区域要有留白 `padding = [20, 20, 30, 40]`\n* Y 轴方向的尺度需要做倒置处理，因为浏览器默认 SVG 的 Y 轴是从上至下，但按照图标惯例是从下至上，所以数据项的值越大时，对应的 Y 轴坐标应该越小。为了处理这些逆转，可以在定义范围时交换这些值，如 `d3.scale.linear().domain([0, maxVal]).range([height, 0])`\n* `<g>` 元素内的所有元素都是以父元素 `<g>` 为标准进行排版\n    * 图形区域用 `<g>` 元素包裹\n    * 坐标轴区域用 `<g>` 元素包裹\n    * 图例区域用 `<g>` 元素包裹\n    * ... \n* 对于图标中可能会重叠的项，可以添加透明度，增强层次感","slug":"D3.js/技巧篇","published":1,"updated":"2021-04-28T02:31:12.302Z","_id":"cko0u126v0006y26rh569bcq9","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h1><ul>\n<li>画布区域要有留白 <code>padding = [20, 20, 30, 40]</code></li>\n<li>Y 轴方向的尺度需要做倒置处理，因为浏览器默认 SVG 的 Y 轴是从上至下，但按照图标惯例是从下至上，所以数据项的值越大时，对应的 Y 轴坐标应该越小。为了处理这些逆转，可以在定义范围时交换这些值，如 <code>d3.scale.linear().domain([0, maxVal]).range([height, 0])</code></li>\n<li><code>&lt;g&gt;</code> 元素内的所有元素都是以父元素 <code>&lt;g&gt;</code> 为标准进行排版<ul>\n<li>图形区域用 <code>&lt;g&gt;</code> 元素包裹</li>\n<li>坐标轴区域用 <code>&lt;g&gt;</code> 元素包裹</li>\n<li>图例区域用 <code>&lt;g&gt;</code> 元素包裹</li>\n<li>… </li>\n</ul>\n</li>\n<li>对于图标中可能会重叠的项，可以添加透明度，增强层次感</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h1><ul>\n<li>画布区域要有留白 <code>padding = [20, 20, 30, 40]</code></li>\n<li>Y 轴方向的尺度需要做倒置处理，因为浏览器默认 SVG 的 Y 轴是从上至下，但按照图标惯例是从下至上，所以数据项的值越大时，对应的 Y 轴坐标应该越小。为了处理这些逆转，可以在定义范围时交换这些值，如 <code>d3.scale.linear().domain([0, maxVal]).range([height, 0])</code></li>\n<li><code>&lt;g&gt;</code> 元素内的所有元素都是以父元素 <code>&lt;g&gt;</code> 为标准进行排版<ul>\n<li>图形区域用 <code>&lt;g&gt;</code> 元素包裹</li>\n<li>坐标轴区域用 <code>&lt;g&gt;</code> 元素包裹</li>\n<li>图例区域用 <code>&lt;g&gt;</code> 元素包裹</li>\n<li>… </li>\n</ul>\n</li>\n<li>对于图标中可能会重叠的项，可以添加透明度，增强层次感</li>\n</ul>\n"},{"title":"比例尺","date":"2021-03-23T16:00:00.000Z","_content":"\n# 比例尺\n\n说明：任何数据集中的值都不太可能完全对应于可视化中使用的像素测量值。比例提供了一种方便的方法，将这些数据值映射为可用于可视化目的的新值。\n\n`d3.scale`\n\n> 数据集中的数据其实是通过映射成一个个坐标点后在页面中绘制出来的，而数据可能会很大或很小，所以需要将数值进行映射以适配 SVG 容器的大小\n\n* scale.copy: 创建比例尺的副本。\n* scale.interpolate: 取得或设置比例尺的输出插值器。\n* scale.invert: 取得给定输出值对应定义域中的值。\n* scale.nice: 扩展比例尺的定义域为一个优化的整数值。\n* scale.tickFormat: 取得用于展示刻度值的格式化器。\n* scale.ticks: 取得定义域中有代表性的值。\n\n### 插值器\n给定函数 `f(x)` 在 `x0, x1,...,xn` 处的值。现有 `x'`，其值在上述取值点间。那么，求 `f(x')`值的过程叫做 **插值**\n\n插值不仅在尺度功能的实现中非常重要，对于 D3 的其他核心功能的实现也不可或缺，例如，动画和布局管理功能。因而 D3 设计了一个独立、可重用的插值\n器，以便在实现其他功能时提供统一的调用方式。（默认的范围域是 `[0, 1]`）\n\n* d3.interpolate: 返回一个介于 a 和 b 之间的默认插值器(`a`、`b`可为对象，包含多个属性，使用复合尺度插值时，D3 会遍历对象中的所有成员，并对其每一个组成部分应用相应的简单插值规则)\n* d3.interpolateNumber: 插补两个数字值\n* d3.interpolateString: 插补两个字符串\n* d3.interpolateArray: 插补两个数组\n* d3.interpolateHcl: 插补两个 HCL 颜色值\n* d3.interpolateHsl: 插补两个 HSL 颜色值\n* d3.interpolateLab: 插补两个 `L * a * b *` 颜色值\n* d3.interpolateObject: 插补两个任意对象\n* d3.interpolateRgb: 插补两个RGB颜色值\n* d3.interpolateRound: 插补两个整数\n* d3.interpolateTransform: 插补两个 2D 矩阵变换\n* d3.interpolateZoom: 在两个点之间平滑地缩放平移\n\n```js\nvar interpolate = d3.interpolateNumber(0, 100);\ninterpolate(0.1);  // 10\ninterpolate(0.99); // 99\n\n// 使用 d3.interpolateNumber 函数创建了一个值域为 [0, 100] 的interpolate函数，并使用这个函数对指定的数字进行插值。该函数与如下代码是等价的。\n// function interpolate(t){\n//     return a * (1 - t) + b * t;\n// }\n\n```\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 600;\n        let h = 400;\n        let start = {\n            'font-size': '12px',\n            color: '#f00'\n        };\n        let end = {\n            'font-size': '40px',\n            color: '#ff0'\n        };\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n            \n        let interpolate = d3.interpolate(start, end);\n        let groups = svg.append('g');\n\n        for (let i = 1; i < 10; i++) {\n            let info = interpolate(i / 10);\n            groups.append('text')\n                .text(i)\n                .attr('x', 0 + i * 24)\n                .attr('y', 40),\n                .attr('class', 'text-list')\n                .style('fill', info.color)\n                .style('font-size', info['font-size']);\n        }\n    </script>\n</body>\n\n</html>\n```\n\n## 类别\n* 数值尺度\n    * d3.scale.linear: 线性比例尺 （`f(n) = kx + b`）\n        * d3.time.scale: 线性时间比例尺\n    * d3.scale.pow: 指数比例尺 （`f(n) = a * n ^ 2 + b`）\n        * pow.exponent(k) 用于设置二项式系数 a 的值，默认为 1\n    * d3.scale.log: 对数比例尺（`f(n) = a * log(n) + b`）\n        * log.base(base) : 设置这个对数比例尺的底数，默认是 10\n    * d3.scale.quantize: 量化比例尺（定义域是连续的，值域是离散）\n    * d3.scale.identity: 线性恒等比例尺\n    * d3.scale.quantile: 分位数比例尺\n    * d3.scale.sqrt: 平方根比例尺\n    * d3.scale.threshold: 临界值比例尺（值域离散）\n* 有序尺度\n    * d3.scale.ordinal: 序数比例尺 （key、value 映射，无具体表达式）\n    * d3.scale.category10: 该比例尺中有默认的值域中有 10 种颜色\n    * d3.scale.category20: 该比例尺中有默认的值域中有 20 种颜色\n    * d3.scale.category20b: 该比例尺中有默认的值域中有 20 种颜色\n    * d3.scale.category20c: 该比例尺中有默认的值域中有 20 种颜色\n\n\n## 线性比例尺\n\n说明：将输入域映射到连续的输出范围，类似 `y=kx+b` 线性函数，如将身高映射成柱状图的高度（像素），`let linear = d3.scale.linear()`\n\n> * 线性比例尺的默认输入域 [0, 1]，默认输出范围为 [0, 1]，此时为恒等函数\n> * 比例尺只是定义了一个映射规则，映射的输入值并不局限于 `domain()` 中的输入域\n\n* `linear(x)`：在输入域中的输入 x，返回输出范围对应的值。\n* `linear.domain([min, max])`：指定输入域范围\n* `linear.range([min, max])`：指定输出范围\n* `linear.ticks()`：返回比例尺输入域的代表性时间\n\n## 时间比例尺\n\n说明：`d3.time.scale` 是 `d3.scale.linear` 比例尺的扩展，使用 Javascript 的 `Date` 对象作为其输入域 `domain`，`let time = d3.time.scale()` \n\n* `time`: 取得给定定义域中值对应的输出范围中的值。\n* `time.domain`: 取得或设置比例尺度的定义域。\n* `time.rangeRound`: 设置比例尺的四舍五入输出范围。\n* `time.range`：取得或设置比例尺的输出范围。\n\n\n## 序号比例尺\n\n说明：序号比例尺来映射输入域（离散）到输出范围。 `let ordinal = d3.scale.ordinal()`\n\n* `ordinal(x)`：在输入域中的输入 x，返回输出范围对应的值。\n* `ordinal.domain([a, b, ..., x])`：指定输入域范围（一系列离散的数据）\n* `ordinal.range([k1, k2, ..., kn])`：如果指定了输出范围，设置当前比例尺对象的输出范围为指定的 values 数组，如果 values 中的值的个数少于输入域中元素的个数，那么 values 中的值会被循环使用。（主要用于颜色）\n* `ordinal.rangePoints([min, max], padding)`：指定输出范围为一个连续的区间，第一个位置和最后一个位置会因为入参 padding 的值而做相应，消减长度是padding 个间隔长度的一半；默认情况下 padding 是 0 \n* `ordinal.rangeBands([min, max], padding, outerPadding)`：该函数是将区间切分成一个个小的区间段，而不是一个个刻度点（刻度在坐标轴中间，而不是在起点，适用于柱状图）\n* `rdinal.rangeRoundPoints([min, max], padding)`：功能同 `ordinal.rangePoints`，但是该函数可以美化输出的刻度点，即保证整数\n* `ordinal.rangeRoundBands([min, max], padding, outerPadding)` 功能同 `ordinal.rangeBands`，但是该函数可以美化输出的区间段，即保证每个区间段的起点值都是整数\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 800;\n        let h = 400;\n        let padding = 40;\n        let dateRange = [new Date(2017, 0, 1), new Date(2018, 2, 1)];\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        let xScale = d3.time.scale()\n            .domain(dateRange)\n            .rangeRound([padding, w - padding]);\n\n        let axis = d3.svg.axis()\n            .scale(xScale)\n            .tickFormat(d3.time.format('%m-%d'));\n\n        svg.append('g')\n            .attr('class', 'x-axis')\n            .call(axis);\n    </script>\n</body>\n\n</html>\n```","source":"_posts/D3.js/比例尺.md","raw":"---\ntitle: 比例尺\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 比例尺\n\n说明：任何数据集中的值都不太可能完全对应于可视化中使用的像素测量值。比例提供了一种方便的方法，将这些数据值映射为可用于可视化目的的新值。\n\n`d3.scale`\n\n> 数据集中的数据其实是通过映射成一个个坐标点后在页面中绘制出来的，而数据可能会很大或很小，所以需要将数值进行映射以适配 SVG 容器的大小\n\n* scale.copy: 创建比例尺的副本。\n* scale.interpolate: 取得或设置比例尺的输出插值器。\n* scale.invert: 取得给定输出值对应定义域中的值。\n* scale.nice: 扩展比例尺的定义域为一个优化的整数值。\n* scale.tickFormat: 取得用于展示刻度值的格式化器。\n* scale.ticks: 取得定义域中有代表性的值。\n\n### 插值器\n给定函数 `f(x)` 在 `x0, x1,...,xn` 处的值。现有 `x'`，其值在上述取值点间。那么，求 `f(x')`值的过程叫做 **插值**\n\n插值不仅在尺度功能的实现中非常重要，对于 D3 的其他核心功能的实现也不可或缺，例如，动画和布局管理功能。因而 D3 设计了一个独立、可重用的插值\n器，以便在实现其他功能时提供统一的调用方式。（默认的范围域是 `[0, 1]`）\n\n* d3.interpolate: 返回一个介于 a 和 b 之间的默认插值器(`a`、`b`可为对象，包含多个属性，使用复合尺度插值时，D3 会遍历对象中的所有成员，并对其每一个组成部分应用相应的简单插值规则)\n* d3.interpolateNumber: 插补两个数字值\n* d3.interpolateString: 插补两个字符串\n* d3.interpolateArray: 插补两个数组\n* d3.interpolateHcl: 插补两个 HCL 颜色值\n* d3.interpolateHsl: 插补两个 HSL 颜色值\n* d3.interpolateLab: 插补两个 `L * a * b *` 颜色值\n* d3.interpolateObject: 插补两个任意对象\n* d3.interpolateRgb: 插补两个RGB颜色值\n* d3.interpolateRound: 插补两个整数\n* d3.interpolateTransform: 插补两个 2D 矩阵变换\n* d3.interpolateZoom: 在两个点之间平滑地缩放平移\n\n```js\nvar interpolate = d3.interpolateNumber(0, 100);\ninterpolate(0.1);  // 10\ninterpolate(0.99); // 99\n\n// 使用 d3.interpolateNumber 函数创建了一个值域为 [0, 100] 的interpolate函数，并使用这个函数对指定的数字进行插值。该函数与如下代码是等价的。\n// function interpolate(t){\n//     return a * (1 - t) + b * t;\n// }\n\n```\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 600;\n        let h = 400;\n        let start = {\n            'font-size': '12px',\n            color: '#f00'\n        };\n        let end = {\n            'font-size': '40px',\n            color: '#ff0'\n        };\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n            \n        let interpolate = d3.interpolate(start, end);\n        let groups = svg.append('g');\n\n        for (let i = 1; i < 10; i++) {\n            let info = interpolate(i / 10);\n            groups.append('text')\n                .text(i)\n                .attr('x', 0 + i * 24)\n                .attr('y', 40),\n                .attr('class', 'text-list')\n                .style('fill', info.color)\n                .style('font-size', info['font-size']);\n        }\n    </script>\n</body>\n\n</html>\n```\n\n## 类别\n* 数值尺度\n    * d3.scale.linear: 线性比例尺 （`f(n) = kx + b`）\n        * d3.time.scale: 线性时间比例尺\n    * d3.scale.pow: 指数比例尺 （`f(n) = a * n ^ 2 + b`）\n        * pow.exponent(k) 用于设置二项式系数 a 的值，默认为 1\n    * d3.scale.log: 对数比例尺（`f(n) = a * log(n) + b`）\n        * log.base(base) : 设置这个对数比例尺的底数，默认是 10\n    * d3.scale.quantize: 量化比例尺（定义域是连续的，值域是离散）\n    * d3.scale.identity: 线性恒等比例尺\n    * d3.scale.quantile: 分位数比例尺\n    * d3.scale.sqrt: 平方根比例尺\n    * d3.scale.threshold: 临界值比例尺（值域离散）\n* 有序尺度\n    * d3.scale.ordinal: 序数比例尺 （key、value 映射，无具体表达式）\n    * d3.scale.category10: 该比例尺中有默认的值域中有 10 种颜色\n    * d3.scale.category20: 该比例尺中有默认的值域中有 20 种颜色\n    * d3.scale.category20b: 该比例尺中有默认的值域中有 20 种颜色\n    * d3.scale.category20c: 该比例尺中有默认的值域中有 20 种颜色\n\n\n## 线性比例尺\n\n说明：将输入域映射到连续的输出范围，类似 `y=kx+b` 线性函数，如将身高映射成柱状图的高度（像素），`let linear = d3.scale.linear()`\n\n> * 线性比例尺的默认输入域 [0, 1]，默认输出范围为 [0, 1]，此时为恒等函数\n> * 比例尺只是定义了一个映射规则，映射的输入值并不局限于 `domain()` 中的输入域\n\n* `linear(x)`：在输入域中的输入 x，返回输出范围对应的值。\n* `linear.domain([min, max])`：指定输入域范围\n* `linear.range([min, max])`：指定输出范围\n* `linear.ticks()`：返回比例尺输入域的代表性时间\n\n## 时间比例尺\n\n说明：`d3.time.scale` 是 `d3.scale.linear` 比例尺的扩展，使用 Javascript 的 `Date` 对象作为其输入域 `domain`，`let time = d3.time.scale()` \n\n* `time`: 取得给定定义域中值对应的输出范围中的值。\n* `time.domain`: 取得或设置比例尺度的定义域。\n* `time.rangeRound`: 设置比例尺的四舍五入输出范围。\n* `time.range`：取得或设置比例尺的输出范围。\n\n\n## 序号比例尺\n\n说明：序号比例尺来映射输入域（离散）到输出范围。 `let ordinal = d3.scale.ordinal()`\n\n* `ordinal(x)`：在输入域中的输入 x，返回输出范围对应的值。\n* `ordinal.domain([a, b, ..., x])`：指定输入域范围（一系列离散的数据）\n* `ordinal.range([k1, k2, ..., kn])`：如果指定了输出范围，设置当前比例尺对象的输出范围为指定的 values 数组，如果 values 中的值的个数少于输入域中元素的个数，那么 values 中的值会被循环使用。（主要用于颜色）\n* `ordinal.rangePoints([min, max], padding)`：指定输出范围为一个连续的区间，第一个位置和最后一个位置会因为入参 padding 的值而做相应，消减长度是padding 个间隔长度的一半；默认情况下 padding 是 0 \n* `ordinal.rangeBands([min, max], padding, outerPadding)`：该函数是将区间切分成一个个小的区间段，而不是一个个刻度点（刻度在坐标轴中间，而不是在起点，适用于柱状图）\n* `rdinal.rangeRoundPoints([min, max], padding)`：功能同 `ordinal.rangePoints`，但是该函数可以美化输出的刻度点，即保证整数\n* `ordinal.rangeRoundBands([min, max], padding, outerPadding)` 功能同 `ordinal.rangeBands`，但是该函数可以美化输出的区间段，即保证每个区间段的起点值都是整数\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 800;\n        let h = 400;\n        let padding = 40;\n        let dateRange = [new Date(2017, 0, 1), new Date(2018, 2, 1)];\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        let xScale = d3.time.scale()\n            .domain(dateRange)\n            .rangeRound([padding, w - padding]);\n\n        let axis = d3.svg.axis()\n            .scale(xScale)\n            .tickFormat(d3.time.format('%m-%d'));\n\n        svg.append('g')\n            .attr('class', 'x-axis')\n            .call(axis);\n    </script>\n</body>\n\n</html>\n```","slug":"D3.js/比例尺","published":1,"updated":"2021-04-28T02:29:34.781Z","_id":"cko0u126x0007y26rd2ureszb","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"比例尺\"><a href=\"#比例尺\" class=\"headerlink\" title=\"比例尺\"></a>比例尺</h1><p>说明：任何数据集中的值都不太可能完全对应于可视化中使用的像素测量值。比例提供了一种方便的方法，将这些数据值映射为可用于可视化目的的新值。</p>\n<p><code>d3.scale</code></p>\n<blockquote>\n<p>数据集中的数据其实是通过映射成一个个坐标点后在页面中绘制出来的，而数据可能会很大或很小，所以需要将数值进行映射以适配 SVG 容器的大小</p>\n</blockquote>\n<ul>\n<li>scale.copy: 创建比例尺的副本。</li>\n<li>scale.interpolate: 取得或设置比例尺的输出插值器。</li>\n<li>scale.invert: 取得给定输出值对应定义域中的值。</li>\n<li>scale.nice: 扩展比例尺的定义域为一个优化的整数值。</li>\n<li>scale.tickFormat: 取得用于展示刻度值的格式化器。</li>\n<li>scale.ticks: 取得定义域中有代表性的值。</li>\n</ul>\n<h3 id=\"插值器\"><a href=\"#插值器\" class=\"headerlink\" title=\"插值器\"></a>插值器</h3><p>给定函数 <code>f(x)</code> 在 <code>x0, x1,...,xn</code> 处的值。现有 <code>x&#39;</code>，其值在上述取值点间。那么，求 <code>f(x&#39;)</code>值的过程叫做 <strong>插值</strong></p>\n<p>插值不仅在尺度功能的实现中非常重要，对于 D3 的其他核心功能的实现也不可或缺，例如，动画和布局管理功能。因而 D3 设计了一个独立、可重用的插值<br>器，以便在实现其他功能时提供统一的调用方式。（默认的范围域是 <code>[0, 1]</code>）</p>\n<ul>\n<li>d3.interpolate: 返回一个介于 a 和 b 之间的默认插值器(<code>a</code>、<code>b</code>可为对象，包含多个属性，使用复合尺度插值时，D3 会遍历对象中的所有成员，并对其每一个组成部分应用相应的简单插值规则)</li>\n<li>d3.interpolateNumber: 插补两个数字值</li>\n<li>d3.interpolateString: 插补两个字符串</li>\n<li>d3.interpolateArray: 插补两个数组</li>\n<li>d3.interpolateHcl: 插补两个 HCL 颜色值</li>\n<li>d3.interpolateHsl: 插补两个 HSL 颜色值</li>\n<li>d3.interpolateLab: 插补两个 <code>L * a * b *</code> 颜色值</li>\n<li>d3.interpolateObject: 插补两个任意对象</li>\n<li>d3.interpolateRgb: 插补两个RGB颜色值</li>\n<li>d3.interpolateRound: 插补两个整数</li>\n<li>d3.interpolateTransform: 插补两个 2D 矩阵变换</li>\n<li>d3.interpolateZoom: 在两个点之间平滑地缩放平移</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> interpolate = d3.interpolateNumber(<span class=\"number\">0</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">interpolate(<span class=\"number\">0.1</span>);  <span class=\"comment\">// 10</span></span><br><span class=\"line\">interpolate(<span class=\"number\">0.99</span>); <span class=\"comment\">// 99</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 d3.interpolateNumber 函数创建了一个值域为 [0, 100] 的interpolate函数，并使用这个函数对指定的数字进行插值。该函数与如下代码是等价的。</span></span><br><span class=\"line\"><span class=\"comment\">// function interpolate(t)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     return a * (1 - t) + b * t;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> start = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;font-size&#x27;</span>: <span class=\"string\">&#x27;12px&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            color: <span class=\"string\">&#x27;#f00&#x27;</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> end = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;font-size&#x27;</span>: <span class=\"string\">&#x27;40px&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            color: <span class=\"string\">&#x27;#ff0&#x27;</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> interpolate = d3.interpolate(start, end);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> groups = svg.append(<span class=\"string\">&#x27;g&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> info = interpolate(i / <span class=\"number\">10</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            groups.append(<span class=\"string\">&#x27;text&#x27;</span>)</span></span><br><span class=\"line\">                .text(i)</span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">0</span> + i * <span class=\"number\">24</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">40</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;text-list&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;fill&#x27;</span>, info.color)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;font-size&#x27;</span>, info[<span class=\"string\">&#x27;font-size&#x27;</span>]);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类别\"><a href=\"#类别\" class=\"headerlink\" title=\"类别\"></a>类别</h2><ul>\n<li>数值尺度<ul>\n<li>d3.scale.linear: 线性比例尺 （<code>f(n) = kx + b</code>）<ul>\n<li>d3.time.scale: 线性时间比例尺</li>\n</ul>\n</li>\n<li>d3.scale.pow: 指数比例尺 （<code>f(n) = a * n ^ 2 + b</code>）<ul>\n<li>pow.exponent(k) 用于设置二项式系数 a 的值，默认为 1</li>\n</ul>\n</li>\n<li>d3.scale.log: 对数比例尺（<code>f(n) = a * log(n) + b</code>）<ul>\n<li>log.base(base) : 设置这个对数比例尺的底数，默认是 10</li>\n</ul>\n</li>\n<li>d3.scale.quantize: 量化比例尺（定义域是连续的，值域是离散）</li>\n<li>d3.scale.identity: 线性恒等比例尺</li>\n<li>d3.scale.quantile: 分位数比例尺</li>\n<li>d3.scale.sqrt: 平方根比例尺</li>\n<li>d3.scale.threshold: 临界值比例尺（值域离散）</li>\n</ul>\n</li>\n<li>有序尺度<ul>\n<li>d3.scale.ordinal: 序数比例尺 （key、value 映射，无具体表达式）</li>\n<li>d3.scale.category10: 该比例尺中有默认的值域中有 10 种颜色</li>\n<li>d3.scale.category20: 该比例尺中有默认的值域中有 20 种颜色</li>\n<li>d3.scale.category20b: 该比例尺中有默认的值域中有 20 种颜色</li>\n<li>d3.scale.category20c: 该比例尺中有默认的值域中有 20 种颜色</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"线性比例尺\"><a href=\"#线性比例尺\" class=\"headerlink\" title=\"线性比例尺\"></a>线性比例尺</h2><p>说明：将输入域映射到连续的输出范围，类似 <code>y=kx+b</code> 线性函数，如将身高映射成柱状图的高度（像素），<code>let linear = d3.scale.linear()</code></p>\n<blockquote>\n<ul>\n<li>线性比例尺的默认输入域 [0, 1]，默认输出范围为 [0, 1]，此时为恒等函数</li>\n<li>比例尺只是定义了一个映射规则，映射的输入值并不局限于 <code>domain()</code> 中的输入域</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>linear(x)</code>：在输入域中的输入 x，返回输出范围对应的值。</li>\n<li><code>linear.domain([min, max])</code>：指定输入域范围</li>\n<li><code>linear.range([min, max])</code>：指定输出范围</li>\n<li><code>linear.ticks()</code>：返回比例尺输入域的代表性时间</li>\n</ul>\n<h2 id=\"时间比例尺\"><a href=\"#时间比例尺\" class=\"headerlink\" title=\"时间比例尺\"></a>时间比例尺</h2><p>说明：<code>d3.time.scale</code> 是 <code>d3.scale.linear</code> 比例尺的扩展，使用 Javascript 的 <code>Date</code> 对象作为其输入域 <code>domain</code>，<code>let time = d3.time.scale()</code> </p>\n<ul>\n<li><code>time</code>: 取得给定定义域中值对应的输出范围中的值。</li>\n<li><code>time.domain</code>: 取得或设置比例尺度的定义域。</li>\n<li><code>time.rangeRound</code>: 设置比例尺的四舍五入输出范围。</li>\n<li><code>time.range</code>：取得或设置比例尺的输出范围。</li>\n</ul>\n<h2 id=\"序号比例尺\"><a href=\"#序号比例尺\" class=\"headerlink\" title=\"序号比例尺\"></a>序号比例尺</h2><p>说明：序号比例尺来映射输入域（离散）到输出范围。 <code>let ordinal = d3.scale.ordinal()</code></p>\n<ul>\n<li><code>ordinal(x)</code>：在输入域中的输入 x，返回输出范围对应的值。</li>\n<li><code>ordinal.domain([a, b, ..., x])</code>：指定输入域范围（一系列离散的数据）</li>\n<li><code>ordinal.range([k1, k2, ..., kn])</code>：如果指定了输出范围，设置当前比例尺对象的输出范围为指定的 values 数组，如果 values 中的值的个数少于输入域中元素的个数，那么 values 中的值会被循环使用。（主要用于颜色）</li>\n<li><code>ordinal.rangePoints([min, max], padding)</code>：指定输出范围为一个连续的区间，第一个位置和最后一个位置会因为入参 padding 的值而做相应，消减长度是padding 个间隔长度的一半；默认情况下 padding 是 0 </li>\n<li><code>ordinal.rangeBands([min, max], padding, outerPadding)</code>：该函数是将区间切分成一个个小的区间段，而不是一个个刻度点（刻度在坐标轴中间，而不是在起点，适用于柱状图）</li>\n<li><code>rdinal.rangeRoundPoints([min, max], padding)</code>：功能同 <code>ordinal.rangePoints</code>，但是该函数可以美化输出的刻度点，即保证整数</li>\n<li><code>ordinal.rangeRoundBands([min, max], padding, outerPadding)</code> 功能同 <code>ordinal.rangeBands</code>，但是该函数可以美化输出的区间段，即保证每个区间段的起点值都是整数</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">800</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = <span class=\"number\">40</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> dateRange = [<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2017</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2018</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xScale = d3.time.scale()</span></span><br><span class=\"line\">            .domain(dateRange)</span><br><span class=\"line\">            .rangeRound([padding, w - padding]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> axis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(xScale)</span><br><span class=\"line\"><span class=\"javascript\">            .tickFormat(d3.time.format(<span class=\"string\">&#x27;%m-%d&#x27;</span>));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;x-axis&#x27;</span>)</span></span><br><span class=\"line\">            .call(axis);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"比例尺\"><a href=\"#比例尺\" class=\"headerlink\" title=\"比例尺\"></a>比例尺</h1><p>说明：任何数据集中的值都不太可能完全对应于可视化中使用的像素测量值。比例提供了一种方便的方法，将这些数据值映射为可用于可视化目的的新值。</p>\n<p><code>d3.scale</code></p>\n<blockquote>\n<p>数据集中的数据其实是通过映射成一个个坐标点后在页面中绘制出来的，而数据可能会很大或很小，所以需要将数值进行映射以适配 SVG 容器的大小</p>\n</blockquote>\n<ul>\n<li>scale.copy: 创建比例尺的副本。</li>\n<li>scale.interpolate: 取得或设置比例尺的输出插值器。</li>\n<li>scale.invert: 取得给定输出值对应定义域中的值。</li>\n<li>scale.nice: 扩展比例尺的定义域为一个优化的整数值。</li>\n<li>scale.tickFormat: 取得用于展示刻度值的格式化器。</li>\n<li>scale.ticks: 取得定义域中有代表性的值。</li>\n</ul>\n<h3 id=\"插值器\"><a href=\"#插值器\" class=\"headerlink\" title=\"插值器\"></a>插值器</h3><p>给定函数 <code>f(x)</code> 在 <code>x0, x1,...,xn</code> 处的值。现有 <code>x&#39;</code>，其值在上述取值点间。那么，求 <code>f(x&#39;)</code>值的过程叫做 <strong>插值</strong></p>\n<p>插值不仅在尺度功能的实现中非常重要，对于 D3 的其他核心功能的实现也不可或缺，例如，动画和布局管理功能。因而 D3 设计了一个独立、可重用的插值<br>器，以便在实现其他功能时提供统一的调用方式。（默认的范围域是 <code>[0, 1]</code>）</p>\n<ul>\n<li>d3.interpolate: 返回一个介于 a 和 b 之间的默认插值器(<code>a</code>、<code>b</code>可为对象，包含多个属性，使用复合尺度插值时，D3 会遍历对象中的所有成员，并对其每一个组成部分应用相应的简单插值规则)</li>\n<li>d3.interpolateNumber: 插补两个数字值</li>\n<li>d3.interpolateString: 插补两个字符串</li>\n<li>d3.interpolateArray: 插补两个数组</li>\n<li>d3.interpolateHcl: 插补两个 HCL 颜色值</li>\n<li>d3.interpolateHsl: 插补两个 HSL 颜色值</li>\n<li>d3.interpolateLab: 插补两个 <code>L * a * b *</code> 颜色值</li>\n<li>d3.interpolateObject: 插补两个任意对象</li>\n<li>d3.interpolateRgb: 插补两个RGB颜色值</li>\n<li>d3.interpolateRound: 插补两个整数</li>\n<li>d3.interpolateTransform: 插补两个 2D 矩阵变换</li>\n<li>d3.interpolateZoom: 在两个点之间平滑地缩放平移</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> interpolate = d3.interpolateNumber(<span class=\"number\">0</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">interpolate(<span class=\"number\">0.1</span>);  <span class=\"comment\">// 10</span></span><br><span class=\"line\">interpolate(<span class=\"number\">0.99</span>); <span class=\"comment\">// 99</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 d3.interpolateNumber 函数创建了一个值域为 [0, 100] 的interpolate函数，并使用这个函数对指定的数字进行插值。该函数与如下代码是等价的。</span></span><br><span class=\"line\"><span class=\"comment\">// function interpolate(t)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     return a * (1 - t) + b * t;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> start = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;font-size&#x27;</span>: <span class=\"string\">&#x27;12px&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            color: <span class=\"string\">&#x27;#f00&#x27;</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> end = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;font-size&#x27;</span>: <span class=\"string\">&#x27;40px&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            color: <span class=\"string\">&#x27;#ff0&#x27;</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> interpolate = d3.interpolate(start, end);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> groups = svg.append(<span class=\"string\">&#x27;g&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> info = interpolate(i / <span class=\"number\">10</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            groups.append(<span class=\"string\">&#x27;text&#x27;</span>)</span></span><br><span class=\"line\">                .text(i)</span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">0</span> + i * <span class=\"number\">24</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">40</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;text-list&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;fill&#x27;</span>, info.color)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;font-size&#x27;</span>, info[<span class=\"string\">&#x27;font-size&#x27;</span>]);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类别\"><a href=\"#类别\" class=\"headerlink\" title=\"类别\"></a>类别</h2><ul>\n<li>数值尺度<ul>\n<li>d3.scale.linear: 线性比例尺 （<code>f(n) = kx + b</code>）<ul>\n<li>d3.time.scale: 线性时间比例尺</li>\n</ul>\n</li>\n<li>d3.scale.pow: 指数比例尺 （<code>f(n) = a * n ^ 2 + b</code>）<ul>\n<li>pow.exponent(k) 用于设置二项式系数 a 的值，默认为 1</li>\n</ul>\n</li>\n<li>d3.scale.log: 对数比例尺（<code>f(n) = a * log(n) + b</code>）<ul>\n<li>log.base(base) : 设置这个对数比例尺的底数，默认是 10</li>\n</ul>\n</li>\n<li>d3.scale.quantize: 量化比例尺（定义域是连续的，值域是离散）</li>\n<li>d3.scale.identity: 线性恒等比例尺</li>\n<li>d3.scale.quantile: 分位数比例尺</li>\n<li>d3.scale.sqrt: 平方根比例尺</li>\n<li>d3.scale.threshold: 临界值比例尺（值域离散）</li>\n</ul>\n</li>\n<li>有序尺度<ul>\n<li>d3.scale.ordinal: 序数比例尺 （key、value 映射，无具体表达式）</li>\n<li>d3.scale.category10: 该比例尺中有默认的值域中有 10 种颜色</li>\n<li>d3.scale.category20: 该比例尺中有默认的值域中有 20 种颜色</li>\n<li>d3.scale.category20b: 该比例尺中有默认的值域中有 20 种颜色</li>\n<li>d3.scale.category20c: 该比例尺中有默认的值域中有 20 种颜色</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"线性比例尺\"><a href=\"#线性比例尺\" class=\"headerlink\" title=\"线性比例尺\"></a>线性比例尺</h2><p>说明：将输入域映射到连续的输出范围，类似 <code>y=kx+b</code> 线性函数，如将身高映射成柱状图的高度（像素），<code>let linear = d3.scale.linear()</code></p>\n<blockquote>\n<ul>\n<li>线性比例尺的默认输入域 [0, 1]，默认输出范围为 [0, 1]，此时为恒等函数</li>\n<li>比例尺只是定义了一个映射规则，映射的输入值并不局限于 <code>domain()</code> 中的输入域</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>linear(x)</code>：在输入域中的输入 x，返回输出范围对应的值。</li>\n<li><code>linear.domain([min, max])</code>：指定输入域范围</li>\n<li><code>linear.range([min, max])</code>：指定输出范围</li>\n<li><code>linear.ticks()</code>：返回比例尺输入域的代表性时间</li>\n</ul>\n<h2 id=\"时间比例尺\"><a href=\"#时间比例尺\" class=\"headerlink\" title=\"时间比例尺\"></a>时间比例尺</h2><p>说明：<code>d3.time.scale</code> 是 <code>d3.scale.linear</code> 比例尺的扩展，使用 Javascript 的 <code>Date</code> 对象作为其输入域 <code>domain</code>，<code>let time = d3.time.scale()</code> </p>\n<ul>\n<li><code>time</code>: 取得给定定义域中值对应的输出范围中的值。</li>\n<li><code>time.domain</code>: 取得或设置比例尺度的定义域。</li>\n<li><code>time.rangeRound</code>: 设置比例尺的四舍五入输出范围。</li>\n<li><code>time.range</code>：取得或设置比例尺的输出范围。</li>\n</ul>\n<h2 id=\"序号比例尺\"><a href=\"#序号比例尺\" class=\"headerlink\" title=\"序号比例尺\"></a>序号比例尺</h2><p>说明：序号比例尺来映射输入域（离散）到输出范围。 <code>let ordinal = d3.scale.ordinal()</code></p>\n<ul>\n<li><code>ordinal(x)</code>：在输入域中的输入 x，返回输出范围对应的值。</li>\n<li><code>ordinal.domain([a, b, ..., x])</code>：指定输入域范围（一系列离散的数据）</li>\n<li><code>ordinal.range([k1, k2, ..., kn])</code>：如果指定了输出范围，设置当前比例尺对象的输出范围为指定的 values 数组，如果 values 中的值的个数少于输入域中元素的个数，那么 values 中的值会被循环使用。（主要用于颜色）</li>\n<li><code>ordinal.rangePoints([min, max], padding)</code>：指定输出范围为一个连续的区间，第一个位置和最后一个位置会因为入参 padding 的值而做相应，消减长度是padding 个间隔长度的一半；默认情况下 padding 是 0 </li>\n<li><code>ordinal.rangeBands([min, max], padding, outerPadding)</code>：该函数是将区间切分成一个个小的区间段，而不是一个个刻度点（刻度在坐标轴中间，而不是在起点，适用于柱状图）</li>\n<li><code>rdinal.rangeRoundPoints([min, max], padding)</code>：功能同 <code>ordinal.rangePoints</code>，但是该函数可以美化输出的刻度点，即保证整数</li>\n<li><code>ordinal.rangeRoundBands([min, max], padding, outerPadding)</code> 功能同 <code>ordinal.rangeBands</code>，但是该函数可以美化输出的区间段，即保证每个区间段的起点值都是整数</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">800</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = <span class=\"number\">40</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> dateRange = [<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2017</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2018</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xScale = d3.time.scale()</span></span><br><span class=\"line\">            .domain(dateRange)</span><br><span class=\"line\">            .rangeRound([padding, w - padding]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> axis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(xScale)</span><br><span class=\"line\"><span class=\"javascript\">            .tickFormat(d3.time.format(<span class=\"string\">&#x27;%m-%d&#x27;</span>));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;x-axis&#x27;</span>)</span></span><br><span class=\"line\">            .call(axis);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"选择集","date":"2021-03-23T16:00:00.000Z","_content":"\n# 选择集\n\n### 选择器\n`d3.select()` 与 `jQuery` 的选择器类似，支持各种 CSS3 选择器，并能通过各种条件筛选（实际上使用的是浏览器提供的查询方法 `document.querySelector()`）\n\n### 元素选择 \n说明：`d3.select()`、`d3.selectAll()` 返回值是一组选择，该选择是一组元素。D3 绑定额外的方法到该数组上（在该对象与数组间添加了一层原型链 `d3.selection.prototype`），可以在选中的元素上应用操作，例如为所有选中的元素设置属性值。\n\n> `d3.select()` 、`d3.selectAll()` 返回一个选集 selection，它是 D3 操作 DOM 的入口\n> `selection.data()` 操作的结果是 update 选择，这表示选择的 DOM 元素已成功绑定到指定的数据元素。update 选择还包含对 enter 和 exit 的选择。\n\n#### 选择集（`selection`）\n\n* selection.select(selector): 选中第一个目标元素\n* selection.selectAll(selector): 选中所有符合的目标元素\n* selection.append(name)\n* selection.insert(name, before)\n* selection.remove()\n* selection.empty()\n* selection.filter(filter)\n* selection.attr(name, value)：获取、设置元素的属性\n* selection.style(name, value, priority)：获取、设置元素的 CSS 样式\n* selection.classed(name, value)：获取、设置元素的 `class` 属性，可以对象的方式一次传入多个属性，\n* selection.property(name, value)：获取、设置元素的 `prop` 特性，如是否被选中、value 等信息\n* selection.html(value)：用来获取或设置选定元素的 HTML\n* selection.text(value)：用来获取或设置选定元素的文本内容\n* selection.size()\n* selection.node()(type, listener, capture)\n\n> **说明**\n> * 当没有任何元素符合条件时，方法返回的是一个空的选择结果（selection）\n> * 这些函数可用于单个元素以及多个元素，当应用于多元素选集时，这些函数会依次作用于其中每个元素\n> * `attr()`、`text()` 等方法中中赋值时可使用函数，如 `function (data, i) { console.log(this); }` ，其中 `data` 指每一项数据，`i` 指索引，`this` 指当前 DOM 元素\n> * selection 选择集的 `select`、`append`、`insert`函数会返回一个新的选集，建议用缩进来区别应用于不同选集上的级联函数，如下所示：\n\n```javascript\nd3.select('.rect-test')\n    .attr('fill', 'red')\n.selectAll('text')\n    .attr('x', 100)\n    .attr('y', 100);\n```\n\n* selection.data(value, key) 连接指定的一组数据的和当前选择，**key** 函数可以被指定为控制数据是如何连接元素\n    * 没有 key 函数时，默认使用 index 连接元素，即用 index 判断 `enter`、`update` 和  `exit` 选择集\n    * 有 key 函数时，用 key 函数的返回值连接元素，有利于复用 DOM 元素（与 Vue 中的 `v-key` 相似）\n* selection.datum(value) 获取或设置每个选定的元素绑定的数据，不计算一个连接（因此不计算 enter 和 exit 的选择）\n* selection.each(callback) 遍历集合中的每个元素\n* selection.sort(comparator) 根据指定的 comparator 函数对当前选择的元素排序\n* selection.order() 重新插入元素到文档，使文档顺序选与择顺序就相匹配\n* selection.call(callback) 调用指定函数，并返回当前选择（方便链式调用）\n    * `svg.append('g').call(axis)` 与 `axis(svg.append('g'))` 作用一样;\n* selection.interrupt(name) 立即中断当前的过渡\n* selection.transition(name) 为当前选择添加过渡效果\n\n说明：\n* 所有绑定了数据的父元素，其子元素均具有从父元素那里继承下来的值。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>D3.js - 散点图</title>\n    <style>\n        .axis path,\n        .axis line {\n            fill: none;\n            stroke: black;\n            shape-rendering: crispEdges;\n        }\n\n        .axis text {\n            font-family: sans-serif;\n            font-size: 12px;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 400;\n        let h = 300;\n        let padding = 30;\n        let dataSet = [[5, 20], [480, 90], [250, 50], [100, 33], [330, 95], [410, 12], [475, 44], [25, 67], [85, 21], [220, 88]];\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        let xScale = d3.scale.linear()\n            .domain([0, d3.max(dataSet, data => data[0])])\n            .range([padding, w - padding * 2]);\n\n        let yScale = d3.scale.linear()\n            .domain([0, d3.max(dataSet, data => data[1])])\n            .range([h - padding, padding]);\n\n        let rScale = d3.scale.linear()\n            .domain([0, d3.max(dataSet, data => data[1])])\n            .range([4, 10]);\n\n        let circles = svg.selectAll('circle')\n            .data(dataSet)\n            .enter()\n            .append('circle');\n\n        let xAxis = d3.svg.axis()\n            .scale(xScale)\n            .ticks(6)\n            .orient('bottom');\n\n        let yAxis = d3.svg.axis()\n            .scale(yScale)\n            .ticks(5)\n            .orient('left');\n\n        svg.append('g')\n            .attr('class', 'axis')\n            .attr('transform', `translate(0, ${h - padding})`)\n            .call(xAxis);\n\n        svg.append('g')\n            .attr('class', 'axis')\n            .attr('transform', `translate(${padding}, 0)`)\n            .call(yAxis);\n\n        circles.attr('cx', data => xScale(data[0]))\n            .attr('cy', data => yScale(data[1]))\n            .attr('r', data => rScale(data[1]));\n    </script>\n</body>\n</html>\n```","source":"_posts/D3.js/选择集.md","raw":"---\ntitle: 选择集\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 选择集\n\n### 选择器\n`d3.select()` 与 `jQuery` 的选择器类似，支持各种 CSS3 选择器，并能通过各种条件筛选（实际上使用的是浏览器提供的查询方法 `document.querySelector()`）\n\n### 元素选择 \n说明：`d3.select()`、`d3.selectAll()` 返回值是一组选择，该选择是一组元素。D3 绑定额外的方法到该数组上（在该对象与数组间添加了一层原型链 `d3.selection.prototype`），可以在选中的元素上应用操作，例如为所有选中的元素设置属性值。\n\n> `d3.select()` 、`d3.selectAll()` 返回一个选集 selection，它是 D3 操作 DOM 的入口\n> `selection.data()` 操作的结果是 update 选择，这表示选择的 DOM 元素已成功绑定到指定的数据元素。update 选择还包含对 enter 和 exit 的选择。\n\n#### 选择集（`selection`）\n\n* selection.select(selector): 选中第一个目标元素\n* selection.selectAll(selector): 选中所有符合的目标元素\n* selection.append(name)\n* selection.insert(name, before)\n* selection.remove()\n* selection.empty()\n* selection.filter(filter)\n* selection.attr(name, value)：获取、设置元素的属性\n* selection.style(name, value, priority)：获取、设置元素的 CSS 样式\n* selection.classed(name, value)：获取、设置元素的 `class` 属性，可以对象的方式一次传入多个属性，\n* selection.property(name, value)：获取、设置元素的 `prop` 特性，如是否被选中、value 等信息\n* selection.html(value)：用来获取或设置选定元素的 HTML\n* selection.text(value)：用来获取或设置选定元素的文本内容\n* selection.size()\n* selection.node()(type, listener, capture)\n\n> **说明**\n> * 当没有任何元素符合条件时，方法返回的是一个空的选择结果（selection）\n> * 这些函数可用于单个元素以及多个元素，当应用于多元素选集时，这些函数会依次作用于其中每个元素\n> * `attr()`、`text()` 等方法中中赋值时可使用函数，如 `function (data, i) { console.log(this); }` ，其中 `data` 指每一项数据，`i` 指索引，`this` 指当前 DOM 元素\n> * selection 选择集的 `select`、`append`、`insert`函数会返回一个新的选集，建议用缩进来区别应用于不同选集上的级联函数，如下所示：\n\n```javascript\nd3.select('.rect-test')\n    .attr('fill', 'red')\n.selectAll('text')\n    .attr('x', 100)\n    .attr('y', 100);\n```\n\n* selection.data(value, key) 连接指定的一组数据的和当前选择，**key** 函数可以被指定为控制数据是如何连接元素\n    * 没有 key 函数时，默认使用 index 连接元素，即用 index 判断 `enter`、`update` 和  `exit` 选择集\n    * 有 key 函数时，用 key 函数的返回值连接元素，有利于复用 DOM 元素（与 Vue 中的 `v-key` 相似）\n* selection.datum(value) 获取或设置每个选定的元素绑定的数据，不计算一个连接（因此不计算 enter 和 exit 的选择）\n* selection.each(callback) 遍历集合中的每个元素\n* selection.sort(comparator) 根据指定的 comparator 函数对当前选择的元素排序\n* selection.order() 重新插入元素到文档，使文档顺序选与择顺序就相匹配\n* selection.call(callback) 调用指定函数，并返回当前选择（方便链式调用）\n    * `svg.append('g').call(axis)` 与 `axis(svg.append('g'))` 作用一样;\n* selection.interrupt(name) 立即中断当前的过渡\n* selection.transition(name) 为当前选择添加过渡效果\n\n说明：\n* 所有绑定了数据的父元素，其子元素均具有从父元素那里继承下来的值。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>D3.js - 散点图</title>\n    <style>\n        .axis path,\n        .axis line {\n            fill: none;\n            stroke: black;\n            shape-rendering: crispEdges;\n        }\n\n        .axis text {\n            font-family: sans-serif;\n            font-size: 12px;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 400;\n        let h = 300;\n        let padding = 30;\n        let dataSet = [[5, 20], [480, 90], [250, 50], [100, 33], [330, 95], [410, 12], [475, 44], [25, 67], [85, 21], [220, 88]];\n\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        let xScale = d3.scale.linear()\n            .domain([0, d3.max(dataSet, data => data[0])])\n            .range([padding, w - padding * 2]);\n\n        let yScale = d3.scale.linear()\n            .domain([0, d3.max(dataSet, data => data[1])])\n            .range([h - padding, padding]);\n\n        let rScale = d3.scale.linear()\n            .domain([0, d3.max(dataSet, data => data[1])])\n            .range([4, 10]);\n\n        let circles = svg.selectAll('circle')\n            .data(dataSet)\n            .enter()\n            .append('circle');\n\n        let xAxis = d3.svg.axis()\n            .scale(xScale)\n            .ticks(6)\n            .orient('bottom');\n\n        let yAxis = d3.svg.axis()\n            .scale(yScale)\n            .ticks(5)\n            .orient('left');\n\n        svg.append('g')\n            .attr('class', 'axis')\n            .attr('transform', `translate(0, ${h - padding})`)\n            .call(xAxis);\n\n        svg.append('g')\n            .attr('class', 'axis')\n            .attr('transform', `translate(${padding}, 0)`)\n            .call(yAxis);\n\n        circles.attr('cx', data => xScale(data[0]))\n            .attr('cy', data => yScale(data[1]))\n            .attr('r', data => rScale(data[1]));\n    </script>\n</body>\n</html>\n```","slug":"D3.js/选择集","published":1,"updated":"2021-04-28T02:31:21.315Z","_id":"cko0u126y0008y26r0x8pf7xw","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"选择集\"><a href=\"#选择集\" class=\"headerlink\" title=\"选择集\"></a>选择集</h1><h3 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h3><p><code>d3.select()</code> 与 <code>jQuery</code> 的选择器类似，支持各种 CSS3 选择器，并能通过各种条件筛选（实际上使用的是浏览器提供的查询方法 <code>document.querySelector()</code>）</p>\n<h3 id=\"元素选择\"><a href=\"#元素选择\" class=\"headerlink\" title=\"元素选择\"></a>元素选择</h3><p>说明：<code>d3.select()</code>、<code>d3.selectAll()</code> 返回值是一组选择，该选择是一组元素。D3 绑定额外的方法到该数组上（在该对象与数组间添加了一层原型链 <code>d3.selection.prototype</code>），可以在选中的元素上应用操作，例如为所有选中的元素设置属性值。</p>\n<blockquote>\n<p><code>d3.select()</code> 、<code>d3.selectAll()</code> 返回一个选集 selection，它是 D3 操作 DOM 的入口<br><code>selection.data()</code> 操作的结果是 update 选择，这表示选择的 DOM 元素已成功绑定到指定的数据元素。update 选择还包含对 enter 和 exit 的选择。</p>\n</blockquote>\n<h4 id=\"选择集（selection）\"><a href=\"#选择集（selection）\" class=\"headerlink\" title=\"选择集（selection）\"></a>选择集（<code>selection</code>）</h4><ul>\n<li>selection.select(selector): 选中第一个目标元素</li>\n<li>selection.selectAll(selector): 选中所有符合的目标元素</li>\n<li>selection.append(name)</li>\n<li>selection.insert(name, before)</li>\n<li>selection.remove()</li>\n<li>selection.empty()</li>\n<li>selection.filter(filter)</li>\n<li>selection.attr(name, value)：获取、设置元素的属性</li>\n<li>selection.style(name, value, priority)：获取、设置元素的 CSS 样式</li>\n<li>selection.classed(name, value)：获取、设置元素的 <code>class</code> 属性，可以对象的方式一次传入多个属性，</li>\n<li>selection.property(name, value)：获取、设置元素的 <code>prop</code> 特性，如是否被选中、value 等信息</li>\n<li>selection.html(value)：用来获取或设置选定元素的 HTML</li>\n<li>selection.text(value)：用来获取或设置选定元素的文本内容</li>\n<li>selection.size()</li>\n<li>selection.node()(type, listener, capture)</li>\n</ul>\n<blockquote>\n<p><strong>说明</strong></p>\n<ul>\n<li>当没有任何元素符合条件时，方法返回的是一个空的选择结果（selection）</li>\n<li>这些函数可用于单个元素以及多个元素，当应用于多元素选集时，这些函数会依次作用于其中每个元素</li>\n<li><code>attr()</code>、<code>text()</code> 等方法中中赋值时可使用函数，如 <code>function (data, i) &#123; console.log(this); &#125;</code> ，其中 <code>data</code> 指每一项数据，<code>i</code> 指索引，<code>this</code> 指当前 DOM 元素</li>\n<li>selection 选择集的 <code>select</code>、<code>append</code>、<code>insert</code>函数会返回一个新的选集，建议用缩进来区别应用于不同选集上的级联函数，如下所示：</li>\n</ul>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d3.select(<span class=\"string\">&#x27;.rect-test&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">.selectAll(<span class=\"string\">&#x27;text&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>selection.data(value, key) 连接指定的一组数据的和当前选择，<strong>key</strong> 函数可以被指定为控制数据是如何连接元素<ul>\n<li>没有 key 函数时，默认使用 index 连接元素，即用 index 判断 <code>enter</code>、<code>update</code> 和  <code>exit</code> 选择集</li>\n<li>有 key 函数时，用 key 函数的返回值连接元素，有利于复用 DOM 元素（与 Vue 中的 <code>v-key</code> 相似）</li>\n</ul>\n</li>\n<li>selection.datum(value) 获取或设置每个选定的元素绑定的数据，不计算一个连接（因此不计算 enter 和 exit 的选择）</li>\n<li>selection.each(callback) 遍历集合中的每个元素</li>\n<li>selection.sort(comparator) 根据指定的 comparator 函数对当前选择的元素排序</li>\n<li>selection.order() 重新插入元素到文档，使文档顺序选与择顺序就相匹配</li>\n<li>selection.call(callback) 调用指定函数，并返回当前选择（方便链式调用）<ul>\n<li><code>svg.append(&#39;g&#39;).call(axis)</code> 与 <code>axis(svg.append(&#39;g&#39;))</code> 作用一样;</li>\n</ul>\n</li>\n<li>selection.interrupt(name) 立即中断当前的过渡</li>\n<li>selection.transition(name) 为当前选择添加过渡效果</li>\n</ul>\n<p>说明：</p>\n<ul>\n<li>所有绑定了数据的父元素，其子元素均具有从父元素那里继承下来的值。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>D3.js - 散点图<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .axis path,</span><br><span class=\"line\">        .axis line &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: none;</span></span><br><span class=\"line\"><span class=\"css\">            stroke: black;</span></span><br><span class=\"line\"><span class=\"css\">            shape-rendering: crispEdges;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .axis text &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-family</span>: sans-serif;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">300</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = <span class=\"number\">30</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> dataSet = [[<span class=\"number\">5</span>, <span class=\"number\">20</span>], [<span class=\"number\">480</span>, <span class=\"number\">90</span>], [<span class=\"number\">250</span>, <span class=\"number\">50</span>], [<span class=\"number\">100</span>, <span class=\"number\">33</span>], [<span class=\"number\">330</span>, <span class=\"number\">95</span>], [<span class=\"number\">410</span>, <span class=\"number\">12</span>], [<span class=\"number\">475</span>, <span class=\"number\">44</span>], [<span class=\"number\">25</span>, <span class=\"number\">67</span>], [<span class=\"number\">85</span>, <span class=\"number\">21</span>], [<span class=\"number\">220</span>, <span class=\"number\">88</span>]];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xScale = d3.scale.linear()</span></span><br><span class=\"line\"><span class=\"javascript\">            .domain([<span class=\"number\">0</span>, d3.max(dataSet, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data[<span class=\"number\">0</span>])])</span></span><br><span class=\"line\">            .range([padding, w - padding * 2]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yScale = d3.scale.linear()</span></span><br><span class=\"line\"><span class=\"javascript\">            .domain([<span class=\"number\">0</span>, d3.max(dataSet, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data[<span class=\"number\">1</span>])])</span></span><br><span class=\"line\">            .range([h - padding, padding]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> rScale = d3.scale.linear()</span></span><br><span class=\"line\"><span class=\"javascript\">            .domain([<span class=\"number\">0</span>, d3.max(dataSet, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data[<span class=\"number\">1</span>])])</span></span><br><span class=\"line\">            .range([4, 10]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> circles = svg.selectAll(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\">            .data(dataSet)</span><br><span class=\"line\">            .enter()</span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;circle&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xAxis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(xScale)</span><br><span class=\"line\">            .ticks(6)</span><br><span class=\"line\"><span class=\"javascript\">            .orient(<span class=\"string\">&#x27;bottom&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yAxis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(yScale)</span><br><span class=\"line\">            .ticks(5)</span><br><span class=\"line\"><span class=\"javascript\">            .orient(<span class=\"string\">&#x27;left&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;axis&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(0, <span class=\"subst\">$&#123;h - padding&#125;</span>)`</span>)</span></span><br><span class=\"line\">            .call(xAxis);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;axis&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding&#125;</span>, 0)`</span>)</span></span><br><span class=\"line\">            .call(yAxis);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        circles.attr(<span class=\"string\">&#x27;cx&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> xScale(data[<span class=\"number\">0</span>]))</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;cy&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> yScale(data[<span class=\"number\">1</span>]))</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> rScale(data[<span class=\"number\">1</span>]));</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"选择集\"><a href=\"#选择集\" class=\"headerlink\" title=\"选择集\"></a>选择集</h1><h3 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h3><p><code>d3.select()</code> 与 <code>jQuery</code> 的选择器类似，支持各种 CSS3 选择器，并能通过各种条件筛选（实际上使用的是浏览器提供的查询方法 <code>document.querySelector()</code>）</p>\n<h3 id=\"元素选择\"><a href=\"#元素选择\" class=\"headerlink\" title=\"元素选择\"></a>元素选择</h3><p>说明：<code>d3.select()</code>、<code>d3.selectAll()</code> 返回值是一组选择，该选择是一组元素。D3 绑定额外的方法到该数组上（在该对象与数组间添加了一层原型链 <code>d3.selection.prototype</code>），可以在选中的元素上应用操作，例如为所有选中的元素设置属性值。</p>\n<blockquote>\n<p><code>d3.select()</code> 、<code>d3.selectAll()</code> 返回一个选集 selection，它是 D3 操作 DOM 的入口<br><code>selection.data()</code> 操作的结果是 update 选择，这表示选择的 DOM 元素已成功绑定到指定的数据元素。update 选择还包含对 enter 和 exit 的选择。</p>\n</blockquote>\n<h4 id=\"选择集（selection）\"><a href=\"#选择集（selection）\" class=\"headerlink\" title=\"选择集（selection）\"></a>选择集（<code>selection</code>）</h4><ul>\n<li>selection.select(selector): 选中第一个目标元素</li>\n<li>selection.selectAll(selector): 选中所有符合的目标元素</li>\n<li>selection.append(name)</li>\n<li>selection.insert(name, before)</li>\n<li>selection.remove()</li>\n<li>selection.empty()</li>\n<li>selection.filter(filter)</li>\n<li>selection.attr(name, value)：获取、设置元素的属性</li>\n<li>selection.style(name, value, priority)：获取、设置元素的 CSS 样式</li>\n<li>selection.classed(name, value)：获取、设置元素的 <code>class</code> 属性，可以对象的方式一次传入多个属性，</li>\n<li>selection.property(name, value)：获取、设置元素的 <code>prop</code> 特性，如是否被选中、value 等信息</li>\n<li>selection.html(value)：用来获取或设置选定元素的 HTML</li>\n<li>selection.text(value)：用来获取或设置选定元素的文本内容</li>\n<li>selection.size()</li>\n<li>selection.node()(type, listener, capture)</li>\n</ul>\n<blockquote>\n<p><strong>说明</strong></p>\n<ul>\n<li>当没有任何元素符合条件时，方法返回的是一个空的选择结果（selection）</li>\n<li>这些函数可用于单个元素以及多个元素，当应用于多元素选集时，这些函数会依次作用于其中每个元素</li>\n<li><code>attr()</code>、<code>text()</code> 等方法中中赋值时可使用函数，如 <code>function (data, i) &#123; console.log(this); &#125;</code> ，其中 <code>data</code> 指每一项数据，<code>i</code> 指索引，<code>this</code> 指当前 DOM 元素</li>\n<li>selection 选择集的 <code>select</code>、<code>append</code>、<code>insert</code>函数会返回一个新的选集，建议用缩进来区别应用于不同选集上的级联函数，如下所示：</li>\n</ul>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d3.select(<span class=\"string\">&#x27;.rect-test&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">.selectAll(<span class=\"string\">&#x27;text&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>selection.data(value, key) 连接指定的一组数据的和当前选择，<strong>key</strong> 函数可以被指定为控制数据是如何连接元素<ul>\n<li>没有 key 函数时，默认使用 index 连接元素，即用 index 判断 <code>enter</code>、<code>update</code> 和  <code>exit</code> 选择集</li>\n<li>有 key 函数时，用 key 函数的返回值连接元素，有利于复用 DOM 元素（与 Vue 中的 <code>v-key</code> 相似）</li>\n</ul>\n</li>\n<li>selection.datum(value) 获取或设置每个选定的元素绑定的数据，不计算一个连接（因此不计算 enter 和 exit 的选择）</li>\n<li>selection.each(callback) 遍历集合中的每个元素</li>\n<li>selection.sort(comparator) 根据指定的 comparator 函数对当前选择的元素排序</li>\n<li>selection.order() 重新插入元素到文档，使文档顺序选与择顺序就相匹配</li>\n<li>selection.call(callback) 调用指定函数，并返回当前选择（方便链式调用）<ul>\n<li><code>svg.append(&#39;g&#39;).call(axis)</code> 与 <code>axis(svg.append(&#39;g&#39;))</code> 作用一样;</li>\n</ul>\n</li>\n<li>selection.interrupt(name) 立即中断当前的过渡</li>\n<li>selection.transition(name) 为当前选择添加过渡效果</li>\n</ul>\n<p>说明：</p>\n<ul>\n<li>所有绑定了数据的父元素，其子元素均具有从父元素那里继承下来的值。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>D3.js - 散点图<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .axis path,</span><br><span class=\"line\">        .axis line &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: none;</span></span><br><span class=\"line\"><span class=\"css\">            stroke: black;</span></span><br><span class=\"line\"><span class=\"css\">            shape-rendering: crispEdges;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .axis text &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-family</span>: sans-serif;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">300</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = <span class=\"number\">30</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> dataSet = [[<span class=\"number\">5</span>, <span class=\"number\">20</span>], [<span class=\"number\">480</span>, <span class=\"number\">90</span>], [<span class=\"number\">250</span>, <span class=\"number\">50</span>], [<span class=\"number\">100</span>, <span class=\"number\">33</span>], [<span class=\"number\">330</span>, <span class=\"number\">95</span>], [<span class=\"number\">410</span>, <span class=\"number\">12</span>], [<span class=\"number\">475</span>, <span class=\"number\">44</span>], [<span class=\"number\">25</span>, <span class=\"number\">67</span>], [<span class=\"number\">85</span>, <span class=\"number\">21</span>], [<span class=\"number\">220</span>, <span class=\"number\">88</span>]];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xScale = d3.scale.linear()</span></span><br><span class=\"line\"><span class=\"javascript\">            .domain([<span class=\"number\">0</span>, d3.max(dataSet, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data[<span class=\"number\">0</span>])])</span></span><br><span class=\"line\">            .range([padding, w - padding * 2]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yScale = d3.scale.linear()</span></span><br><span class=\"line\"><span class=\"javascript\">            .domain([<span class=\"number\">0</span>, d3.max(dataSet, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data[<span class=\"number\">1</span>])])</span></span><br><span class=\"line\">            .range([h - padding, padding]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> rScale = d3.scale.linear()</span></span><br><span class=\"line\"><span class=\"javascript\">            .domain([<span class=\"number\">0</span>, d3.max(dataSet, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data[<span class=\"number\">1</span>])])</span></span><br><span class=\"line\">            .range([4, 10]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> circles = svg.selectAll(<span class=\"string\">&#x27;circle&#x27;</span>)</span></span><br><span class=\"line\">            .data(dataSet)</span><br><span class=\"line\">            .enter()</span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;circle&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> xAxis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(xScale)</span><br><span class=\"line\">            .ticks(6)</span><br><span class=\"line\"><span class=\"javascript\">            .orient(<span class=\"string\">&#x27;bottom&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> yAxis = d3.svg.axis()</span></span><br><span class=\"line\">            .scale(yScale)</span><br><span class=\"line\">            .ticks(5)</span><br><span class=\"line\"><span class=\"javascript\">            .orient(<span class=\"string\">&#x27;left&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;axis&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(0, <span class=\"subst\">$&#123;h - padding&#125;</span>)`</span>)</span></span><br><span class=\"line\">            .call(xAxis);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;axis&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;padding&#125;</span>, 0)`</span>)</span></span><br><span class=\"line\">            .call(yAxis);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        circles.attr(<span class=\"string\">&#x27;cx&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> xScale(data[<span class=\"number\">0</span>]))</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;cy&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> yScale(data[<span class=\"number\">1</span>]))</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> rScale(data[<span class=\"number\">1</span>]));</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"过渡","date":"2021-03-23T16:00:00.000Z","_content":"\n# 过渡\n\n`d3.selection.trasition` 返回一个具备过渡能力的选集\n\n> `d3.selection.data(dataSet, fn)` 的第二个参数 `fn` 数被称为对象标识函数。这个函数确保了返回对象的一致性，使数据和图形元素之间的绑定更稳定。为了保证一致性，每一个数据都应当具备一个唯一的标识，然后下次更新选集时，即便 value 发生了变化，相同 id 的数据仍然对应同一个元素。\n\nD3 过渡并不要求每个被插值的数值都有明确的起始值和结束值。\n* 如果缺失起始值，它将试图使用计算出的样式\n* 如果缺失结束值，则将当前值作为常量\n\n### 过渡效果\n* `transition.duration(duration)`: `duration` 指定动画的持续时间，默认为 250ms，可传入具体数值或函数\n* `transition.delay(delay)`: `delay` 指定动画的延迟时间，默认为 0， 可传入具体数值或函数\n* `transition.ease(type)`: `type` 指定动画的缓动函数，默认缓动函数是 `cubic-in-out`，不可传入函数（通过使用 `attrTween` 或 `styleTween` 插值器中内置的定制缓动功能）\n    * 缓动模式: `lnear`、`cubic`、`cubic-in-out`、`sin`、`sin-out`、`exp`、`circle`、`back`、`bounce`\n    * 缓动模式修饰符: `in`、 `out`、 `in-out`、 `out-in`\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .rect-item {\n            fill: #090;\n        }\n    </style>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 600;\n        let h = 400;\n        let padding = 30;\n        let dataSet = [];\n        let id = 0;\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        let container = svg.append('g')\n            .attr('class', 'container');\n\n        function render(data) {\n            let rects = container.selectAll('rect')\n                .data(data, (data) => data.id);\n\n            let xScale = d3.scale.linear()\n                .domain([0, data.length])\n                .range([0, w - padding * 2]);\n\n            let yScale = d3.scale.linear()\n                .domain([0, d3.max(data, (d) => d.value)])\n                .range([h - padding * 2, 0]);\n\n            // update\n            rects.attr('class', 'rect-item')\n                .transition()\n                .duration(500)\n                .attr('x', (data, i) => xScale(i))\n                .attr('y', (data) => yScale(data.value))\n                .attr('width', 20)\n                .attr('height', (data) => h - padding - yScale(data.value));  \n\n            // enter\n            rects.enter()\n                .append('rect')\n                .attr('transform', 'translate(0, 100)')\n                .transition()\n                .duration(500)\n                .delay(200)\n                .ease('ease-in-out')\n                .attr('class', 'rect-item')\n                .attr('x', (data, i) => xScale(i))\n                .attr('y', (data) => yScale(data.value))\n                .attr('width', 20)\n                .attr('transform', 'translate(0, 40)')\n                .attr('height', (data) => h - padding - yScale(data.value));\n\n            // exit\n            rects.exit()\n                .transition()\n                .duration(500)\n                .attr('x', -40)\n                .style('opacity', 0)\n                .remove();\n        }\n\n        function getRandomData() {\n            return Math.round(Math.random() * 20) + 5;\n        }\n\n        for (let i = 0; i < 15; i++) {\n            dataSet.push({\n                id: ++id,\n                value: getRandomData()\n            });\n        }\n        render(dataSet);\n\n        window.setInterval(() => {\n            dataSet.shift();\n            dataSet.push({\n                id: ++id,\n                value: getRandomData()\n            });\n            render(dataSet);\n        }, 2000);\n    </script>\n\n</body>\n</html>\n```\n\n### 中间帧动画\n\n* `attrTween(name, tween)`: 据指定的补间函数 `tween`，通过指定的名称过渡属性值\n* `styleTween(name, tween)`: 据指定的补间函数 `tween`，通过指定的 CSS 样式的属性值\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        rect {\n            fill: #090;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 600;\n        let h = 400;\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        function widthTween () {\n            let quantize = d3.scale.quantize()\n                .domain([0, 1])\n                .range([40, 80, 120, 160, 200, 240, 280, 320, 360, 400]);\n\n            return (t) => quantize(t);\n        }\n\n        svg.append('g')\n            .attr('class', 'container')\n            .append('rect')\n            .attr('x', 0)\n            .attr('y', 20)\n            .attr('height', 20)\n            .attr('width', 40)\n            .transition()\n            .duration(4000)\n            .ease('linear')\n            .attr('width', 400);\n\n        svg.append('g')\n            .attr('class', 'container')\n            .append('rect')\n            .attr('x', 0)\n            .attr('y', 60)\n            .attr('height', 20)\n            .attr('width', 40)\n            .transition()\n            .duration(4000)\n            .ease('linear')\n            .attrTween('width', widthTween);\n    </script>\n\n</body>\n\n</html>\n```\n\n### 联级过渡\n\n```js\nsvg.append('g')\n    .attr('class', 'container')\n.append('rect')\n    .attr('x', 0)\n    .attr('y', 20)\n    .attr('height', 20)\n    .attr('width', 40)\n.transition()\n    .duration(2000)\n    .ease('linear')\n    .attr('width', 400)\n.transition()\n    .duration(1000)\n    .attr('height', 60)\n.transition()\n    .duration(1000)\n    .style('fill', '#00f');\n```\n\n### 选择性过渡\n\n```js\nlet data = ['Cat', 'Dog', 'Cat', 'Dog', 'Cat', 'Dog', 'Cat', 'Dog'];\n\nsvg.append('g')\n    .attr('class', 'container')\n.selectAll('rect')\n    .data(data)\n    .enter()\n.append('text')\n    .attr('class', 'text-item')\n    .attr('x', 10)\n    .attr('y', (data, i) => (i + 1) * 40)\n    .text(data => data)\n.transition()\n    .duration(1000)\n    .ease('bounce')\n    .attr('x', 500)\n.filter((data) => data === 'Cat')\n.transition()\n    .duration(600)\n    .ease('linear')\n    .attr('x', 20);\n```\n\n### 监听过渡事件\n\n```js\nlet data = ['Cat', 'Dog', 'Cat', 'Dog', 'Cat', 'Dog', 'Cat', 'Dog'];\n\nsvg.append('g')\n    .attr('class', 'container')\n.selectAll('rect')\n    .data(data)\n    .enter()\n.append('text')\n    .attr('class', 'text-item')\n    .attr('x', 10)\n    .attr('y', (data, i) => (i + 1) * 40)\n    .text(data => data)\n.transition()\n    .duration(1000)\n    .ease('bounce')\n    .attr('x', 500)\n.filter((data) => data === 'Cat')\n.transition()\n    .duration(600)\n    .ease('linear')\n    .each('start', function (data) { // 动画开始\n        d3.select(this).text(data.toUpperCase());\n    })\n    .each('end', function () { // 动画结束\n        d3.select(this).text('end');\n    })\n    .each('interrupt', function () { // 动画被打断\n        d3.select(this).text('interrupt');\n    })\n    .attr('x', 20);\n```","source":"_posts/D3.js/过渡.md","raw":"---\ntitle: 过渡\ncategories: [D3.js]\ntags: [D3.js]\ndate: 2021-03-24\n---\n\n# 过渡\n\n`d3.selection.trasition` 返回一个具备过渡能力的选集\n\n> `d3.selection.data(dataSet, fn)` 的第二个参数 `fn` 数被称为对象标识函数。这个函数确保了返回对象的一致性，使数据和图形元素之间的绑定更稳定。为了保证一致性，每一个数据都应当具备一个唯一的标识，然后下次更新选集时，即便 value 发生了变化，相同 id 的数据仍然对应同一个元素。\n\nD3 过渡并不要求每个被插值的数值都有明确的起始值和结束值。\n* 如果缺失起始值，它将试图使用计算出的样式\n* 如果缺失结束值，则将当前值作为常量\n\n### 过渡效果\n* `transition.duration(duration)`: `duration` 指定动画的持续时间，默认为 250ms，可传入具体数值或函数\n* `transition.delay(delay)`: `delay` 指定动画的延迟时间，默认为 0， 可传入具体数值或函数\n* `transition.ease(type)`: `type` 指定动画的缓动函数，默认缓动函数是 `cubic-in-out`，不可传入函数（通过使用 `attrTween` 或 `styleTween` 插值器中内置的定制缓动功能）\n    * 缓动模式: `lnear`、`cubic`、`cubic-in-out`、`sin`、`sin-out`、`exp`、`circle`、`back`、`bounce`\n    * 缓动模式修饰符: `in`、 `out`、 `in-out`、 `out-in`\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .rect-item {\n            fill: #090;\n        }\n    </style>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 600;\n        let h = 400;\n        let padding = 30;\n        let dataSet = [];\n        let id = 0;\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        let container = svg.append('g')\n            .attr('class', 'container');\n\n        function render(data) {\n            let rects = container.selectAll('rect')\n                .data(data, (data) => data.id);\n\n            let xScale = d3.scale.linear()\n                .domain([0, data.length])\n                .range([0, w - padding * 2]);\n\n            let yScale = d3.scale.linear()\n                .domain([0, d3.max(data, (d) => d.value)])\n                .range([h - padding * 2, 0]);\n\n            // update\n            rects.attr('class', 'rect-item')\n                .transition()\n                .duration(500)\n                .attr('x', (data, i) => xScale(i))\n                .attr('y', (data) => yScale(data.value))\n                .attr('width', 20)\n                .attr('height', (data) => h - padding - yScale(data.value));  \n\n            // enter\n            rects.enter()\n                .append('rect')\n                .attr('transform', 'translate(0, 100)')\n                .transition()\n                .duration(500)\n                .delay(200)\n                .ease('ease-in-out')\n                .attr('class', 'rect-item')\n                .attr('x', (data, i) => xScale(i))\n                .attr('y', (data) => yScale(data.value))\n                .attr('width', 20)\n                .attr('transform', 'translate(0, 40)')\n                .attr('height', (data) => h - padding - yScale(data.value));\n\n            // exit\n            rects.exit()\n                .transition()\n                .duration(500)\n                .attr('x', -40)\n                .style('opacity', 0)\n                .remove();\n        }\n\n        function getRandomData() {\n            return Math.round(Math.random() * 20) + 5;\n        }\n\n        for (let i = 0; i < 15; i++) {\n            dataSet.push({\n                id: ++id,\n                value: getRandomData()\n            });\n        }\n        render(dataSet);\n\n        window.setInterval(() => {\n            dataSet.shift();\n            dataSet.push({\n                id: ++id,\n                value: getRandomData()\n            });\n            render(dataSet);\n        }, 2000);\n    </script>\n\n</body>\n</html>\n```\n\n### 中间帧动画\n\n* `attrTween(name, tween)`: 据指定的补间函数 `tween`，通过指定的名称过渡属性值\n* `styleTween(name, tween)`: 据指定的补间函数 `tween`，通过指定的 CSS 样式的属性值\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        rect {\n            fill: #090;\n        }\n    </style>\n</head>\n\n<body>\n    <script src=\"http://d3js.org/d3.v3.js\" charset=\"utf-8\"></script>\n    <script>\n        let w = 600;\n        let h = 400;\n        let svg = d3.select('body')\n            .append('svg')\n            .attr('width', w)\n            .attr('height', h);\n\n        function widthTween () {\n            let quantize = d3.scale.quantize()\n                .domain([0, 1])\n                .range([40, 80, 120, 160, 200, 240, 280, 320, 360, 400]);\n\n            return (t) => quantize(t);\n        }\n\n        svg.append('g')\n            .attr('class', 'container')\n            .append('rect')\n            .attr('x', 0)\n            .attr('y', 20)\n            .attr('height', 20)\n            .attr('width', 40)\n            .transition()\n            .duration(4000)\n            .ease('linear')\n            .attr('width', 400);\n\n        svg.append('g')\n            .attr('class', 'container')\n            .append('rect')\n            .attr('x', 0)\n            .attr('y', 60)\n            .attr('height', 20)\n            .attr('width', 40)\n            .transition()\n            .duration(4000)\n            .ease('linear')\n            .attrTween('width', widthTween);\n    </script>\n\n</body>\n\n</html>\n```\n\n### 联级过渡\n\n```js\nsvg.append('g')\n    .attr('class', 'container')\n.append('rect')\n    .attr('x', 0)\n    .attr('y', 20)\n    .attr('height', 20)\n    .attr('width', 40)\n.transition()\n    .duration(2000)\n    .ease('linear')\n    .attr('width', 400)\n.transition()\n    .duration(1000)\n    .attr('height', 60)\n.transition()\n    .duration(1000)\n    .style('fill', '#00f');\n```\n\n### 选择性过渡\n\n```js\nlet data = ['Cat', 'Dog', 'Cat', 'Dog', 'Cat', 'Dog', 'Cat', 'Dog'];\n\nsvg.append('g')\n    .attr('class', 'container')\n.selectAll('rect')\n    .data(data)\n    .enter()\n.append('text')\n    .attr('class', 'text-item')\n    .attr('x', 10)\n    .attr('y', (data, i) => (i + 1) * 40)\n    .text(data => data)\n.transition()\n    .duration(1000)\n    .ease('bounce')\n    .attr('x', 500)\n.filter((data) => data === 'Cat')\n.transition()\n    .duration(600)\n    .ease('linear')\n    .attr('x', 20);\n```\n\n### 监听过渡事件\n\n```js\nlet data = ['Cat', 'Dog', 'Cat', 'Dog', 'Cat', 'Dog', 'Cat', 'Dog'];\n\nsvg.append('g')\n    .attr('class', 'container')\n.selectAll('rect')\n    .data(data)\n    .enter()\n.append('text')\n    .attr('class', 'text-item')\n    .attr('x', 10)\n    .attr('y', (data, i) => (i + 1) * 40)\n    .text(data => data)\n.transition()\n    .duration(1000)\n    .ease('bounce')\n    .attr('x', 500)\n.filter((data) => data === 'Cat')\n.transition()\n    .duration(600)\n    .ease('linear')\n    .each('start', function (data) { // 动画开始\n        d3.select(this).text(data.toUpperCase());\n    })\n    .each('end', function () { // 动画结束\n        d3.select(this).text('end');\n    })\n    .each('interrupt', function () { // 动画被打断\n        d3.select(this).text('interrupt');\n    })\n    .attr('x', 20);\n```","slug":"D3.js/过渡","published":1,"updated":"2021-04-28T02:31:04.335Z","_id":"cko0u126z0009y26rczb7c1qt","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"过渡\"><a href=\"#过渡\" class=\"headerlink\" title=\"过渡\"></a>过渡</h1><p><code>d3.selection.trasition</code> 返回一个具备过渡能力的选集</p>\n<blockquote>\n<p><code>d3.selection.data(dataSet, fn)</code> 的第二个参数 <code>fn</code> 数被称为对象标识函数。这个函数确保了返回对象的一致性，使数据和图形元素之间的绑定更稳定。为了保证一致性，每一个数据都应当具备一个唯一的标识，然后下次更新选集时，即便 value 发生了变化，相同 id 的数据仍然对应同一个元素。</p>\n</blockquote>\n<p>D3 过渡并不要求每个被插值的数值都有明确的起始值和结束值。</p>\n<ul>\n<li>如果缺失起始值，它将试图使用计算出的样式</li>\n<li>如果缺失结束值，则将当前值作为常量</li>\n</ul>\n<h3 id=\"过渡效果\"><a href=\"#过渡效果\" class=\"headerlink\" title=\"过渡效果\"></a>过渡效果</h3><ul>\n<li><code>transition.duration(duration)</code>: <code>duration</code> 指定动画的持续时间，默认为 250ms，可传入具体数值或函数</li>\n<li><code>transition.delay(delay)</code>: <code>delay</code> 指定动画的延迟时间，默认为 0， 可传入具体数值或函数</li>\n<li><code>transition.ease(type)</code>: <code>type</code> 指定动画的缓动函数，默认缓动函数是 <code>cubic-in-out</code>，不可传入函数（通过使用 <code>attrTween</code> 或 <code>styleTween</code> 插值器中内置的定制缓动功能）<ul>\n<li>缓动模式: <code>lnear</code>、<code>cubic</code>、<code>cubic-in-out</code>、<code>sin</code>、<code>sin-out</code>、<code>exp</code>、<code>circle</code>、<code>back</code>、<code>bounce</code></li>\n<li>缓动模式修饰符: <code>in</code>、 <code>out</code>、 <code>in-out</code>、 <code>out-in</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .rect-item &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = <span class=\"number\">30</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> dataSet = [];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> id = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> container = svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span>(<span class=\"params\">data</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> rects = container.selectAll(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .data(data, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> data.id);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> xScale = d3.scale.linear()</span></span><br><span class=\"line\">                .domain([0, data.length])</span><br><span class=\"line\">                .range([0, w - padding * 2]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> yScale = d3.scale.linear()</span></span><br><span class=\"line\"><span class=\"javascript\">                .domain([<span class=\"number\">0</span>, d3.max(data, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> d.value)])</span></span><br><span class=\"line\">                .range([h - padding * 2, 0]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// update</span></span></span><br><span class=\"line\"><span class=\"javascript\">            rects.attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;rect-item&#x27;</span>)</span></span><br><span class=\"line\">                .transition()</span><br><span class=\"line\">                .duration(500)</span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> xScale(i))</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> yScale(data.value))</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> h - padding - yScale(data.value));  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// enter</span></span></span><br><span class=\"line\">            rects.enter()</span><br><span class=\"line\"><span class=\"javascript\">                .append(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;translate(0, 100)&#x27;</span>)</span></span><br><span class=\"line\">                .transition()</span><br><span class=\"line\">                .duration(500)</span><br><span class=\"line\">                .delay(200)</span><br><span class=\"line\"><span class=\"javascript\">                .ease(<span class=\"string\">&#x27;ease-in-out&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;rect-item&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> xScale(i))</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> yScale(data.value))</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;translate(0, 40)&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> h - padding - yScale(data.value));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// exit</span></span></span><br><span class=\"line\">            rects.exit()</span><br><span class=\"line\">                .transition()</span><br><span class=\"line\">                .duration(500)</span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, -<span class=\"number\">40</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;opacity&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\">                .remove();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRandomData</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">20</span>) + <span class=\"number\">5</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span></span><br><span class=\"line\">            dataSet.push(&#123;</span><br><span class=\"line\">                id: ++id,</span><br><span class=\"line\">                value: getRandomData()</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        render(dataSet);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">window</span>.setInterval(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\">            dataSet.shift();</span><br><span class=\"line\">            dataSet.push(&#123;</span><br><span class=\"line\">                id: ++id,</span><br><span class=\"line\">                value: getRandomData()</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            render(dataSet);</span><br><span class=\"line\">        &#125;, 2000);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"中间帧动画\"><a href=\"#中间帧动画\" class=\"headerlink\" title=\"中间帧动画\"></a>中间帧动画</h3><ul>\n<li><code>attrTween(name, tween)</code>: 据指定的补间函数 <code>tween</code>，通过指定的名称过渡属性值</li>\n<li><code>styleTween(name, tween)</code>: 据指定的补间函数 <code>tween</code>，通过指定的 CSS 样式的属性值</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        rect &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">widthTween</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> quantize = d3.scale.quantize()</span></span><br><span class=\"line\">                .domain([0, 1])</span><br><span class=\"line\">                .range([40, 80, 120, 160, 200, 240, 280, 320, 360, 400]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">t</span>) =&gt;</span> quantize(t);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">40</span>)</span></span><br><span class=\"line\">            .transition()</span><br><span class=\"line\">            .duration(4000)</span><br><span class=\"line\"><span class=\"javascript\">            .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">400</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">60</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">40</span>)</span></span><br><span class=\"line\">            .transition()</span><br><span class=\"line\">            .duration(4000)</span><br><span class=\"line\"><span class=\"javascript\">            .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attrTween(<span class=\"string\">&#x27;width&#x27;</span>, widthTween);</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"联级过渡\"><a href=\"#联级过渡\" class=\"headerlink\" title=\"联级过渡\"></a>联级过渡</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span><br><span class=\"line\">.append(<span class=\"string\">&#x27;rect&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">2000</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;#00f&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"选择性过渡\"><a href=\"#选择性过渡\" class=\"headerlink\" title=\"选择性过渡\"></a>选择性过渡</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data = [<span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span><br><span class=\"line\">.selectAll(<span class=\"string\">&#x27;rect&#x27;</span>)</span><br><span class=\"line\">    .data(data)</span><br><span class=\"line\">    .enter()</span><br><span class=\"line\">.append(<span class=\"string\">&#x27;text&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;text-item&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> (i + <span class=\"number\">1</span>) * <span class=\"number\">40</span>)</span><br><span class=\"line\">    .text(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;bounce&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">.filter(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> data === <span class=\"string\">&#x27;Cat&#x27;</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">600</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">20</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监听过渡事件\"><a href=\"#监听过渡事件\" class=\"headerlink\" title=\"监听过渡事件\"></a>监听过渡事件</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data = [<span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span><br><span class=\"line\">.selectAll(<span class=\"string\">&#x27;rect&#x27;</span>)</span><br><span class=\"line\">    .data(data)</span><br><span class=\"line\">    .enter()</span><br><span class=\"line\">.append(<span class=\"string\">&#x27;text&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;text-item&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> (i + <span class=\"number\">1</span>) * <span class=\"number\">40</span>)</span><br><span class=\"line\">    .text(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;bounce&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">.filter(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> data === <span class=\"string\">&#x27;Cat&#x27;</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">600</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">    .each(<span class=\"string\">&#x27;start&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123; <span class=\"comment\">// 动画开始</span></span><br><span class=\"line\">        d3.select(<span class=\"built_in\">this</span>).text(data.toUpperCase());</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .each(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 动画结束</span></span><br><span class=\"line\">        d3.select(<span class=\"built_in\">this</span>).text(<span class=\"string\">&#x27;end&#x27;</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .each(<span class=\"string\">&#x27;interrupt&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 动画被打断</span></span><br><span class=\"line\">        d3.select(<span class=\"built_in\">this</span>).text(<span class=\"string\">&#x27;interrupt&#x27;</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">20</span>);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"过渡\"><a href=\"#过渡\" class=\"headerlink\" title=\"过渡\"></a>过渡</h1><p><code>d3.selection.trasition</code> 返回一个具备过渡能力的选集</p>\n<blockquote>\n<p><code>d3.selection.data(dataSet, fn)</code> 的第二个参数 <code>fn</code> 数被称为对象标识函数。这个函数确保了返回对象的一致性，使数据和图形元素之间的绑定更稳定。为了保证一致性，每一个数据都应当具备一个唯一的标识，然后下次更新选集时，即便 value 发生了变化，相同 id 的数据仍然对应同一个元素。</p>\n</blockquote>\n<p>D3 过渡并不要求每个被插值的数值都有明确的起始值和结束值。</p>\n<ul>\n<li>如果缺失起始值，它将试图使用计算出的样式</li>\n<li>如果缺失结束值，则将当前值作为常量</li>\n</ul>\n<h3 id=\"过渡效果\"><a href=\"#过渡效果\" class=\"headerlink\" title=\"过渡效果\"></a>过渡效果</h3><ul>\n<li><code>transition.duration(duration)</code>: <code>duration</code> 指定动画的持续时间，默认为 250ms，可传入具体数值或函数</li>\n<li><code>transition.delay(delay)</code>: <code>delay</code> 指定动画的延迟时间，默认为 0， 可传入具体数值或函数</li>\n<li><code>transition.ease(type)</code>: <code>type</code> 指定动画的缓动函数，默认缓动函数是 <code>cubic-in-out</code>，不可传入函数（通过使用 <code>attrTween</code> 或 <code>styleTween</code> 插值器中内置的定制缓动功能）<ul>\n<li>缓动模式: <code>lnear</code>、<code>cubic</code>、<code>cubic-in-out</code>、<code>sin</code>、<code>sin-out</code>、<code>exp</code>、<code>circle</code>、<code>back</code>、<code>bounce</code></li>\n<li>缓动模式修饰符: <code>in</code>、 <code>out</code>、 <code>in-out</code>、 <code>out-in</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .rect-item &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> padding = <span class=\"number\">30</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> dataSet = [];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> id = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> container = svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span>(<span class=\"params\">data</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> rects = container.selectAll(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .data(data, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> data.id);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> xScale = d3.scale.linear()</span></span><br><span class=\"line\">                .domain([0, data.length])</span><br><span class=\"line\">                .range([0, w - padding * 2]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> yScale = d3.scale.linear()</span></span><br><span class=\"line\"><span class=\"javascript\">                .domain([<span class=\"number\">0</span>, d3.max(data, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> d.value)])</span></span><br><span class=\"line\">                .range([h - padding * 2, 0]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// update</span></span></span><br><span class=\"line\"><span class=\"javascript\">            rects.attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;rect-item&#x27;</span>)</span></span><br><span class=\"line\">                .transition()</span><br><span class=\"line\">                .duration(500)</span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> xScale(i))</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> yScale(data.value))</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> h - padding - yScale(data.value));  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// enter</span></span></span><br><span class=\"line\">            rects.enter()</span><br><span class=\"line\"><span class=\"javascript\">                .append(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;translate(0, 100)&#x27;</span>)</span></span><br><span class=\"line\">                .transition()</span><br><span class=\"line\">                .duration(500)</span><br><span class=\"line\">                .delay(200)</span><br><span class=\"line\"><span class=\"javascript\">                .ease(<span class=\"string\">&#x27;ease-in-out&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;rect-item&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> xScale(i))</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> yScale(data.value))</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;translate(0, 40)&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> h - padding - yScale(data.value));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// exit</span></span></span><br><span class=\"line\">            rects.exit()</span><br><span class=\"line\">                .transition()</span><br><span class=\"line\">                .duration(500)</span><br><span class=\"line\"><span class=\"javascript\">                .attr(<span class=\"string\">&#x27;x&#x27;</span>, -<span class=\"number\">40</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                .style(<span class=\"string\">&#x27;opacity&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\">                .remove();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRandomData</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">20</span>) + <span class=\"number\">5</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span></span><br><span class=\"line\">            dataSet.push(&#123;</span><br><span class=\"line\">                id: ++id,</span><br><span class=\"line\">                value: getRandomData()</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        render(dataSet);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">window</span>.setInterval(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\">            dataSet.shift();</span><br><span class=\"line\">            dataSet.push(&#123;</span><br><span class=\"line\">                id: ++id,</span><br><span class=\"line\">                value: getRandomData()</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            render(dataSet);</span><br><span class=\"line\">        &#125;, 2000);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"中间帧动画\"><a href=\"#中间帧动画\" class=\"headerlink\" title=\"中间帧动画\"></a>中间帧动画</h3><ul>\n<li><code>attrTween(name, tween)</code>: 据指定的补间函数 <code>tween</code>，通过指定的名称过渡属性值</li>\n<li><code>styleTween(name, tween)</code>: 据指定的补间函数 <code>tween</code>，通过指定的 CSS 样式的属性值</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        rect &#123;</span><br><span class=\"line\"><span class=\"css\">            fill: <span class=\"number\">#090</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://d3js.org/d3.v3.js&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> w = <span class=\"number\">600</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> h = <span class=\"number\">400</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> svg = d3.select(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;svg&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, w)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, h);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">widthTween</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> quantize = d3.scale.quantize()</span></span><br><span class=\"line\">                .domain([0, 1])</span><br><span class=\"line\">                .range([40, 80, 120, 160, 200, 240, 280, 320, 360, 400]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">t</span>) =&gt;</span> quantize(t);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">40</span>)</span></span><br><span class=\"line\">            .transition()</span><br><span class=\"line\">            .duration(4000)</span><br><span class=\"line\"><span class=\"javascript\">            .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">400</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .append(<span class=\"string\">&#x27;rect&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">60</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">40</span>)</span></span><br><span class=\"line\">            .transition()</span><br><span class=\"line\">            .duration(4000)</span><br><span class=\"line\"><span class=\"javascript\">            .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">            .attrTween(<span class=\"string\">&#x27;width&#x27;</span>, widthTween);</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"联级过渡\"><a href=\"#联级过渡\" class=\"headerlink\" title=\"联级过渡\"></a>联级过渡</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span><br><span class=\"line\">.append(<span class=\"string\">&#x27;rect&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">2000</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    .style(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;#00f&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"选择性过渡\"><a href=\"#选择性过渡\" class=\"headerlink\" title=\"选择性过渡\"></a>选择性过渡</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data = [<span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span><br><span class=\"line\">.selectAll(<span class=\"string\">&#x27;rect&#x27;</span>)</span><br><span class=\"line\">    .data(data)</span><br><span class=\"line\">    .enter()</span><br><span class=\"line\">.append(<span class=\"string\">&#x27;text&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;text-item&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> (i + <span class=\"number\">1</span>) * <span class=\"number\">40</span>)</span><br><span class=\"line\">    .text(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;bounce&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">.filter(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> data === <span class=\"string\">&#x27;Cat&#x27;</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">600</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">20</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监听过渡事件\"><a href=\"#监听过渡事件\" class=\"headerlink\" title=\"监听过渡事件\"></a>监听过渡事件</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data = [<span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>, <span class=\"string\">&#x27;Cat&#x27;</span>, <span class=\"string\">&#x27;Dog&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">svg.append(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;container&#x27;</span>)</span><br><span class=\"line\">.selectAll(<span class=\"string\">&#x27;rect&#x27;</span>)</span><br><span class=\"line\">    .data(data)</span><br><span class=\"line\">    .enter()</span><br><span class=\"line\">.append(<span class=\"string\">&#x27;text&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;text-item&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"function\">(<span class=\"params\">data, i</span>) =&gt;</span> (i + <span class=\"number\">1</span>) * <span class=\"number\">40</span>)</span><br><span class=\"line\">    .text(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> data)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;bounce&#x27;</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">.filter(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> data === <span class=\"string\">&#x27;Cat&#x27;</span>)</span><br><span class=\"line\">.transition()</span><br><span class=\"line\">    .duration(<span class=\"number\">600</span>)</span><br><span class=\"line\">    .ease(<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">    .each(<span class=\"string\">&#x27;start&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123; <span class=\"comment\">// 动画开始</span></span><br><span class=\"line\">        d3.select(<span class=\"built_in\">this</span>).text(data.toUpperCase());</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .each(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 动画结束</span></span><br><span class=\"line\">        d3.select(<span class=\"built_in\">this</span>).text(<span class=\"string\">&#x27;end&#x27;</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .each(<span class=\"string\">&#x27;interrupt&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 动画被打断</span></span><br><span class=\"line\">        d3.select(<span class=\"built_in\">this</span>).text(<span class=\"string\">&#x27;interrupt&#x27;</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .attr(<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"number\">20</span>);</span><br></pre></td></tr></table></figure>"},{"title":"SVG 基础元素","date":"2021-03-23T16:00:00.000Z","_content":"\n# SVG 基础元素\n\n## SVG 元素通用属性\n* transform 对基础图形进行变换处理（与 CSS3 中的 transform 属性有点不一致）\n    * 平移 `translate(50,30)` \n    * 缩放 `scale(2)` \n    * 旋转 `rotate(30)` \n    * 翻转 `skewX()`、`skewY(10)`\n* fill：填充色\n* stroke：定义图形、文本等的边线颜色\n\n说明：支持 hover 伪类、id、class 等\n\n## SVG 元素通用 CSS 样式\n* display: 控制元素是否可见（`inline`、`none`，所有元素的初始值都为 `inline`）\n* fill:  填充色\n* fill-opacity: 填充色透明度\n* stroke: 定义图形、文本等的边线颜色\n* stroke-width: 定义图形、文字边线的宽度 \n* stroke-opacity: 定义图形、文字边线的透明度\n* stroke-linecap：用来定义开放式路径的端点的样式（`butt`、`round`、`square`）\n* stroke-linejoin：用来控制两个线段之间的联合是如何绘制\n* stroke-dasharray：用来创建虚线（如 `stroke-dasharray=\"5,5\"`）\n* fill-rule：判断路径的哪一侧在路径所构成的形状的内部，从而判断fill属性如何给这个形状上色\n\n![stroke-linecap 属性](https://mdn.mozillademos.org/files/730/SVG_Stroke_Linecap_Example.png)\n![stroke-linejoin 属性](https://mdn.mozillademos.org/files/731/SVG_Stroke_Linejoin_Example.png)\n\n## 文本\n### SVG 文本 （`<text>`）\n说明：用来定义文字文本，例如 `<text>测试文字</text>`\n\n支持的样式：`font-family`，`font-style`，`font-weight`，`font-variant`，`font-stretch`，`font-size`，`font-size-adjust`，`kerning`，`letter-spacing`，`word-spacing` 和 `text-decoration`\n\n### 内联文本  （`<tspan>`）\n说明：嵌套在 `<text>` 标签中，与 `<span>` 标签类似，用于定义一组文本的样式\n\n### 文本路径  （`<textPath>`）\n说明：嵌套在 `<text>` 标签中，使文字按照指定路径排列，放在 `<text>` 标记内部引用预定义的 `<path>`，引用时，使用 `xlink:href` 属性指明需要引用的路径的 ID\n\n### 链接 （`<a>`）\n说明：创建一个 SVG 元素链接\n\n* xlink:show\n* xlink:actuate\n* xlink:href\n* target\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n<body>\n    <svg width=\"800\" height=\"400\" style=\"border: 1px solid #aaa;\">\n        <defs>\n            <path id=\"MyPath\" d=\"M 100 200 \n                     C 200 100 300   0 400 100\n                     C 500 200 600 300 700 200\n                     C 800 100 900 100 900 100\" />\n        </defs>\n        <a xlink:href=\"https://www.baidu.com\" target=\"_blank\">\n            <text x=\"100\" y=\"15\" style=\"fill: #009; cursor: pointer;\"> 打开百度</text>\n        </a>\n        <text x=\"0\" y=\"15\" style=\"fill: red;\" transform=\"rotate(30 20, 30)\">\n             Just test SVG! <tspan style=\"fill: #0f0; font-size: 26px; font-style: italic;\">中国人民银行</tspan> nothing nothing nothing\n        </text>\n        <text>\n            <textPath xlink:href=\"#MyPath\">\n                SVG 基本功能测试基本功能测试基本功能测试基本功能测试基本功能测试\n            </textPath>\n        </text>\n    </svg>\n</body>\n</html>\n```\n\n\n## 基本图形\n\n### 矩形（`<rect>`）\n* x: 元素距离左边的距离\n* y: 元素距离上边的距离\n* width: 元素的宽度\n* height: 元素的高度\n* rx: 矩形 X 轴方向的半径\n* rx: 矩形 Y 轴方向的半径\n\n### 圆形 （`<circle>`）\n* cx: 圆心距离 Y 轴的距离\n* cy: 圆心距离 X 轴的距离\n* r: 圆的半径\n\n### 椭圆（`<ellipse>`）\n* cx: 圆心距离 Y 轴的距离\n* cy: 圆心距离 X 轴的距离\n* rx: 圆的 X 轴的半径\n* ry: 圆的 Y 轴的半径\n\n### 直线（`<line>`）\n* x1: X 轴方向的起点\n* y1: Y 轴方向的起点\n* x2: X 轴方向的终点\n* y2: Y 轴方向的终点\n\n### 折线 （`<polyline>`）\n* points 属性里定义了各个点的坐标，x 和 y 坐标之间用逗号分别，多个坐标之间用空格分割\n    * 例如 `<polyline points=\"3,3 10,40 50,100 20,150\"/>`\n\n### 多边形 （`<polygen>`）\n* points 属性里定义了各个点的坐标，x 和 y 坐标之间用逗号分别，多个坐标之间用空格分割，并组成闭合的环形\n\n### 路径 （`<path>`）\n* d 用于定义一系列指令，例如 `<path d=\"M150 0 L75 200 L225 200 Z\" />`\n\n|指令\t| 参数 | 名称 | 描述 |\n| --- | --- | --- | --- |\n|M\t|x,y\t|moveto |移动到\t移动虚拟画笔到指定的（x,y）坐标，仅移动不绘制|\n|m\t|x,y\t|moveto\t|同M，但使用相对坐标|\n|L\t|x,y\t|lineto |连直线到\t从当前画笔所在位置绘制一条直线到指定的（x,y）坐标|\n|l\t|x,y\t|lineto\t|同L，但使用相对坐标|\n|H\t|x\t|horizontal lineto |水平连线到\t绘制一条水平直线到参数指定的x坐标点，y坐标为画笔的y坐标|\n|h\t|x\t|horizontal lineto\t|同H，但使用相对坐标|\n|V\t|y\t|vertical lineto |垂直连线到\t从当前位置绘制一条垂直直线到参数指定的y坐标|\n|v\t|y\t|vertical lineto\t|同V，但使用相对坐标|\n|C\t|x1,y1 x2,y2 x,y\t|curveto 三次方贝塞尔曲线\t|从当前画笔位置绘制一条三次贝兹曲线到参数（x,y）指定的坐标。x1，y1和x2,y2是曲线的开始和结束控制点，用于控制曲线的弧度|\n|c\t|x1,y1 x2,y2 x,y\t|curveto\t|同C，但使用相对坐标|\n|S\t|x2,y2 x,y\t|shorthand |平滑三次方贝塞尔曲线\t从当前画笔位置绘制一条三次贝塞尔曲线到参数（x,y）指定的坐标。x2,y2是结束控制点。开始控制点和前一条曲线的结束控制点相同|\n|s\t|x2,y2 x,y\t|shorthand |平滑三次方贝塞尔曲线\t同S，但使用相对坐标|\n|Q\t|x1,y1 x,y\t|二次方贝塞尔曲线\t|从当前画笔位置绘制一条二次方贝塞尔曲线到参数（x,y）指定的坐标。x1,y1是控制点，用于控制曲线的弧度|\n|q\t|x1,y1 x,y\t|二次方贝塞尔曲线\t|同Q，但使用相对坐标|\n|T\t|x,y\t|平滑的二次贝塞尔曲线\t|从当前画笔位置绘制一条二次贝塞尔曲线到参数（x,y）指定的坐标。控制点被假定为最后一次使用的控制点|\n|t\t|x,y\t|平滑的二次贝塞尔曲线\t|同T，但使用相对坐标|\n|A\t|rx,ry x-axis-rotation large-arc-flag,sweepflag x,y\t|椭圆弧线\t|从当前画笔位置开始绘制一条椭圆弧线到（x,y）指定的坐标。rx和ry分别为椭圆弧线水平和垂直方向上的半径。x-axis-rotation指定弧线绕x轴旋转的度数。它只在rx和ry的值不相同是有效果。large-arc-flag是大弧标志位，取值0或1，用于决定绘制大弧还是小弧。sweep-flag用于决定弧线绘制的方向|\n|a\t|rx,ry x-axis-rotation large-arc-flag,sweepflag x,y\t|椭圆弧线\t|同A，但使用相对坐标|\n|Z\t|无\t|闭合路径\t|从结束点绘制一条直线到开始点，闭合路径|\n|z\t|无\t|闭合路径\t|同Z|\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n<body>\n    <svg width=\"400\" height=\"400\" style=\"border: 1px solid #999;\">\n        <rect x=\"20\" y=\"40\" width=\"200\" height=\"200\" rx=\"20\" ry=\"30\" style=\"fill: #009;stroke: #f00; stroke-width: 2; fill-opacity: 0.5; stroke-opacity: 5.2\"/>\n        <circle cx=\"290\" cy=\"60\" r=\"40\" style=\"fill: #0f0; fill-opacity: .4;\"/>\n        <ellipse cx=\"300\" cy=\"150\" rx=\"60\" ry=\"40\" style=\"fill: #900; stroke: #999; stroke-width: 3; stroke-opacity: .5;\"/>\n        <line x1=\"240\" y1=\"220\" x2=\"395\" y2=\"220\" style=\"stroke: #333; stroke-width: 2;\"/>\n        <polyline points=\"3,3 10,40 50,100 20,150 20,180 50,180 50,210 80,210 110,210\" style=\"fill:none; stroke:#099; stroke-width: 1\"/>\n        <polygon points=\"110, 20 30, 40 80, 50\" style=\"fill: #934;\"/>\n        <polygon points=\"100,10 40,198 190,78 10,78 160,198\" style=\"fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;\" />\n        <path d=\"M 175 200 l 150 0\" stroke=\"green\" stroke-width=\"3\" fill=\"none\" />\n        <path d=\"M 100 350 q 150 -300 300 0\" stroke=\"blue\" stroke-width=\"5\" fill=\"none\" />\n    </svg>\n</body>\n</html>\n```\n\n## 结构元素\n### 分组 （`<g>`）\n说明：`<g>` 用于分组，它能把多个元素放在一组里，对 `<g>` 标记的样式和渲染会作用到这个分组内的所有元素上。组内的所有元素都会继承 `<g>` 标记上的所有属性。用 `<g>` 定义的分组还可以使用 `<use>` 进行复制使用。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n<body>\n    <svg width=\"400\" height=\"300\" style=\"border: 1px solid #999;\">\n        <g style=\"fill: red; stroke: #090; stroke-width: 2;\">\n            <circle r=\"40\" cx=\"180\" cy=\"140\"></circle>\n            <rect x=\"30\" y=\"40\" width=\"100\" height=\"50\"></rect>\n            <rect x=\"230\" y=\"40\" width=\"100\" height=\"50\"></rect>\n        </g>\n    </svg>\n</body>\n</html>\n```\n\n### 复制 （`<use>`）\n说明：`<use>` 能从 SVG 文档内部取出一个节点，克隆它，并把它输出到别处。子元素能继承来自 `<use>` 样式\n\n```html\n<html lang=\"en\">\n\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n\n<body>\n    <svg width=\"400\" height=\"300\" style=\"border: 1px solid #999;\">\n        <defs>\n            <g id=\"shape\" style=\"fill: inherit; stroke: #090; stroke-width: 2;\">\n                <circle r=\"40\" cx=\"180\" cy=\"140\"></circle>\n                <rect x=\"30\" y=\"40\" width=\"100\" height=\"50\"></rect>\n                <rect x=\"230\" y=\"40\" width=\"100\" height=\"50\"></rect>\n            </g>\n        </defs>\n\n        <text y=\"15\">图形1</text>\n        <use x=\"20\" y=\"20\" xlink:href=\"#shape\" style=\"fill: #009;\"></use>\n    </svg>\n</body>\n\n</html>\n```\n\n### 模板（<symbol>）\n`<symbol>` 的作用是定义一个图像模板，使用 `<use>` 标记实例化它，然后在 SVG 文档中反复使用。`<symbol>` 本身不会输出任何图像，只有使用 `<use>` 实例化后才会显示。\n\n```html\n<html lang=\"en\">\n\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n\n<body>\n    <svg width=\"400\" height=\"300\" style=\"border: 1px solid #999;\">\n        <!-- symbol definition  NEVER draw -->\n        <symbol id=\"sym01\" viewBox=\"0 0 150 110\">\n            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke-width=\"8\" stroke=\"red\" fill=\"red\" />\n            <circle cx=\"90\" cy=\"60\" r=\"40\" stroke-width=\"8\" stroke=\"green\" fill=\"white\" />\n        </symbol>\n    \n        <!-- actual drawing by \"use\" element -->\n        <use xlink:href=\"#sym01\" x=\"0\" y=\"0\" width=\"100\" height=\"50\" />\n        <use xlink:href=\"#sym01\" x=\"0\" y=\"50\" width=\"75\" height=\"38\" />\n        <use xlink:href=\"#sym01\" x=\"0\" y=\"100\" width=\"50\" height=\"25\" />\n    </svg>\n</body>\n\n</html>\n```","source":"_posts/SVG/SVG 基础元素.md","raw":"---\ntitle: SVG 基础元素\ncategories: SVG\ntags: [SVG]\ndate: 2021-03-24\n---\n\n# SVG 基础元素\n\n## SVG 元素通用属性\n* transform 对基础图形进行变换处理（与 CSS3 中的 transform 属性有点不一致）\n    * 平移 `translate(50,30)` \n    * 缩放 `scale(2)` \n    * 旋转 `rotate(30)` \n    * 翻转 `skewX()`、`skewY(10)`\n* fill：填充色\n* stroke：定义图形、文本等的边线颜色\n\n说明：支持 hover 伪类、id、class 等\n\n## SVG 元素通用 CSS 样式\n* display: 控制元素是否可见（`inline`、`none`，所有元素的初始值都为 `inline`）\n* fill:  填充色\n* fill-opacity: 填充色透明度\n* stroke: 定义图形、文本等的边线颜色\n* stroke-width: 定义图形、文字边线的宽度 \n* stroke-opacity: 定义图形、文字边线的透明度\n* stroke-linecap：用来定义开放式路径的端点的样式（`butt`、`round`、`square`）\n* stroke-linejoin：用来控制两个线段之间的联合是如何绘制\n* stroke-dasharray：用来创建虚线（如 `stroke-dasharray=\"5,5\"`）\n* fill-rule：判断路径的哪一侧在路径所构成的形状的内部，从而判断fill属性如何给这个形状上色\n\n![stroke-linecap 属性](https://mdn.mozillademos.org/files/730/SVG_Stroke_Linecap_Example.png)\n![stroke-linejoin 属性](https://mdn.mozillademos.org/files/731/SVG_Stroke_Linejoin_Example.png)\n\n## 文本\n### SVG 文本 （`<text>`）\n说明：用来定义文字文本，例如 `<text>测试文字</text>`\n\n支持的样式：`font-family`，`font-style`，`font-weight`，`font-variant`，`font-stretch`，`font-size`，`font-size-adjust`，`kerning`，`letter-spacing`，`word-spacing` 和 `text-decoration`\n\n### 内联文本  （`<tspan>`）\n说明：嵌套在 `<text>` 标签中，与 `<span>` 标签类似，用于定义一组文本的样式\n\n### 文本路径  （`<textPath>`）\n说明：嵌套在 `<text>` 标签中，使文字按照指定路径排列，放在 `<text>` 标记内部引用预定义的 `<path>`，引用时，使用 `xlink:href` 属性指明需要引用的路径的 ID\n\n### 链接 （`<a>`）\n说明：创建一个 SVG 元素链接\n\n* xlink:show\n* xlink:actuate\n* xlink:href\n* target\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n<body>\n    <svg width=\"800\" height=\"400\" style=\"border: 1px solid #aaa;\">\n        <defs>\n            <path id=\"MyPath\" d=\"M 100 200 \n                     C 200 100 300   0 400 100\n                     C 500 200 600 300 700 200\n                     C 800 100 900 100 900 100\" />\n        </defs>\n        <a xlink:href=\"https://www.baidu.com\" target=\"_blank\">\n            <text x=\"100\" y=\"15\" style=\"fill: #009; cursor: pointer;\"> 打开百度</text>\n        </a>\n        <text x=\"0\" y=\"15\" style=\"fill: red;\" transform=\"rotate(30 20, 30)\">\n             Just test SVG! <tspan style=\"fill: #0f0; font-size: 26px; font-style: italic;\">中国人民银行</tspan> nothing nothing nothing\n        </text>\n        <text>\n            <textPath xlink:href=\"#MyPath\">\n                SVG 基本功能测试基本功能测试基本功能测试基本功能测试基本功能测试\n            </textPath>\n        </text>\n    </svg>\n</body>\n</html>\n```\n\n\n## 基本图形\n\n### 矩形（`<rect>`）\n* x: 元素距离左边的距离\n* y: 元素距离上边的距离\n* width: 元素的宽度\n* height: 元素的高度\n* rx: 矩形 X 轴方向的半径\n* rx: 矩形 Y 轴方向的半径\n\n### 圆形 （`<circle>`）\n* cx: 圆心距离 Y 轴的距离\n* cy: 圆心距离 X 轴的距离\n* r: 圆的半径\n\n### 椭圆（`<ellipse>`）\n* cx: 圆心距离 Y 轴的距离\n* cy: 圆心距离 X 轴的距离\n* rx: 圆的 X 轴的半径\n* ry: 圆的 Y 轴的半径\n\n### 直线（`<line>`）\n* x1: X 轴方向的起点\n* y1: Y 轴方向的起点\n* x2: X 轴方向的终点\n* y2: Y 轴方向的终点\n\n### 折线 （`<polyline>`）\n* points 属性里定义了各个点的坐标，x 和 y 坐标之间用逗号分别，多个坐标之间用空格分割\n    * 例如 `<polyline points=\"3,3 10,40 50,100 20,150\"/>`\n\n### 多边形 （`<polygen>`）\n* points 属性里定义了各个点的坐标，x 和 y 坐标之间用逗号分别，多个坐标之间用空格分割，并组成闭合的环形\n\n### 路径 （`<path>`）\n* d 用于定义一系列指令，例如 `<path d=\"M150 0 L75 200 L225 200 Z\" />`\n\n|指令\t| 参数 | 名称 | 描述 |\n| --- | --- | --- | --- |\n|M\t|x,y\t|moveto |移动到\t移动虚拟画笔到指定的（x,y）坐标，仅移动不绘制|\n|m\t|x,y\t|moveto\t|同M，但使用相对坐标|\n|L\t|x,y\t|lineto |连直线到\t从当前画笔所在位置绘制一条直线到指定的（x,y）坐标|\n|l\t|x,y\t|lineto\t|同L，但使用相对坐标|\n|H\t|x\t|horizontal lineto |水平连线到\t绘制一条水平直线到参数指定的x坐标点，y坐标为画笔的y坐标|\n|h\t|x\t|horizontal lineto\t|同H，但使用相对坐标|\n|V\t|y\t|vertical lineto |垂直连线到\t从当前位置绘制一条垂直直线到参数指定的y坐标|\n|v\t|y\t|vertical lineto\t|同V，但使用相对坐标|\n|C\t|x1,y1 x2,y2 x,y\t|curveto 三次方贝塞尔曲线\t|从当前画笔位置绘制一条三次贝兹曲线到参数（x,y）指定的坐标。x1，y1和x2,y2是曲线的开始和结束控制点，用于控制曲线的弧度|\n|c\t|x1,y1 x2,y2 x,y\t|curveto\t|同C，但使用相对坐标|\n|S\t|x2,y2 x,y\t|shorthand |平滑三次方贝塞尔曲线\t从当前画笔位置绘制一条三次贝塞尔曲线到参数（x,y）指定的坐标。x2,y2是结束控制点。开始控制点和前一条曲线的结束控制点相同|\n|s\t|x2,y2 x,y\t|shorthand |平滑三次方贝塞尔曲线\t同S，但使用相对坐标|\n|Q\t|x1,y1 x,y\t|二次方贝塞尔曲线\t|从当前画笔位置绘制一条二次方贝塞尔曲线到参数（x,y）指定的坐标。x1,y1是控制点，用于控制曲线的弧度|\n|q\t|x1,y1 x,y\t|二次方贝塞尔曲线\t|同Q，但使用相对坐标|\n|T\t|x,y\t|平滑的二次贝塞尔曲线\t|从当前画笔位置绘制一条二次贝塞尔曲线到参数（x,y）指定的坐标。控制点被假定为最后一次使用的控制点|\n|t\t|x,y\t|平滑的二次贝塞尔曲线\t|同T，但使用相对坐标|\n|A\t|rx,ry x-axis-rotation large-arc-flag,sweepflag x,y\t|椭圆弧线\t|从当前画笔位置开始绘制一条椭圆弧线到（x,y）指定的坐标。rx和ry分别为椭圆弧线水平和垂直方向上的半径。x-axis-rotation指定弧线绕x轴旋转的度数。它只在rx和ry的值不相同是有效果。large-arc-flag是大弧标志位，取值0或1，用于决定绘制大弧还是小弧。sweep-flag用于决定弧线绘制的方向|\n|a\t|rx,ry x-axis-rotation large-arc-flag,sweepflag x,y\t|椭圆弧线\t|同A，但使用相对坐标|\n|Z\t|无\t|闭合路径\t|从结束点绘制一条直线到开始点，闭合路径|\n|z\t|无\t|闭合路径\t|同Z|\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n<body>\n    <svg width=\"400\" height=\"400\" style=\"border: 1px solid #999;\">\n        <rect x=\"20\" y=\"40\" width=\"200\" height=\"200\" rx=\"20\" ry=\"30\" style=\"fill: #009;stroke: #f00; stroke-width: 2; fill-opacity: 0.5; stroke-opacity: 5.2\"/>\n        <circle cx=\"290\" cy=\"60\" r=\"40\" style=\"fill: #0f0; fill-opacity: .4;\"/>\n        <ellipse cx=\"300\" cy=\"150\" rx=\"60\" ry=\"40\" style=\"fill: #900; stroke: #999; stroke-width: 3; stroke-opacity: .5;\"/>\n        <line x1=\"240\" y1=\"220\" x2=\"395\" y2=\"220\" style=\"stroke: #333; stroke-width: 2;\"/>\n        <polyline points=\"3,3 10,40 50,100 20,150 20,180 50,180 50,210 80,210 110,210\" style=\"fill:none; stroke:#099; stroke-width: 1\"/>\n        <polygon points=\"110, 20 30, 40 80, 50\" style=\"fill: #934;\"/>\n        <polygon points=\"100,10 40,198 190,78 10,78 160,198\" style=\"fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;\" />\n        <path d=\"M 175 200 l 150 0\" stroke=\"green\" stroke-width=\"3\" fill=\"none\" />\n        <path d=\"M 100 350 q 150 -300 300 0\" stroke=\"blue\" stroke-width=\"5\" fill=\"none\" />\n    </svg>\n</body>\n</html>\n```\n\n## 结构元素\n### 分组 （`<g>`）\n说明：`<g>` 用于分组，它能把多个元素放在一组里，对 `<g>` 标记的样式和渲染会作用到这个分组内的所有元素上。组内的所有元素都会继承 `<g>` 标记上的所有属性。用 `<g>` 定义的分组还可以使用 `<use>` 进行复制使用。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n<body>\n    <svg width=\"400\" height=\"300\" style=\"border: 1px solid #999;\">\n        <g style=\"fill: red; stroke: #090; stroke-width: 2;\">\n            <circle r=\"40\" cx=\"180\" cy=\"140\"></circle>\n            <rect x=\"30\" y=\"40\" width=\"100\" height=\"50\"></rect>\n            <rect x=\"230\" y=\"40\" width=\"100\" height=\"50\"></rect>\n        </g>\n    </svg>\n</body>\n</html>\n```\n\n### 复制 （`<use>`）\n说明：`<use>` 能从 SVG 文档内部取出一个节点，克隆它，并把它输出到别处。子元素能继承来自 `<use>` 样式\n\n```html\n<html lang=\"en\">\n\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n\n<body>\n    <svg width=\"400\" height=\"300\" style=\"border: 1px solid #999;\">\n        <defs>\n            <g id=\"shape\" style=\"fill: inherit; stroke: #090; stroke-width: 2;\">\n                <circle r=\"40\" cx=\"180\" cy=\"140\"></circle>\n                <rect x=\"30\" y=\"40\" width=\"100\" height=\"50\"></rect>\n                <rect x=\"230\" y=\"40\" width=\"100\" height=\"50\"></rect>\n            </g>\n        </defs>\n\n        <text y=\"15\">图形1</text>\n        <use x=\"20\" y=\"20\" xlink:href=\"#shape\" style=\"fill: #009;\"></use>\n    </svg>\n</body>\n\n</html>\n```\n\n### 模板（<symbol>）\n`<symbol>` 的作用是定义一个图像模板，使用 `<use>` 标记实例化它，然后在 SVG 文档中反复使用。`<symbol>` 本身不会输出任何图像，只有使用 `<use>` 实例化后才会显示。\n\n```html\n<html lang=\"en\">\n\n<head>\n    <title>SVG 学习</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n    </style>\n</head>\n\n<body>\n    <svg width=\"400\" height=\"300\" style=\"border: 1px solid #999;\">\n        <!-- symbol definition  NEVER draw -->\n        <symbol id=\"sym01\" viewBox=\"0 0 150 110\">\n            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke-width=\"8\" stroke=\"red\" fill=\"red\" />\n            <circle cx=\"90\" cy=\"60\" r=\"40\" stroke-width=\"8\" stroke=\"green\" fill=\"white\" />\n        </symbol>\n    \n        <!-- actual drawing by \"use\" element -->\n        <use xlink:href=\"#sym01\" x=\"0\" y=\"0\" width=\"100\" height=\"50\" />\n        <use xlink:href=\"#sym01\" x=\"0\" y=\"50\" width=\"75\" height=\"38\" />\n        <use xlink:href=\"#sym01\" x=\"0\" y=\"100\" width=\"50\" height=\"25\" />\n    </svg>\n</body>\n\n</html>\n```","slug":"SVG/SVG 基础元素","published":1,"updated":"2021-04-28T02:34:15.251Z","_id":"cko0u1270000ay26r1p80go36","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"SVG-基础元素\"><a href=\"#SVG-基础元素\" class=\"headerlink\" title=\"SVG 基础元素\"></a>SVG 基础元素</h1><h2 id=\"SVG-元素通用属性\"><a href=\"#SVG-元素通用属性\" class=\"headerlink\" title=\"SVG 元素通用属性\"></a>SVG 元素通用属性</h2><ul>\n<li>transform 对基础图形进行变换处理（与 CSS3 中的 transform 属性有点不一致）<ul>\n<li>平移 <code>translate(50,30)</code> </li>\n<li>缩放 <code>scale(2)</code> </li>\n<li>旋转 <code>rotate(30)</code> </li>\n<li>翻转 <code>skewX()</code>、<code>skewY(10)</code></li>\n</ul>\n</li>\n<li>fill：填充色</li>\n<li>stroke：定义图形、文本等的边线颜色</li>\n</ul>\n<p>说明：支持 hover 伪类、id、class 等</p>\n<h2 id=\"SVG-元素通用-CSS-样式\"><a href=\"#SVG-元素通用-CSS-样式\" class=\"headerlink\" title=\"SVG 元素通用 CSS 样式\"></a>SVG 元素通用 CSS 样式</h2><ul>\n<li>display: 控制元素是否可见（<code>inline</code>、<code>none</code>，所有元素的初始值都为 <code>inline</code>）</li>\n<li>fill:  填充色</li>\n<li>fill-opacity: 填充色透明度</li>\n<li>stroke: 定义图形、文本等的边线颜色</li>\n<li>stroke-width: 定义图形、文字边线的宽度 </li>\n<li>stroke-opacity: 定义图形、文字边线的透明度</li>\n<li>stroke-linecap：用来定义开放式路径的端点的样式（<code>butt</code>、<code>round</code>、<code>square</code>）</li>\n<li>stroke-linejoin：用来控制两个线段之间的联合是如何绘制</li>\n<li>stroke-dasharray：用来创建虚线（如 <code>stroke-dasharray=&quot;5,5&quot;</code>）</li>\n<li>fill-rule：判断路径的哪一侧在路径所构成的形状的内部，从而判断fill属性如何给这个形状上色</li>\n</ul>\n<p><img src=\"https://mdn.mozillademos.org/files/730/SVG_Stroke_Linecap_Example.png\" alt=\"stroke-linecap 属性\"><br><img src=\"https://mdn.mozillademos.org/files/731/SVG_Stroke_Linejoin_Example.png\" alt=\"stroke-linejoin 属性\"></p>\n<h2 id=\"文本\"><a href=\"#文本\" class=\"headerlink\" title=\"文本\"></a>文本</h2><h3 id=\"SVG-文本-（-lt-text-gt-）\"><a href=\"#SVG-文本-（-lt-text-gt-）\" class=\"headerlink\" title=\"SVG 文本 （&lt;text&gt;）\"></a>SVG 文本 （<code>&lt;text&gt;</code>）</h3><p>说明：用来定义文字文本，例如 <code>&lt;text&gt;测试文字&lt;/text&gt;</code></p>\n<p>支持的样式：<code>font-family</code>，<code>font-style</code>，<code>font-weight</code>，<code>font-variant</code>，<code>font-stretch</code>，<code>font-size</code>，<code>font-size-adjust</code>，<code>kerning</code>，<code>letter-spacing</code>，<code>word-spacing</code> 和 <code>text-decoration</code></p>\n<h3 id=\"内联文本-（-lt-tspan-gt-）\"><a href=\"#内联文本-（-lt-tspan-gt-）\" class=\"headerlink\" title=\"内联文本  （&lt;tspan&gt;）\"></a>内联文本  （<code>&lt;tspan&gt;</code>）</h3><p>说明：嵌套在 <code>&lt;text&gt;</code> 标签中，与 <code>&lt;span&gt;</code> 标签类似，用于定义一组文本的样式</p>\n<h3 id=\"文本路径-（-lt-textPath-gt-）\"><a href=\"#文本路径-（-lt-textPath-gt-）\" class=\"headerlink\" title=\"文本路径  （&lt;textPath&gt;）\"></a>文本路径  （<code>&lt;textPath&gt;</code>）</h3><p>说明：嵌套在 <code>&lt;text&gt;</code> 标签中，使文字按照指定路径排列，放在 <code>&lt;text&gt;</code> 标记内部引用预定义的 <code>&lt;path&gt;</code>，引用时，使用 <code>xlink:href</code> 属性指明需要引用的路径的 ID</p>\n<h3 id=\"链接-（-lt-a-gt-）\"><a href=\"#链接-（-lt-a-gt-）\" class=\"headerlink\" title=\"链接 （&lt;a&gt;）\"></a>链接 （<code>&lt;a&gt;</code>）</h3><p>说明：创建一个 SVG 元素链接</p>\n<ul>\n<li>xlink:show</li>\n<li>xlink:actuate</li>\n<li>xlink:href</li>\n<li>target</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;800&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #aaa;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;MyPath&quot;</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M 100 200 </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     C 200 100 300   0 400 100</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     C 500 200 600 300 700 200</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     C 800 100 900 100 900 100&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;https://www.baidu.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #009; cursor: pointer;&quot;</span>&gt;</span> 打开百度<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: red;&quot;</span> <span class=\"attr\">transform</span>=<span class=\"string\">&quot;rotate(30 20, 30)&quot;</span>&gt;</span></span><br><span class=\"line\">             Just test SVG! <span class=\"tag\">&lt;<span class=\"name\">tspan</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #0f0; font-size: 26px; font-style: italic;&quot;</span>&gt;</span>中国人民银行<span class=\"tag\">&lt;/<span class=\"name\">tspan</span>&gt;</span> nothing nothing nothing</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">textPath</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#MyPath&quot;</span>&gt;</span></span><br><span class=\"line\">                SVG 基本功能测试基本功能测试基本功能测试基本功能测试基本功能测试</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">textPath</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"基本图形\"><a href=\"#基本图形\" class=\"headerlink\" title=\"基本图形\"></a>基本图形</h2><h3 id=\"矩形（-lt-rect-gt-）\"><a href=\"#矩形（-lt-rect-gt-）\" class=\"headerlink\" title=\"矩形（&lt;rect&gt;）\"></a>矩形（<code>&lt;rect&gt;</code>）</h3><ul>\n<li>x: 元素距离左边的距离</li>\n<li>y: 元素距离上边的距离</li>\n<li>width: 元素的宽度</li>\n<li>height: 元素的高度</li>\n<li>rx: 矩形 X 轴方向的半径</li>\n<li>rx: 矩形 Y 轴方向的半径</li>\n</ul>\n<h3 id=\"圆形-（-lt-circle-gt-）\"><a href=\"#圆形-（-lt-circle-gt-）\" class=\"headerlink\" title=\"圆形 （&lt;circle&gt;）\"></a>圆形 （<code>&lt;circle&gt;</code>）</h3><ul>\n<li>cx: 圆心距离 Y 轴的距离</li>\n<li>cy: 圆心距离 X 轴的距离</li>\n<li>r: 圆的半径</li>\n</ul>\n<h3 id=\"椭圆（-lt-ellipse-gt-）\"><a href=\"#椭圆（-lt-ellipse-gt-）\" class=\"headerlink\" title=\"椭圆（&lt;ellipse&gt;）\"></a>椭圆（<code>&lt;ellipse&gt;</code>）</h3><ul>\n<li>cx: 圆心距离 Y 轴的距离</li>\n<li>cy: 圆心距离 X 轴的距离</li>\n<li>rx: 圆的 X 轴的半径</li>\n<li>ry: 圆的 Y 轴的半径</li>\n</ul>\n<h3 id=\"直线（-lt-line-gt-）\"><a href=\"#直线（-lt-line-gt-）\" class=\"headerlink\" title=\"直线（&lt;line&gt;）\"></a>直线（<code>&lt;line&gt;</code>）</h3><ul>\n<li>x1: X 轴方向的起点</li>\n<li>y1: Y 轴方向的起点</li>\n<li>x2: X 轴方向的终点</li>\n<li>y2: Y 轴方向的终点</li>\n</ul>\n<h3 id=\"折线-（-lt-polyline-gt-）\"><a href=\"#折线-（-lt-polyline-gt-）\" class=\"headerlink\" title=\"折线 （&lt;polyline&gt;）\"></a>折线 （<code>&lt;polyline&gt;</code>）</h3><ul>\n<li>points 属性里定义了各个点的坐标，x 和 y 坐标之间用逗号分别，多个坐标之间用空格分割<ul>\n<li>例如 <code>&lt;polyline points=&quot;3,3 10,40 50,100 20,150&quot;/&gt;</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"多边形-（-lt-polygen-gt-）\"><a href=\"#多边形-（-lt-polygen-gt-）\" class=\"headerlink\" title=\"多边形 （&lt;polygen&gt;）\"></a>多边形 （<code>&lt;polygen&gt;</code>）</h3><ul>\n<li>points 属性里定义了各个点的坐标，x 和 y 坐标之间用逗号分别，多个坐标之间用空格分割，并组成闭合的环形</li>\n</ul>\n<h3 id=\"路径-（-lt-path-gt-）\"><a href=\"#路径-（-lt-path-gt-）\" class=\"headerlink\" title=\"路径 （&lt;path&gt;）\"></a>路径 （<code>&lt;path&gt;</code>）</h3><ul>\n<li>d 用于定义一系列指令，例如 <code>&lt;path d=&quot;M150 0 L75 200 L225 200 Z&quot; /&gt;</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>参数</th>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>M</td>\n<td>x,y</td>\n<td>moveto</td>\n<td>移动到    移动虚拟画笔到指定的（x,y）坐标，仅移动不绘制</td>\n</tr>\n<tr>\n<td>m</td>\n<td>x,y</td>\n<td>moveto</td>\n<td>同M，但使用相对坐标</td>\n</tr>\n<tr>\n<td>L</td>\n<td>x,y</td>\n<td>lineto</td>\n<td>连直线到    从当前画笔所在位置绘制一条直线到指定的（x,y）坐标</td>\n</tr>\n<tr>\n<td>l</td>\n<td>x,y</td>\n<td>lineto</td>\n<td>同L，但使用相对坐标</td>\n</tr>\n<tr>\n<td>H</td>\n<td>x</td>\n<td>horizontal lineto</td>\n<td>水平连线到    绘制一条水平直线到参数指定的x坐标点，y坐标为画笔的y坐标</td>\n</tr>\n<tr>\n<td>h</td>\n<td>x</td>\n<td>horizontal lineto</td>\n<td>同H，但使用相对坐标</td>\n</tr>\n<tr>\n<td>V</td>\n<td>y</td>\n<td>vertical lineto</td>\n<td>垂直连线到    从当前位置绘制一条垂直直线到参数指定的y坐标</td>\n</tr>\n<tr>\n<td>v</td>\n<td>y</td>\n<td>vertical lineto</td>\n<td>同V，但使用相对坐标</td>\n</tr>\n<tr>\n<td>C</td>\n<td>x1,y1 x2,y2 x,y</td>\n<td>curveto 三次方贝塞尔曲线</td>\n<td>从当前画笔位置绘制一条三次贝兹曲线到参数（x,y）指定的坐标。x1，y1和x2,y2是曲线的开始和结束控制点，用于控制曲线的弧度</td>\n</tr>\n<tr>\n<td>c</td>\n<td>x1,y1 x2,y2 x,y</td>\n<td>curveto</td>\n<td>同C，但使用相对坐标</td>\n</tr>\n<tr>\n<td>S</td>\n<td>x2,y2 x,y</td>\n<td>shorthand</td>\n<td>平滑三次方贝塞尔曲线    从当前画笔位置绘制一条三次贝塞尔曲线到参数（x,y）指定的坐标。x2,y2是结束控制点。开始控制点和前一条曲线的结束控制点相同</td>\n</tr>\n<tr>\n<td>s</td>\n<td>x2,y2 x,y</td>\n<td>shorthand</td>\n<td>平滑三次方贝塞尔曲线    同S，但使用相对坐标</td>\n</tr>\n<tr>\n<td>Q</td>\n<td>x1,y1 x,y</td>\n<td>二次方贝塞尔曲线</td>\n<td>从当前画笔位置绘制一条二次方贝塞尔曲线到参数（x,y）指定的坐标。x1,y1是控制点，用于控制曲线的弧度</td>\n</tr>\n<tr>\n<td>q</td>\n<td>x1,y1 x,y</td>\n<td>二次方贝塞尔曲线</td>\n<td>同Q，但使用相对坐标</td>\n</tr>\n<tr>\n<td>T</td>\n<td>x,y</td>\n<td>平滑的二次贝塞尔曲线</td>\n<td>从当前画笔位置绘制一条二次贝塞尔曲线到参数（x,y）指定的坐标。控制点被假定为最后一次使用的控制点</td>\n</tr>\n<tr>\n<td>t</td>\n<td>x,y</td>\n<td>平滑的二次贝塞尔曲线</td>\n<td>同T，但使用相对坐标</td>\n</tr>\n<tr>\n<td>A</td>\n<td>rx,ry x-axis-rotation large-arc-flag,sweepflag x,y</td>\n<td>椭圆弧线</td>\n<td>从当前画笔位置开始绘制一条椭圆弧线到（x,y）指定的坐标。rx和ry分别为椭圆弧线水平和垂直方向上的半径。x-axis-rotation指定弧线绕x轴旋转的度数。它只在rx和ry的值不相同是有效果。large-arc-flag是大弧标志位，取值0或1，用于决定绘制大弧还是小弧。sweep-flag用于决定弧线绘制的方向</td>\n</tr>\n<tr>\n<td>a</td>\n<td>rx,ry x-axis-rotation large-arc-flag,sweepflag x,y</td>\n<td>椭圆弧线</td>\n<td>同A，但使用相对坐标</td>\n</tr>\n<tr>\n<td>Z</td>\n<td>无</td>\n<td>闭合路径</td>\n<td>从结束点绘制一条直线到开始点，闭合路径</td>\n</tr>\n<tr>\n<td>z</td>\n<td>无</td>\n<td>闭合路径</td>\n<td>同Z</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #999;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">rx</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">ry</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #009;stroke: #f00; stroke-width: 2; fill-opacity: 0.5; stroke-opacity: 5.2&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;290&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;60&quot;</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #0f0; fill-opacity: .4;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ellipse</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;150&quot;</span> <span class=\"attr\">rx</span>=<span class=\"string\">&quot;60&quot;</span> <span class=\"attr\">ry</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #900; stroke: #999; stroke-width: 3; stroke-opacity: .5;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">line</span> <span class=\"attr\">x1</span>=<span class=\"string\">&quot;240&quot;</span> <span class=\"attr\">y1</span>=<span class=\"string\">&quot;220&quot;</span> <span class=\"attr\">x2</span>=<span class=\"string\">&quot;395&quot;</span> <span class=\"attr\">y2</span>=<span class=\"string\">&quot;220&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;stroke: #333; stroke-width: 2;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">polyline</span> <span class=\"attr\">points</span>=<span class=\"string\">&quot;3,3 10,40 50,100 20,150 20,180 50,180 50,210 80,210 110,210&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill:none; stroke:#099; stroke-width: 1&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">polygon</span> <span class=\"attr\">points</span>=<span class=\"string\">&quot;110, 20 30, 40 80, 50&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #934;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">polygon</span> <span class=\"attr\">points</span>=<span class=\"string\">&quot;100,10 40,198 190,78 10,78 160,198&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M 175 200 l 150 0&quot;</span> <span class=\"attr\">stroke</span>=<span class=\"string\">&quot;green&quot;</span> <span class=\"attr\">stroke-width</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;none&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M 100 350 q 150 -300 300 0&quot;</span> <span class=\"attr\">stroke</span>=<span class=\"string\">&quot;blue&quot;</span> <span class=\"attr\">stroke-width</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;none&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结构元素\"><a href=\"#结构元素\" class=\"headerlink\" title=\"结构元素\"></a>结构元素</h2><h3 id=\"分组-（-lt-g-gt-）\"><a href=\"#分组-（-lt-g-gt-）\" class=\"headerlink\" title=\"分组 （&lt;g&gt;）\"></a>分组 （<code>&lt;g&gt;</code>）</h3><p>说明：<code>&lt;g&gt;</code> 用于分组，它能把多个元素放在一组里，对 <code>&lt;g&gt;</code> 标记的样式和渲染会作用到这个分组内的所有元素上。组内的所有元素都会继承 <code>&lt;g&gt;</code> 标记上的所有属性。用 <code>&lt;g&gt;</code> 定义的分组还可以使用 <code>&lt;use&gt;</code> 进行复制使用。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #999;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">g</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: red; stroke: #090; stroke-width: 2;&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;180&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;140&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">circle</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">rect</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;230&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">rect</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">g</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"复制-（-lt-use-gt-）\"><a href=\"#复制-（-lt-use-gt-）\" class=\"headerlink\" title=\"复制 （&lt;use&gt;）\"></a>复制 （<code>&lt;use&gt;</code>）</h3><p>说明：<code>&lt;use&gt;</code> 能从 SVG 文档内部取出一个节点，克隆它，并把它输出到别处。子元素能继承来自 <code>&lt;use&gt;</code> 样式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #999;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">g</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;shape&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: inherit; stroke: #090; stroke-width: 2;&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;180&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;140&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">circle</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">rect</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;230&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">rect</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">g</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;15&quot;</span>&gt;</span>图形1<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">use</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#shape&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #009;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">use</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板（）\"><a href=\"#模板（）\" class=\"headerlink\" title=\"模板（）\"></a>模板（<symbol>）</h3><p><code>&lt;symbol&gt;</code> 的作用是定义一个图像模板，使用 <code>&lt;use&gt;</code> 标记实例化它，然后在 SVG 文档中反复使用。<code>&lt;symbol&gt;</code> 本身不会输出任何图像，只有使用 <code>&lt;use&gt;</code> 实例化后才会显示。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #999;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- symbol definition  NEVER draw --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">symbol</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sym01&quot;</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">&quot;0 0 150 110&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">stroke-width</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">stroke</span>=<span class=\"string\">&quot;red&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;red&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;90&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;60&quot;</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">stroke-width</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">stroke</span>=<span class=\"string\">&quot;green&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;white&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">symbol</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- actual drawing by &quot;use&quot; element --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">use</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#sym01&quot;</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">use</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#sym01&quot;</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;75&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;38&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">use</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#sym01&quot;</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;25&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SVG-基础元素\"><a href=\"#SVG-基础元素\" class=\"headerlink\" title=\"SVG 基础元素\"></a>SVG 基础元素</h1><h2 id=\"SVG-元素通用属性\"><a href=\"#SVG-元素通用属性\" class=\"headerlink\" title=\"SVG 元素通用属性\"></a>SVG 元素通用属性</h2><ul>\n<li>transform 对基础图形进行变换处理（与 CSS3 中的 transform 属性有点不一致）<ul>\n<li>平移 <code>translate(50,30)</code> </li>\n<li>缩放 <code>scale(2)</code> </li>\n<li>旋转 <code>rotate(30)</code> </li>\n<li>翻转 <code>skewX()</code>、<code>skewY(10)</code></li>\n</ul>\n</li>\n<li>fill：填充色</li>\n<li>stroke：定义图形、文本等的边线颜色</li>\n</ul>\n<p>说明：支持 hover 伪类、id、class 等</p>\n<h2 id=\"SVG-元素通用-CSS-样式\"><a href=\"#SVG-元素通用-CSS-样式\" class=\"headerlink\" title=\"SVG 元素通用 CSS 样式\"></a>SVG 元素通用 CSS 样式</h2><ul>\n<li>display: 控制元素是否可见（<code>inline</code>、<code>none</code>，所有元素的初始值都为 <code>inline</code>）</li>\n<li>fill:  填充色</li>\n<li>fill-opacity: 填充色透明度</li>\n<li>stroke: 定义图形、文本等的边线颜色</li>\n<li>stroke-width: 定义图形、文字边线的宽度 </li>\n<li>stroke-opacity: 定义图形、文字边线的透明度</li>\n<li>stroke-linecap：用来定义开放式路径的端点的样式（<code>butt</code>、<code>round</code>、<code>square</code>）</li>\n<li>stroke-linejoin：用来控制两个线段之间的联合是如何绘制</li>\n<li>stroke-dasharray：用来创建虚线（如 <code>stroke-dasharray=&quot;5,5&quot;</code>）</li>\n<li>fill-rule：判断路径的哪一侧在路径所构成的形状的内部，从而判断fill属性如何给这个形状上色</li>\n</ul>\n<p><img src=\"https://mdn.mozillademos.org/files/730/SVG_Stroke_Linecap_Example.png\" alt=\"stroke-linecap 属性\"><br><img src=\"https://mdn.mozillademos.org/files/731/SVG_Stroke_Linejoin_Example.png\" alt=\"stroke-linejoin 属性\"></p>\n<h2 id=\"文本\"><a href=\"#文本\" class=\"headerlink\" title=\"文本\"></a>文本</h2><h3 id=\"SVG-文本-（-lt-text-gt-）\"><a href=\"#SVG-文本-（-lt-text-gt-）\" class=\"headerlink\" title=\"SVG 文本 （&lt;text&gt;）\"></a>SVG 文本 （<code>&lt;text&gt;</code>）</h3><p>说明：用来定义文字文本，例如 <code>&lt;text&gt;测试文字&lt;/text&gt;</code></p>\n<p>支持的样式：<code>font-family</code>，<code>font-style</code>，<code>font-weight</code>，<code>font-variant</code>，<code>font-stretch</code>，<code>font-size</code>，<code>font-size-adjust</code>，<code>kerning</code>，<code>letter-spacing</code>，<code>word-spacing</code> 和 <code>text-decoration</code></p>\n<h3 id=\"内联文本-（-lt-tspan-gt-）\"><a href=\"#内联文本-（-lt-tspan-gt-）\" class=\"headerlink\" title=\"内联文本  （&lt;tspan&gt;）\"></a>内联文本  （<code>&lt;tspan&gt;</code>）</h3><p>说明：嵌套在 <code>&lt;text&gt;</code> 标签中，与 <code>&lt;span&gt;</code> 标签类似，用于定义一组文本的样式</p>\n<h3 id=\"文本路径-（-lt-textPath-gt-）\"><a href=\"#文本路径-（-lt-textPath-gt-）\" class=\"headerlink\" title=\"文本路径  （&lt;textPath&gt;）\"></a>文本路径  （<code>&lt;textPath&gt;</code>）</h3><p>说明：嵌套在 <code>&lt;text&gt;</code> 标签中，使文字按照指定路径排列，放在 <code>&lt;text&gt;</code> 标记内部引用预定义的 <code>&lt;path&gt;</code>，引用时，使用 <code>xlink:href</code> 属性指明需要引用的路径的 ID</p>\n<h3 id=\"链接-（-lt-a-gt-）\"><a href=\"#链接-（-lt-a-gt-）\" class=\"headerlink\" title=\"链接 （&lt;a&gt;）\"></a>链接 （<code>&lt;a&gt;</code>）</h3><p>说明：创建一个 SVG 元素链接</p>\n<ul>\n<li>xlink:show</li>\n<li>xlink:actuate</li>\n<li>xlink:href</li>\n<li>target</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;800&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #aaa;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;MyPath&quot;</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M 100 200 </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     C 200 100 300   0 400 100</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     C 500 200 600 300 700 200</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     C 800 100 900 100 900 100&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;https://www.baidu.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #009; cursor: pointer;&quot;</span>&gt;</span> 打开百度<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: red;&quot;</span> <span class=\"attr\">transform</span>=<span class=\"string\">&quot;rotate(30 20, 30)&quot;</span>&gt;</span></span><br><span class=\"line\">             Just test SVG! <span class=\"tag\">&lt;<span class=\"name\">tspan</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #0f0; font-size: 26px; font-style: italic;&quot;</span>&gt;</span>中国人民银行<span class=\"tag\">&lt;/<span class=\"name\">tspan</span>&gt;</span> nothing nothing nothing</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">textPath</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#MyPath&quot;</span>&gt;</span></span><br><span class=\"line\">                SVG 基本功能测试基本功能测试基本功能测试基本功能测试基本功能测试</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">textPath</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"基本图形\"><a href=\"#基本图形\" class=\"headerlink\" title=\"基本图形\"></a>基本图形</h2><h3 id=\"矩形（-lt-rect-gt-）\"><a href=\"#矩形（-lt-rect-gt-）\" class=\"headerlink\" title=\"矩形（&lt;rect&gt;）\"></a>矩形（<code>&lt;rect&gt;</code>）</h3><ul>\n<li>x: 元素距离左边的距离</li>\n<li>y: 元素距离上边的距离</li>\n<li>width: 元素的宽度</li>\n<li>height: 元素的高度</li>\n<li>rx: 矩形 X 轴方向的半径</li>\n<li>rx: 矩形 Y 轴方向的半径</li>\n</ul>\n<h3 id=\"圆形-（-lt-circle-gt-）\"><a href=\"#圆形-（-lt-circle-gt-）\" class=\"headerlink\" title=\"圆形 （&lt;circle&gt;）\"></a>圆形 （<code>&lt;circle&gt;</code>）</h3><ul>\n<li>cx: 圆心距离 Y 轴的距离</li>\n<li>cy: 圆心距离 X 轴的距离</li>\n<li>r: 圆的半径</li>\n</ul>\n<h3 id=\"椭圆（-lt-ellipse-gt-）\"><a href=\"#椭圆（-lt-ellipse-gt-）\" class=\"headerlink\" title=\"椭圆（&lt;ellipse&gt;）\"></a>椭圆（<code>&lt;ellipse&gt;</code>）</h3><ul>\n<li>cx: 圆心距离 Y 轴的距离</li>\n<li>cy: 圆心距离 X 轴的距离</li>\n<li>rx: 圆的 X 轴的半径</li>\n<li>ry: 圆的 Y 轴的半径</li>\n</ul>\n<h3 id=\"直线（-lt-line-gt-）\"><a href=\"#直线（-lt-line-gt-）\" class=\"headerlink\" title=\"直线（&lt;line&gt;）\"></a>直线（<code>&lt;line&gt;</code>）</h3><ul>\n<li>x1: X 轴方向的起点</li>\n<li>y1: Y 轴方向的起点</li>\n<li>x2: X 轴方向的终点</li>\n<li>y2: Y 轴方向的终点</li>\n</ul>\n<h3 id=\"折线-（-lt-polyline-gt-）\"><a href=\"#折线-（-lt-polyline-gt-）\" class=\"headerlink\" title=\"折线 （&lt;polyline&gt;）\"></a>折线 （<code>&lt;polyline&gt;</code>）</h3><ul>\n<li>points 属性里定义了各个点的坐标，x 和 y 坐标之间用逗号分别，多个坐标之间用空格分割<ul>\n<li>例如 <code>&lt;polyline points=&quot;3,3 10,40 50,100 20,150&quot;/&gt;</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"多边形-（-lt-polygen-gt-）\"><a href=\"#多边形-（-lt-polygen-gt-）\" class=\"headerlink\" title=\"多边形 （&lt;polygen&gt;）\"></a>多边形 （<code>&lt;polygen&gt;</code>）</h3><ul>\n<li>points 属性里定义了各个点的坐标，x 和 y 坐标之间用逗号分别，多个坐标之间用空格分割，并组成闭合的环形</li>\n</ul>\n<h3 id=\"路径-（-lt-path-gt-）\"><a href=\"#路径-（-lt-path-gt-）\" class=\"headerlink\" title=\"路径 （&lt;path&gt;）\"></a>路径 （<code>&lt;path&gt;</code>）</h3><ul>\n<li>d 用于定义一系列指令，例如 <code>&lt;path d=&quot;M150 0 L75 200 L225 200 Z&quot; /&gt;</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>参数</th>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>M</td>\n<td>x,y</td>\n<td>moveto</td>\n<td>移动到    移动虚拟画笔到指定的（x,y）坐标，仅移动不绘制</td>\n</tr>\n<tr>\n<td>m</td>\n<td>x,y</td>\n<td>moveto</td>\n<td>同M，但使用相对坐标</td>\n</tr>\n<tr>\n<td>L</td>\n<td>x,y</td>\n<td>lineto</td>\n<td>连直线到    从当前画笔所在位置绘制一条直线到指定的（x,y）坐标</td>\n</tr>\n<tr>\n<td>l</td>\n<td>x,y</td>\n<td>lineto</td>\n<td>同L，但使用相对坐标</td>\n</tr>\n<tr>\n<td>H</td>\n<td>x</td>\n<td>horizontal lineto</td>\n<td>水平连线到    绘制一条水平直线到参数指定的x坐标点，y坐标为画笔的y坐标</td>\n</tr>\n<tr>\n<td>h</td>\n<td>x</td>\n<td>horizontal lineto</td>\n<td>同H，但使用相对坐标</td>\n</tr>\n<tr>\n<td>V</td>\n<td>y</td>\n<td>vertical lineto</td>\n<td>垂直连线到    从当前位置绘制一条垂直直线到参数指定的y坐标</td>\n</tr>\n<tr>\n<td>v</td>\n<td>y</td>\n<td>vertical lineto</td>\n<td>同V，但使用相对坐标</td>\n</tr>\n<tr>\n<td>C</td>\n<td>x1,y1 x2,y2 x,y</td>\n<td>curveto 三次方贝塞尔曲线</td>\n<td>从当前画笔位置绘制一条三次贝兹曲线到参数（x,y）指定的坐标。x1，y1和x2,y2是曲线的开始和结束控制点，用于控制曲线的弧度</td>\n</tr>\n<tr>\n<td>c</td>\n<td>x1,y1 x2,y2 x,y</td>\n<td>curveto</td>\n<td>同C，但使用相对坐标</td>\n</tr>\n<tr>\n<td>S</td>\n<td>x2,y2 x,y</td>\n<td>shorthand</td>\n<td>平滑三次方贝塞尔曲线    从当前画笔位置绘制一条三次贝塞尔曲线到参数（x,y）指定的坐标。x2,y2是结束控制点。开始控制点和前一条曲线的结束控制点相同</td>\n</tr>\n<tr>\n<td>s</td>\n<td>x2,y2 x,y</td>\n<td>shorthand</td>\n<td>平滑三次方贝塞尔曲线    同S，但使用相对坐标</td>\n</tr>\n<tr>\n<td>Q</td>\n<td>x1,y1 x,y</td>\n<td>二次方贝塞尔曲线</td>\n<td>从当前画笔位置绘制一条二次方贝塞尔曲线到参数（x,y）指定的坐标。x1,y1是控制点，用于控制曲线的弧度</td>\n</tr>\n<tr>\n<td>q</td>\n<td>x1,y1 x,y</td>\n<td>二次方贝塞尔曲线</td>\n<td>同Q，但使用相对坐标</td>\n</tr>\n<tr>\n<td>T</td>\n<td>x,y</td>\n<td>平滑的二次贝塞尔曲线</td>\n<td>从当前画笔位置绘制一条二次贝塞尔曲线到参数（x,y）指定的坐标。控制点被假定为最后一次使用的控制点</td>\n</tr>\n<tr>\n<td>t</td>\n<td>x,y</td>\n<td>平滑的二次贝塞尔曲线</td>\n<td>同T，但使用相对坐标</td>\n</tr>\n<tr>\n<td>A</td>\n<td>rx,ry x-axis-rotation large-arc-flag,sweepflag x,y</td>\n<td>椭圆弧线</td>\n<td>从当前画笔位置开始绘制一条椭圆弧线到（x,y）指定的坐标。rx和ry分别为椭圆弧线水平和垂直方向上的半径。x-axis-rotation指定弧线绕x轴旋转的度数。它只在rx和ry的值不相同是有效果。large-arc-flag是大弧标志位，取值0或1，用于决定绘制大弧还是小弧。sweep-flag用于决定弧线绘制的方向</td>\n</tr>\n<tr>\n<td>a</td>\n<td>rx,ry x-axis-rotation large-arc-flag,sweepflag x,y</td>\n<td>椭圆弧线</td>\n<td>同A，但使用相对坐标</td>\n</tr>\n<tr>\n<td>Z</td>\n<td>无</td>\n<td>闭合路径</td>\n<td>从结束点绘制一条直线到开始点，闭合路径</td>\n</tr>\n<tr>\n<td>z</td>\n<td>无</td>\n<td>闭合路径</td>\n<td>同Z</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #999;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">rx</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">ry</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #009;stroke: #f00; stroke-width: 2; fill-opacity: 0.5; stroke-opacity: 5.2&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;290&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;60&quot;</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #0f0; fill-opacity: .4;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ellipse</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;150&quot;</span> <span class=\"attr\">rx</span>=<span class=\"string\">&quot;60&quot;</span> <span class=\"attr\">ry</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #900; stroke: #999; stroke-width: 3; stroke-opacity: .5;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">line</span> <span class=\"attr\">x1</span>=<span class=\"string\">&quot;240&quot;</span> <span class=\"attr\">y1</span>=<span class=\"string\">&quot;220&quot;</span> <span class=\"attr\">x2</span>=<span class=\"string\">&quot;395&quot;</span> <span class=\"attr\">y2</span>=<span class=\"string\">&quot;220&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;stroke: #333; stroke-width: 2;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">polyline</span> <span class=\"attr\">points</span>=<span class=\"string\">&quot;3,3 10,40 50,100 20,150 20,180 50,180 50,210 80,210 110,210&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill:none; stroke:#099; stroke-width: 1&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">polygon</span> <span class=\"attr\">points</span>=<span class=\"string\">&quot;110, 20 30, 40 80, 50&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #934;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">polygon</span> <span class=\"attr\">points</span>=<span class=\"string\">&quot;100,10 40,198 190,78 10,78 160,198&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M 175 200 l 150 0&quot;</span> <span class=\"attr\">stroke</span>=<span class=\"string\">&quot;green&quot;</span> <span class=\"attr\">stroke-width</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;none&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M 100 350 q 150 -300 300 0&quot;</span> <span class=\"attr\">stroke</span>=<span class=\"string\">&quot;blue&quot;</span> <span class=\"attr\">stroke-width</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;none&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结构元素\"><a href=\"#结构元素\" class=\"headerlink\" title=\"结构元素\"></a>结构元素</h2><h3 id=\"分组-（-lt-g-gt-）\"><a href=\"#分组-（-lt-g-gt-）\" class=\"headerlink\" title=\"分组 （&lt;g&gt;）\"></a>分组 （<code>&lt;g&gt;</code>）</h3><p>说明：<code>&lt;g&gt;</code> 用于分组，它能把多个元素放在一组里，对 <code>&lt;g&gt;</code> 标记的样式和渲染会作用到这个分组内的所有元素上。组内的所有元素都会继承 <code>&lt;g&gt;</code> 标记上的所有属性。用 <code>&lt;g&gt;</code> 定义的分组还可以使用 <code>&lt;use&gt;</code> 进行复制使用。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #999;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">g</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: red; stroke: #090; stroke-width: 2;&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;180&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;140&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">circle</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">rect</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;230&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">rect</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">g</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"复制-（-lt-use-gt-）\"><a href=\"#复制-（-lt-use-gt-）\" class=\"headerlink\" title=\"复制 （&lt;use&gt;）\"></a>复制 （<code>&lt;use&gt;</code>）</h3><p>说明：<code>&lt;use&gt;</code> 能从 SVG 文档内部取出一个节点，克隆它，并把它输出到别处。子元素能继承来自 <code>&lt;use&gt;</code> 样式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #999;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">g</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;shape&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: inherit; stroke: #090; stroke-width: 2;&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;180&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;140&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">circle</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">rect</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;230&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">rect</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">g</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;15&quot;</span>&gt;</span>图形1<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">use</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#shape&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;fill: #009;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">use</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板（）\"><a href=\"#模板（）\" class=\"headerlink\" title=\"模板（）\"></a>模板（<symbol>）</h3><p><code>&lt;symbol&gt;</code> 的作用是定义一个图像模板，使用 <code>&lt;use&gt;</code> 标记实例化它，然后在 SVG 文档中反复使用。<code>&lt;symbol&gt;</code> 本身不会输出任何图像，只有使用 <code>&lt;use&gt;</code> 实例化后才会显示。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>SVG 学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        * &#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border: 1px solid #999;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- symbol definition  NEVER draw --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">symbol</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sym01&quot;</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">&quot;0 0 150 110&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">stroke-width</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">stroke</span>=<span class=\"string\">&quot;red&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;red&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">cx</span>=<span class=\"string\">&quot;90&quot;</span> <span class=\"attr\">cy</span>=<span class=\"string\">&quot;60&quot;</span> <span class=\"attr\">r</span>=<span class=\"string\">&quot;40&quot;</span> <span class=\"attr\">stroke-width</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">stroke</span>=<span class=\"string\">&quot;green&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;white&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">symbol</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- actual drawing by &quot;use&quot; element --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">use</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#sym01&quot;</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;50&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">use</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#sym01&quot;</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;75&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;38&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">use</span> <span class=\"attr\">xlink:href</span>=<span class=\"string\">&quot;#sym01&quot;</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;25&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"viewBox 与 preserveAspectRatio","date":"2021-03-23T16:00:00.000Z","_content":"\n# viewBox 与 preserveAspectRatio\n\n### 视窗（viewport） \n视窗是指一块 SVG 可见的区域\n\n如 `<svg width=\"500\" height=\"300\"></svg>` 定义了一个视区，宽 500 单位，高 300 单位（并没有指定是像素，也可以指定为 `em`、`rem` 等）\n\n当 `width` 、 `height` 如果是纯数字，使用的就是 “像素” 作为单位的，SVG 中的其他子元素也是相同的原理\n\n### 视图盒子（viewBox）\nviewBox 属性相当于给 svg 图像设置了一个选区，然后将这个选区填充到整个 svg 画布中，最后的看到的结果就是选区中的图像缩放后的结果。\n\n这个属性有四个值，分别为坐标系统中的x值，y值，宽度，高度，属性值之间用空格或者是逗号合开。\n\n实际上这 4 个值唯一的确定了一个矩形和矩形的位置，x值和y值是矩形左上角顶点的坐标，宽和高分别是矩形的宽和高，单位为像素，这个矩形就是上述的选区。\n\n```html\n<svg width=\"400\" height=\"300\" viewBox=\"0,0,40,30\" style=\"border:1px solid #cd0000;\">\n    <rect x=\"10\" y=\"5\" width=\"20\" height=\"15\" fill=\"#cd0000\"/>\n</svg>\n```\n\n### preserveAspectRatio\n`preserveAspectRatio=\"xMidYMid meet\"`\n\n* xMidYMid：表示 viewBox 如何与 viewport 对齐\n* meet：表示如何维持高宽比\n\n| 值 | 含义 |\n| --- | --- |\n|xMin |\tviewport 和 viewBox 左边对齐 |\n|xMid |\tviewport 和 viewBox  x 轴中心对齐 |\n|xMax |\tviewport 和 viewBox 右边对齐 |\n|YMin |\tviewport 和 viewBox 上边缘对齐 |\n|YMid |\tviewport 和 viewBox  y 轴中心点对齐 |\n|YMax |\tviewport 和 viewBox 下边缘对齐 |\n\n| 值 | 含义 |\n| --- | --- |\n|meet | 保持纵横比缩放 viewBox 适应 viewport |\n|slice | 保持纵横比同时比例小的方向放大填满 viewport |\n|none |\t 扭曲纵横比以充分适应 viewport |\n\n\t\n\t\n\t\n","source":"_posts/SVG/viewBox 与 preserveAspectRatio.md","raw":"---\ntitle: viewBox 与 preserveAspectRatio\ncategories: SVG\ntags: [SVG]\ndate: 2021-03-24\n---\n\n# viewBox 与 preserveAspectRatio\n\n### 视窗（viewport） \n视窗是指一块 SVG 可见的区域\n\n如 `<svg width=\"500\" height=\"300\"></svg>` 定义了一个视区，宽 500 单位，高 300 单位（并没有指定是像素，也可以指定为 `em`、`rem` 等）\n\n当 `width` 、 `height` 如果是纯数字，使用的就是 “像素” 作为单位的，SVG 中的其他子元素也是相同的原理\n\n### 视图盒子（viewBox）\nviewBox 属性相当于给 svg 图像设置了一个选区，然后将这个选区填充到整个 svg 画布中，最后的看到的结果就是选区中的图像缩放后的结果。\n\n这个属性有四个值，分别为坐标系统中的x值，y值，宽度，高度，属性值之间用空格或者是逗号合开。\n\n实际上这 4 个值唯一的确定了一个矩形和矩形的位置，x值和y值是矩形左上角顶点的坐标，宽和高分别是矩形的宽和高，单位为像素，这个矩形就是上述的选区。\n\n```html\n<svg width=\"400\" height=\"300\" viewBox=\"0,0,40,30\" style=\"border:1px solid #cd0000;\">\n    <rect x=\"10\" y=\"5\" width=\"20\" height=\"15\" fill=\"#cd0000\"/>\n</svg>\n```\n\n### preserveAspectRatio\n`preserveAspectRatio=\"xMidYMid meet\"`\n\n* xMidYMid：表示 viewBox 如何与 viewport 对齐\n* meet：表示如何维持高宽比\n\n| 值 | 含义 |\n| --- | --- |\n|xMin |\tviewport 和 viewBox 左边对齐 |\n|xMid |\tviewport 和 viewBox  x 轴中心对齐 |\n|xMax |\tviewport 和 viewBox 右边对齐 |\n|YMin |\tviewport 和 viewBox 上边缘对齐 |\n|YMid |\tviewport 和 viewBox  y 轴中心点对齐 |\n|YMax |\tviewport 和 viewBox 下边缘对齐 |\n\n| 值 | 含义 |\n| --- | --- |\n|meet | 保持纵横比缩放 viewBox 适应 viewport |\n|slice | 保持纵横比同时比例小的方向放大填满 viewport |\n|none |\t 扭曲纵横比以充分适应 viewport |\n\n\t\n\t\n\t\n","slug":"SVG/viewBox 与 preserveAspectRatio","published":1,"updated":"2021-04-28T02:34:28.817Z","_id":"cko0u1271000by26rfpmyg2k5","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"viewBox-与-preserveAspectRatio\"><a href=\"#viewBox-与-preserveAspectRatio\" class=\"headerlink\" title=\"viewBox 与 preserveAspectRatio\"></a>viewBox 与 preserveAspectRatio</h1><h3 id=\"视窗（viewport）\"><a href=\"#视窗（viewport）\" class=\"headerlink\" title=\"视窗（viewport）\"></a>视窗（viewport）</h3><p>视窗是指一块 SVG 可见的区域</p>\n<p>如 <code>&lt;svg width=&quot;500&quot; height=&quot;300&quot;&gt;&lt;/svg&gt;</code> 定义了一个视区，宽 500 单位，高 300 单位（并没有指定是像素，也可以指定为 <code>em</code>、<code>rem</code> 等）</p>\n<p>当 <code>width</code> 、 <code>height</code> 如果是纯数字，使用的就是 “像素” 作为单位的，SVG 中的其他子元素也是相同的原理</p>\n<h3 id=\"视图盒子（viewBox）\"><a href=\"#视图盒子（viewBox）\" class=\"headerlink\" title=\"视图盒子（viewBox）\"></a>视图盒子（viewBox）</h3><p>viewBox 属性相当于给 svg 图像设置了一个选区，然后将这个选区填充到整个 svg 画布中，最后的看到的结果就是选区中的图像缩放后的结果。</p>\n<p>这个属性有四个值，分别为坐标系统中的x值，y值，宽度，高度，属性值之间用空格或者是逗号合开。</p>\n<p>实际上这 4 个值唯一的确定了一个矩形和矩形的位置，x值和y值是矩形左上角顶点的坐标，宽和高分别是矩形的宽和高，单位为像素，这个矩形就是上述的选区。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">&quot;0,0,40,30&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border:1px solid #cd0000;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;#cd0000&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"preserveAspectRatio\"><a href=\"#preserveAspectRatio\" class=\"headerlink\" title=\"preserveAspectRatio\"></a>preserveAspectRatio</h3><p><code>preserveAspectRatio=&quot;xMidYMid meet&quot;</code></p>\n<ul>\n<li>xMidYMid：表示 viewBox 如何与 viewport 对齐</li>\n<li>meet：表示如何维持高宽比</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>xMin</td>\n<td>viewport 和 viewBox 左边对齐</td>\n</tr>\n<tr>\n<td>xMid</td>\n<td>viewport 和 viewBox  x 轴中心对齐</td>\n</tr>\n<tr>\n<td>xMax</td>\n<td>viewport 和 viewBox 右边对齐</td>\n</tr>\n<tr>\n<td>YMin</td>\n<td>viewport 和 viewBox 上边缘对齐</td>\n</tr>\n<tr>\n<td>YMid</td>\n<td>viewport 和 viewBox  y 轴中心点对齐</td>\n</tr>\n<tr>\n<td>YMax</td>\n<td>viewport 和 viewBox 下边缘对齐</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>meet</td>\n<td>保持纵横比缩放 viewBox 适应 viewport</td>\n</tr>\n<tr>\n<td>slice</td>\n<td>保持纵横比同时比例小的方向放大填满 viewport</td>\n</tr>\n<tr>\n<td>none</td>\n<td>扭曲纵横比以充分适应 viewport</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"viewBox-与-preserveAspectRatio\"><a href=\"#viewBox-与-preserveAspectRatio\" class=\"headerlink\" title=\"viewBox 与 preserveAspectRatio\"></a>viewBox 与 preserveAspectRatio</h1><h3 id=\"视窗（viewport）\"><a href=\"#视窗（viewport）\" class=\"headerlink\" title=\"视窗（viewport）\"></a>视窗（viewport）</h3><p>视窗是指一块 SVG 可见的区域</p>\n<p>如 <code>&lt;svg width=&quot;500&quot; height=&quot;300&quot;&gt;&lt;/svg&gt;</code> 定义了一个视区，宽 500 单位，高 300 单位（并没有指定是像素，也可以指定为 <code>em</code>、<code>rem</code> 等）</p>\n<p>当 <code>width</code> 、 <code>height</code> 如果是纯数字，使用的就是 “像素” 作为单位的，SVG 中的其他子元素也是相同的原理</p>\n<h3 id=\"视图盒子（viewBox）\"><a href=\"#视图盒子（viewBox）\" class=\"headerlink\" title=\"视图盒子（viewBox）\"></a>视图盒子（viewBox）</h3><p>viewBox 属性相当于给 svg 图像设置了一个选区，然后将这个选区填充到整个 svg 画布中，最后的看到的结果就是选区中的图像缩放后的结果。</p>\n<p>这个属性有四个值，分别为坐标系统中的x值，y值，宽度，高度，属性值之间用空格或者是逗号合开。</p>\n<p>实际上这 4 个值唯一的确定了一个矩形和矩形的位置，x值和y值是矩形左上角顶点的坐标，宽和高分别是矩形的宽和高，单位为像素，这个矩形就是上述的选区。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;300&quot;</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">&quot;0,0,40,30&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border:1px solid #cd0000;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rect</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">fill</span>=<span class=\"string\">&quot;#cd0000&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"preserveAspectRatio\"><a href=\"#preserveAspectRatio\" class=\"headerlink\" title=\"preserveAspectRatio\"></a>preserveAspectRatio</h3><p><code>preserveAspectRatio=&quot;xMidYMid meet&quot;</code></p>\n<ul>\n<li>xMidYMid：表示 viewBox 如何与 viewport 对齐</li>\n<li>meet：表示如何维持高宽比</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>xMin</td>\n<td>viewport 和 viewBox 左边对齐</td>\n</tr>\n<tr>\n<td>xMid</td>\n<td>viewport 和 viewBox  x 轴中心对齐</td>\n</tr>\n<tr>\n<td>xMax</td>\n<td>viewport 和 viewBox 右边对齐</td>\n</tr>\n<tr>\n<td>YMin</td>\n<td>viewport 和 viewBox 上边缘对齐</td>\n</tr>\n<tr>\n<td>YMid</td>\n<td>viewport 和 viewBox  y 轴中心点对齐</td>\n</tr>\n<tr>\n<td>YMax</td>\n<td>viewport 和 viewBox 下边缘对齐</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>meet</td>\n<td>保持纵横比缩放 viewBox 适应 viewport</td>\n</tr>\n<tr>\n<td>slice</td>\n<td>保持纵横比同时比例小的方向放大填满 viewport</td>\n</tr>\n<tr>\n<td>none</td>\n<td>扭曲纵横比以充分适应 viewport</td>\n</tr>\n</tbody></table>\n"},{"title":"Sass 基础语法","date":"2021-03-23T16:00:00.000Z","_content":"\n\n# 1、 FIS3 中集成 Sass\n\n## 1.1 插件安装\n\n* sass 编译 `npm i fis3-parser-node-sass -g`\n* 前缀添加 `npm i fis3-preprocessor-cssprefixer -g` 必须全局安装\n\n```javascript\nfis.match('*.scss', {\n    parser: fis.plugin('node-sass'),\n    rExt: 'css',\n    release: '$0'\n});\nfis.match('_*.scss', {\n    release: false\n});\nfis.match('*.scss', {\n    preprocessor: fis.plugin('cssprefixer', {\n        \"browsers\": [\"Android >= 2.1\", \"iOS >= 4\", \"ie >= 8\", \"firefox >= 15\"],\n        \"cascade\": true\n    })\n});\n```\n## 1.2 目录规范\n\n* base\n    * _reset.scss\n    * _typography.scss\n* helpers\n    * _function.scss\n    * _mixin.scss\n    * _variable.scss\n* components\n    * _header.scss\n    * _footer.scss\n    * _buttons.scss\n    * _cards.scss\n* layouts\n    * _responsive.scss\n* pages\n    * _page1.scss\n    * _page2.scss\n* lib\n    * bootstrap.scss\n    * font-awesome.scss\n* main.scss\n\n## 1.3 编码规范\n\n### 1.3.1 Sass 性能优化\n\n* 用 class 分类代替子代选择器\n* 建议用子选择器，而不是后代选择器，提高性能\n* 特殊类别选择属性选择器\n\n### 1.3.2 Sass 属性声明顺序\n\n* z-index, display\n* position, left, top, right, bottom\n* overflow, float, clear\n* margin, padding\n* background, border\n* font, text\n* scss 代码块应有的顺序\n\n### 1.3.2 Sass 使用规则\n\n* 当前选择器的样式属性\n* 父级选择器的伪类选择器 (`:first-letter`, `:hover`, `:active`)\n* 伪类元素 (`:before`、`:after`)\n* 父级选择器的声明样式 (`.selected`, `.active`, `.enlarged`)\n* 用 Sass 的上下文媒体查询\n* 子选择器作为最后的部分\n\n\n## 2、 Sass 语法说明\n\n### 2.1 后缀名\n\n* Sass文件后缀名可为 `.scss`、 `.sass`\n* 推荐使用 `.scss`，与 `css` 语法完全兼容\n* 不推荐使用 `.sass` 要求更严格，不能使用 `{}` 和 `;`\n\n### 2.2 文件导入\n\n* 可在 `Sass` 文件中导入 `Sass` 文件或 `css` 文件 （对于 `Sass` 文件可不写后缀名）\n* 基础文件以 _ 开头，如变量声明、混入等，（导入时可不写下划线）\n\n> 示例：\n> * `@import \"page/page1\"`\n> * `@import \"lib/bootstrap.css\"`\n\n\n### 2.3 变量\n\n* 使用 `$` 声明并使用变量\n* 变量可被覆盖（就近原则或在变量后面添加 `!default`）\n* 变量可为全局或局部 （在选择器外部声明、选择器内部声明）\n* 当变量为字符串时，可在类名、属性名中引用，如 `border-#{$variableName}`\n* 变量为 list 结构 （在 `$size: 18px 30px 34px` 使用 `nth($size, 1)` 调用）\n* 变量为 map 结构（使用 `@each $key, $value in $map` 调用）\n\n```scss\n$gray: #666 !default;\n$directory: top;\n$size: 18px 30px 34px;\n$heading: (h1: #0aa, h2: #cc0, h3: #b0b);\nbody {\n    color: #f00;\n    a {\n        font-size: nth($size, 1);\n        color: $gray;\n        border-#{$directory}: 1 px solid $gray;\n        &:hover {\n            $font-size: 40 px;\n            font-size: $font-size;\n        }\n    }\n    @each $head, $color in $heading {\n        #{$head} {\n            color: $color;\n        }\n    }\n}\n```\n\n### 2.4 嵌套\n\n* 可使用选择器嵌套、属性嵌套 （属性嵌套并没什么用）\n* `@at-root` 可跳出所有的上级选择器 （可同时对过个选择器操作）\n* `#{&}__modifer` 可实现 BEM 特性\n\n```scss\n// 编译前的 scss 文件\n.footer {\n    font-size: 16px;\n    @at-root #{&}__modifer {\n        color: #333\n    }\n    @at-root .nav & {\n        color: #f0f;\n    }\n    @at-root {\n        .child1 {\n            color: #f00;\n        }\n        .child2 {\n            color: #ff0;\n        }\n    }\n}\n```\n\n```scss\n// 编译后的 css 文件\n.footer {\n    font-size: 16px;\n}\n\n.footer__modifer {\n    color: #333;\n}\n\n.nav .footer {\n    color: #f0f;\n}\n\n.child1 {\n    color: #f00;\n}\n\n.child2 {\n    color: #ff0;\n}\n```\n\n### 2.4 占位选择器\n\n* 使用 `%` 声明占位选择器， 通过 `@extend` 调用占位选择器\n* 当占位选择器没被调用时，不会被解析出来 （推荐使用）\n* 占位选择器可以用其定义一些基础的样式文件\n\n```scss\n// 编译前的 scss 文件\n% my-sty {\n    color: #aaa;\n    font-size: 10px;\n}\n\n.child-1 {\n    @extend %my-sty;\n}\n```\n\n```scss\n// 编译后的 css 文件\n.child1 {\n    color: #aaa;\n    font-size: 10px;\n}\n```\n\n### 2.5 继承\n\n说明：继承是建立在语义化的关系上。当一个元素拥有的类（如 `.seriousError` ）表明它属于另一个类（如 `.error`），此时适合用继承\n\n* 使用 `%extend` 进行继承\n* 可以继承任何定义给单个元素的选择器，比如 `.special.cool`、`a:hover`\n\n```scss\n// 编译前\na:hover {\n    text-decoration: underline;\n}\n.hoverlink {\n    @extend a: hover;\n}\n```\n\n```scss\n// 编译后\na:hover, .hoverlink {\n  text-decoration: underline;\n}\n```\n\n```scss\n// 编译前\n.error {\n    border: 1px #f00;\n    background-color: #fdd;\n}\n.seriousError {\n    @extend .error;\n    border-width: 3px;\n}\n```\n\n```scss\n// 编译后\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n\n.seriousError {\n  border-width: 3px;\n}\n```\n\n```scss\n// 编译前\n.error {\n    border: 1px #f00;\n    background-color: #fdd;\n}\n.error.intrusion {\n    background-image: url(\"/image/hacked.png\");\n}\n.seriousError {\n    @extend .error;\n    border-width: 3px;\n}\n```\n\n```scss\n// 编译后\n.error, .seriousError {\n    border: 1px #f00;\n    background-color: #fdd;\n}\n.error.intrusion, .intrusion.seriousError {\n    background-image: url(\"/image/hacked.png\");\n}\n.seriousError {\n    border-width: 3px;\n}\n```\n\n### 2.6 混合\n\n说明：混合指令用于定义可重复的样式，避免使用无语义的 `class`，如 `.clearfix`、`.float-left`\n\n* 使用 `@mixin` 声明混合指令，通过` @include` 调用混合指令\n* 当混合没被调用时，不会被解析出来 （推荐使用）\n* 混合样式中也可以嵌套其他混合样式\n* 当混合为无参时，推荐使用占位选择器来实现\n\n```scss\n// 编译前的 scss 文件\n@mixin ellipsis ($width: 100px) {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: $width;\n}\n\n.text-ellipsis {\n    color: #0ff;\n    @include ellipsis;\n}\n\n.text2-ellipsis {\n    color: #999;\n    @include ellipsis($width: 300px);\n}\n```\n\n```scss\n// 编译后的 css 文件\n.text-ellipsis {\n    color: #0ff;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 100px;\n}\n\n.text2-ellipsis {\n    color: #999;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 300px;\n}\n```\n\n```scss\n// 编译前\n@mixin height-light {\n\tbackground: #fc0;\n}\n\n@mixin head-text {\n\tfont-size: 24px;\n}\n\n@mixin computed {\n\t@include height-light;\n\t@include head-text;\n}\n\nspan {\n\t@include computed\n}\n```\n\n```scss\n// 编译后\nspan {\n    background: #fc0;\n    font-size: 24px;\n}\n```\n\n### 2.7 函数\n\n* 使用 `@fuction funName (param) {}` 声明，通过 `funName()` 调用\n* 可使用 `sass` 自带的函数，如 `lighten()`、`darken()` 等\n\n```scss\n// 编译前的 scss 文件\n@function addSize ($size) {\n    $baseSize: 12px;\n    @return $baseSize+$size;\n}\n\n.link-1 {\n    $blue: #00A3CF;\n    font-size: addSize(10px);\n    color: darken($blue, 25%);\n}\n\n.link-2 {\n    $blue: #00A3CF;\n    font-size: addSize(10px);\n    color: lighten($blue, 20%);\n}\n```\n\n```scss\n// 编译后的 css 文件\n.link-1 {\n    font-size: 22px;\n    color: #003f50;\n}\n\n.link-2 {\n    font-size: 22px;\n    color: #36d4ff;\n}\n```\n\n### 2.8 其他\n\n* 运算 可对遍历、数值、像素、颜色等进行四则运算（操作符前后需要空格）\n* 三目运算 条件为真/假时，返回不同的值 （与函数有点类似）\n* `@if` 条件成立后执行 `{}` 内的语句\n* `@each` 遍历 `list` 变量、`map` 变量\n* `@for` 在指定数值范围内遍历\n\n```scss\n// sass 运算、 @if、三目运算 示例\n// 编译前的 scss 文件\n$hasSubMenu: true;\n$level: 2;\n.wrapper {\n    color: if($hasSubMenu, #f00, #00f);\n    @if $hasSubMenu {\n        background-image: url('/images/down-icon.jpg');\n    }\n    @if $level==2 {\n        height: 60px * 2;\n        background: #f0f;\n    }\n    @else if $level==3 {\n        height: 60px * 3;\n        background: #f00;\n    }\n}\n\n// 编译后的 css 文件\n.wrapper {\n    background-image: url(\"/images/down-icon.jpg\");\n    height: 120px;\n    color: #f00;\n    background: #f0f;\n}\n```\n\n```scss\n// @each 示例\n// 编译前的 scss 文件\n$animal-list: puma, sea-slug, egret;\n@each $animal in $animal-list {\n    .#{$animal}-icon {\n        background-image: url('/images/#{$animal}.png');\n    }\n}\n\n// 编译后的 css 文件\n.puma-icon {\n    background-image: url(\"/images/puma.png\");\n}\n\n.sea-slug-icon {\n    background-image: url(\"/images/sea-slug.png\");\n}\n\n.egret-icon {\n    background-image: url(\"/images/egret.png\");\n}\n```\n\n```scss\n// @for 示例\n// 编译前的 scss 文件\n@for $i from 1 to 4 {\n    .content-#{$i} {\n        font-size: {\n            font-size: 14px + $i * 2px;\n        }\n    }\n}\n\n// 编译后的 css 文件\n.content-1 {\n    font-size: 16px;\n}\n\n.content-2 {\n    font-size: 18px;\n}\n\n.content-3 {\n    font-size: 20px;\n}\n```","source":"_posts/Sass/Sass 基础语法.md","raw":"---\ntitle: Sass 基础语法\ncategories: [CSS, Sass]\ntags: [CSS, Sass]\ndate: 2021-03-24\n---\n\n\n# 1、 FIS3 中集成 Sass\n\n## 1.1 插件安装\n\n* sass 编译 `npm i fis3-parser-node-sass -g`\n* 前缀添加 `npm i fis3-preprocessor-cssprefixer -g` 必须全局安装\n\n```javascript\nfis.match('*.scss', {\n    parser: fis.plugin('node-sass'),\n    rExt: 'css',\n    release: '$0'\n});\nfis.match('_*.scss', {\n    release: false\n});\nfis.match('*.scss', {\n    preprocessor: fis.plugin('cssprefixer', {\n        \"browsers\": [\"Android >= 2.1\", \"iOS >= 4\", \"ie >= 8\", \"firefox >= 15\"],\n        \"cascade\": true\n    })\n});\n```\n## 1.2 目录规范\n\n* base\n    * _reset.scss\n    * _typography.scss\n* helpers\n    * _function.scss\n    * _mixin.scss\n    * _variable.scss\n* components\n    * _header.scss\n    * _footer.scss\n    * _buttons.scss\n    * _cards.scss\n* layouts\n    * _responsive.scss\n* pages\n    * _page1.scss\n    * _page2.scss\n* lib\n    * bootstrap.scss\n    * font-awesome.scss\n* main.scss\n\n## 1.3 编码规范\n\n### 1.3.1 Sass 性能优化\n\n* 用 class 分类代替子代选择器\n* 建议用子选择器，而不是后代选择器，提高性能\n* 特殊类别选择属性选择器\n\n### 1.3.2 Sass 属性声明顺序\n\n* z-index, display\n* position, left, top, right, bottom\n* overflow, float, clear\n* margin, padding\n* background, border\n* font, text\n* scss 代码块应有的顺序\n\n### 1.3.2 Sass 使用规则\n\n* 当前选择器的样式属性\n* 父级选择器的伪类选择器 (`:first-letter`, `:hover`, `:active`)\n* 伪类元素 (`:before`、`:after`)\n* 父级选择器的声明样式 (`.selected`, `.active`, `.enlarged`)\n* 用 Sass 的上下文媒体查询\n* 子选择器作为最后的部分\n\n\n## 2、 Sass 语法说明\n\n### 2.1 后缀名\n\n* Sass文件后缀名可为 `.scss`、 `.sass`\n* 推荐使用 `.scss`，与 `css` 语法完全兼容\n* 不推荐使用 `.sass` 要求更严格，不能使用 `{}` 和 `;`\n\n### 2.2 文件导入\n\n* 可在 `Sass` 文件中导入 `Sass` 文件或 `css` 文件 （对于 `Sass` 文件可不写后缀名）\n* 基础文件以 _ 开头，如变量声明、混入等，（导入时可不写下划线）\n\n> 示例：\n> * `@import \"page/page1\"`\n> * `@import \"lib/bootstrap.css\"`\n\n\n### 2.3 变量\n\n* 使用 `$` 声明并使用变量\n* 变量可被覆盖（就近原则或在变量后面添加 `!default`）\n* 变量可为全局或局部 （在选择器外部声明、选择器内部声明）\n* 当变量为字符串时，可在类名、属性名中引用，如 `border-#{$variableName}`\n* 变量为 list 结构 （在 `$size: 18px 30px 34px` 使用 `nth($size, 1)` 调用）\n* 变量为 map 结构（使用 `@each $key, $value in $map` 调用）\n\n```scss\n$gray: #666 !default;\n$directory: top;\n$size: 18px 30px 34px;\n$heading: (h1: #0aa, h2: #cc0, h3: #b0b);\nbody {\n    color: #f00;\n    a {\n        font-size: nth($size, 1);\n        color: $gray;\n        border-#{$directory}: 1 px solid $gray;\n        &:hover {\n            $font-size: 40 px;\n            font-size: $font-size;\n        }\n    }\n    @each $head, $color in $heading {\n        #{$head} {\n            color: $color;\n        }\n    }\n}\n```\n\n### 2.4 嵌套\n\n* 可使用选择器嵌套、属性嵌套 （属性嵌套并没什么用）\n* `@at-root` 可跳出所有的上级选择器 （可同时对过个选择器操作）\n* `#{&}__modifer` 可实现 BEM 特性\n\n```scss\n// 编译前的 scss 文件\n.footer {\n    font-size: 16px;\n    @at-root #{&}__modifer {\n        color: #333\n    }\n    @at-root .nav & {\n        color: #f0f;\n    }\n    @at-root {\n        .child1 {\n            color: #f00;\n        }\n        .child2 {\n            color: #ff0;\n        }\n    }\n}\n```\n\n```scss\n// 编译后的 css 文件\n.footer {\n    font-size: 16px;\n}\n\n.footer__modifer {\n    color: #333;\n}\n\n.nav .footer {\n    color: #f0f;\n}\n\n.child1 {\n    color: #f00;\n}\n\n.child2 {\n    color: #ff0;\n}\n```\n\n### 2.4 占位选择器\n\n* 使用 `%` 声明占位选择器， 通过 `@extend` 调用占位选择器\n* 当占位选择器没被调用时，不会被解析出来 （推荐使用）\n* 占位选择器可以用其定义一些基础的样式文件\n\n```scss\n// 编译前的 scss 文件\n% my-sty {\n    color: #aaa;\n    font-size: 10px;\n}\n\n.child-1 {\n    @extend %my-sty;\n}\n```\n\n```scss\n// 编译后的 css 文件\n.child1 {\n    color: #aaa;\n    font-size: 10px;\n}\n```\n\n### 2.5 继承\n\n说明：继承是建立在语义化的关系上。当一个元素拥有的类（如 `.seriousError` ）表明它属于另一个类（如 `.error`），此时适合用继承\n\n* 使用 `%extend` 进行继承\n* 可以继承任何定义给单个元素的选择器，比如 `.special.cool`、`a:hover`\n\n```scss\n// 编译前\na:hover {\n    text-decoration: underline;\n}\n.hoverlink {\n    @extend a: hover;\n}\n```\n\n```scss\n// 编译后\na:hover, .hoverlink {\n  text-decoration: underline;\n}\n```\n\n```scss\n// 编译前\n.error {\n    border: 1px #f00;\n    background-color: #fdd;\n}\n.seriousError {\n    @extend .error;\n    border-width: 3px;\n}\n```\n\n```scss\n// 编译后\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n\n.seriousError {\n  border-width: 3px;\n}\n```\n\n```scss\n// 编译前\n.error {\n    border: 1px #f00;\n    background-color: #fdd;\n}\n.error.intrusion {\n    background-image: url(\"/image/hacked.png\");\n}\n.seriousError {\n    @extend .error;\n    border-width: 3px;\n}\n```\n\n```scss\n// 编译后\n.error, .seriousError {\n    border: 1px #f00;\n    background-color: #fdd;\n}\n.error.intrusion, .intrusion.seriousError {\n    background-image: url(\"/image/hacked.png\");\n}\n.seriousError {\n    border-width: 3px;\n}\n```\n\n### 2.6 混合\n\n说明：混合指令用于定义可重复的样式，避免使用无语义的 `class`，如 `.clearfix`、`.float-left`\n\n* 使用 `@mixin` 声明混合指令，通过` @include` 调用混合指令\n* 当混合没被调用时，不会被解析出来 （推荐使用）\n* 混合样式中也可以嵌套其他混合样式\n* 当混合为无参时，推荐使用占位选择器来实现\n\n```scss\n// 编译前的 scss 文件\n@mixin ellipsis ($width: 100px) {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: $width;\n}\n\n.text-ellipsis {\n    color: #0ff;\n    @include ellipsis;\n}\n\n.text2-ellipsis {\n    color: #999;\n    @include ellipsis($width: 300px);\n}\n```\n\n```scss\n// 编译后的 css 文件\n.text-ellipsis {\n    color: #0ff;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 100px;\n}\n\n.text2-ellipsis {\n    color: #999;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 300px;\n}\n```\n\n```scss\n// 编译前\n@mixin height-light {\n\tbackground: #fc0;\n}\n\n@mixin head-text {\n\tfont-size: 24px;\n}\n\n@mixin computed {\n\t@include height-light;\n\t@include head-text;\n}\n\nspan {\n\t@include computed\n}\n```\n\n```scss\n// 编译后\nspan {\n    background: #fc0;\n    font-size: 24px;\n}\n```\n\n### 2.7 函数\n\n* 使用 `@fuction funName (param) {}` 声明，通过 `funName()` 调用\n* 可使用 `sass` 自带的函数，如 `lighten()`、`darken()` 等\n\n```scss\n// 编译前的 scss 文件\n@function addSize ($size) {\n    $baseSize: 12px;\n    @return $baseSize+$size;\n}\n\n.link-1 {\n    $blue: #00A3CF;\n    font-size: addSize(10px);\n    color: darken($blue, 25%);\n}\n\n.link-2 {\n    $blue: #00A3CF;\n    font-size: addSize(10px);\n    color: lighten($blue, 20%);\n}\n```\n\n```scss\n// 编译后的 css 文件\n.link-1 {\n    font-size: 22px;\n    color: #003f50;\n}\n\n.link-2 {\n    font-size: 22px;\n    color: #36d4ff;\n}\n```\n\n### 2.8 其他\n\n* 运算 可对遍历、数值、像素、颜色等进行四则运算（操作符前后需要空格）\n* 三目运算 条件为真/假时，返回不同的值 （与函数有点类似）\n* `@if` 条件成立后执行 `{}` 内的语句\n* `@each` 遍历 `list` 变量、`map` 变量\n* `@for` 在指定数值范围内遍历\n\n```scss\n// sass 运算、 @if、三目运算 示例\n// 编译前的 scss 文件\n$hasSubMenu: true;\n$level: 2;\n.wrapper {\n    color: if($hasSubMenu, #f00, #00f);\n    @if $hasSubMenu {\n        background-image: url('/images/down-icon.jpg');\n    }\n    @if $level==2 {\n        height: 60px * 2;\n        background: #f0f;\n    }\n    @else if $level==3 {\n        height: 60px * 3;\n        background: #f00;\n    }\n}\n\n// 编译后的 css 文件\n.wrapper {\n    background-image: url(\"/images/down-icon.jpg\");\n    height: 120px;\n    color: #f00;\n    background: #f0f;\n}\n```\n\n```scss\n// @each 示例\n// 编译前的 scss 文件\n$animal-list: puma, sea-slug, egret;\n@each $animal in $animal-list {\n    .#{$animal}-icon {\n        background-image: url('/images/#{$animal}.png');\n    }\n}\n\n// 编译后的 css 文件\n.puma-icon {\n    background-image: url(\"/images/puma.png\");\n}\n\n.sea-slug-icon {\n    background-image: url(\"/images/sea-slug.png\");\n}\n\n.egret-icon {\n    background-image: url(\"/images/egret.png\");\n}\n```\n\n```scss\n// @for 示例\n// 编译前的 scss 文件\n@for $i from 1 to 4 {\n    .content-#{$i} {\n        font-size: {\n            font-size: 14px + $i * 2px;\n        }\n    }\n}\n\n// 编译后的 css 文件\n.content-1 {\n    font-size: 16px;\n}\n\n.content-2 {\n    font-size: 18px;\n}\n\n.content-3 {\n    font-size: 20px;\n}\n```","slug":"Sass/Sass 基础语法","published":1,"updated":"2021-04-28T02:28:59.023Z","_id":"cko0u90va0000qd6r78a92gmp","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"1、-FIS3-中集成-Sass\"><a href=\"#1、-FIS3-中集成-Sass\" class=\"headerlink\" title=\"1、 FIS3 中集成 Sass\"></a>1、 FIS3 中集成 Sass</h1><h2 id=\"1-1-插件安装\"><a href=\"#1-1-插件安装\" class=\"headerlink\" title=\"1.1 插件安装\"></a>1.1 插件安装</h2><ul>\n<li>sass 编译 <code>npm i fis3-parser-node-sass -g</code></li>\n<li>前缀添加 <code>npm i fis3-preprocessor-cssprefixer -g</code> 必须全局安装</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fis.match(<span class=\"string\">&#x27;*.scss&#x27;</span>, &#123;</span><br><span class=\"line\">    parser: fis.plugin(<span class=\"string\">&#x27;node-sass&#x27;</span>),</span><br><span class=\"line\">    rExt: <span class=\"string\">&#x27;css&#x27;</span>,</span><br><span class=\"line\">    release: <span class=\"string\">&#x27;$0&#x27;</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">fis.match(<span class=\"string\">&#x27;_*.scss&#x27;</span>, &#123;</span><br><span class=\"line\">    release: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">fis.match(<span class=\"string\">&#x27;*.scss&#x27;</span>, &#123;</span><br><span class=\"line\">    preprocessor: fis.plugin(<span class=\"string\">&#x27;cssprefixer&#x27;</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;browsers&quot;</span>: [<span class=\"string\">&quot;Android &gt;= 2.1&quot;</span>, <span class=\"string\">&quot;iOS &gt;= 4&quot;</span>, <span class=\"string\">&quot;ie &gt;= 8&quot;</span>, <span class=\"string\">&quot;firefox &gt;= 15&quot;</span>],</span><br><span class=\"line\">        <span class=\"string\">&quot;cascade&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-目录规范\"><a href=\"#1-2-目录规范\" class=\"headerlink\" title=\"1.2 目录规范\"></a>1.2 目录规范</h2><ul>\n<li>base<ul>\n<li>_reset.scss</li>\n<li>_typography.scss</li>\n</ul>\n</li>\n<li>helpers<ul>\n<li>_function.scss</li>\n<li>_mixin.scss</li>\n<li>_variable.scss</li>\n</ul>\n</li>\n<li>components<ul>\n<li>_header.scss</li>\n<li>_footer.scss</li>\n<li>_buttons.scss</li>\n<li>_cards.scss</li>\n</ul>\n</li>\n<li>layouts<ul>\n<li>_responsive.scss</li>\n</ul>\n</li>\n<li>pages<ul>\n<li>_page1.scss</li>\n<li>_page2.scss</li>\n</ul>\n</li>\n<li>lib<ul>\n<li>bootstrap.scss</li>\n<li>font-awesome.scss</li>\n</ul>\n</li>\n<li>main.scss</li>\n</ul>\n<h2 id=\"1-3-编码规范\"><a href=\"#1-3-编码规范\" class=\"headerlink\" title=\"1.3 编码规范\"></a>1.3 编码规范</h2><h3 id=\"1-3-1-Sass-性能优化\"><a href=\"#1-3-1-Sass-性能优化\" class=\"headerlink\" title=\"1.3.1 Sass 性能优化\"></a>1.3.1 Sass 性能优化</h3><ul>\n<li>用 class 分类代替子代选择器</li>\n<li>建议用子选择器，而不是后代选择器，提高性能</li>\n<li>特殊类别选择属性选择器</li>\n</ul>\n<h3 id=\"1-3-2-Sass-属性声明顺序\"><a href=\"#1-3-2-Sass-属性声明顺序\" class=\"headerlink\" title=\"1.3.2 Sass 属性声明顺序\"></a>1.3.2 Sass 属性声明顺序</h3><ul>\n<li>z-index, display</li>\n<li>position, left, top, right, bottom</li>\n<li>overflow, float, clear</li>\n<li>margin, padding</li>\n<li>background, border</li>\n<li>font, text</li>\n<li>scss 代码块应有的顺序</li>\n</ul>\n<h3 id=\"1-3-2-Sass-使用规则\"><a href=\"#1-3-2-Sass-使用规则\" class=\"headerlink\" title=\"1.3.2 Sass 使用规则\"></a>1.3.2 Sass 使用规则</h3><ul>\n<li>当前选择器的样式属性</li>\n<li>父级选择器的伪类选择器 (<code>:first-letter</code>, <code>:hover</code>, <code>:active</code>)</li>\n<li>伪类元素 (<code>:before</code>、<code>:after</code>)</li>\n<li>父级选择器的声明样式 (<code>.selected</code>, <code>.active</code>, <code>.enlarged</code>)</li>\n<li>用 Sass 的上下文媒体查询</li>\n<li>子选择器作为最后的部分</li>\n</ul>\n<h2 id=\"2、-Sass-语法说明\"><a href=\"#2、-Sass-语法说明\" class=\"headerlink\" title=\"2、 Sass 语法说明\"></a>2、 Sass 语法说明</h2><h3 id=\"2-1-后缀名\"><a href=\"#2-1-后缀名\" class=\"headerlink\" title=\"2.1 后缀名\"></a>2.1 后缀名</h3><ul>\n<li>Sass文件后缀名可为 <code>.scss</code>、 <code>.sass</code></li>\n<li>推荐使用 <code>.scss</code>，与 <code>css</code> 语法完全兼容</li>\n<li>不推荐使用 <code>.sass</code> 要求更严格，不能使用 <code>&#123;&#125;</code> 和 <code>;</code></li>\n</ul>\n<h3 id=\"2-2-文件导入\"><a href=\"#2-2-文件导入\" class=\"headerlink\" title=\"2.2 文件导入\"></a>2.2 文件导入</h3><ul>\n<li>可在 <code>Sass</code> 文件中导入 <code>Sass</code> 文件或 <code>css</code> 文件 （对于 <code>Sass</code> 文件可不写后缀名）</li>\n<li>基础文件以 _ 开头，如变量声明、混入等，（导入时可不写下划线）</li>\n</ul>\n<blockquote>\n<p>示例：</p>\n<ul>\n<li><code>@import &quot;page/page1&quot;</code></li>\n<li><code>@import &quot;lib/bootstrap.css&quot;</code></li>\n</ul>\n</blockquote>\n<h3 id=\"2-3-变量\"><a href=\"#2-3-变量\" class=\"headerlink\" title=\"2.3 变量\"></a>2.3 变量</h3><ul>\n<li>使用 <code>$</code> 声明并使用变量</li>\n<li>变量可被覆盖（就近原则或在变量后面添加 <code>!default</code>）</li>\n<li>变量可为全局或局部 （在选择器外部声明、选择器内部声明）</li>\n<li>当变量为字符串时，可在类名、属性名中引用，如 <code>border-#&#123;$variableName&#125;</code></li>\n<li>变量为 list 结构 （在 <code>$size: 18px 30px 34px</code> 使用 <code>nth($size, 1)</code> 调用）</li>\n<li>变量为 map 结构（使用 <code>@each $key, $value in $map</code> 调用）</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$gray</span>: <span class=\"number\">#666</span> !default;</span><br><span class=\"line\"><span class=\"variable\">$directory</span>: top;</span><br><span class=\"line\"><span class=\"variable\">$size</span>: <span class=\"number\">18px</span> <span class=\"number\">30px</span> <span class=\"number\">34px</span>;</span><br><span class=\"line\"><span class=\"variable\">$heading</span>: (h1: <span class=\"number\">#0aa</span>, h2: <span class=\"number\">#cc0</span>, h3: <span class=\"number\">#b0b</span>);</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: nth(<span class=\"variable\">$size</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: <span class=\"variable\">$gray</span>;</span><br><span class=\"line\">        <span class=\"attribute\">border</span>-#&#123;<span class=\"variable\">$directory</span>&#125;: <span class=\"number\">1</span> px solid <span class=\"variable\">$gray</span>;</span><br><span class=\"line\">        &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$font-size</span>: <span class=\"number\">40</span> px;</span><br><span class=\"line\">            <span class=\"attribute\">font-size</span>: <span class=\"variable\">$font-size</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@each</span> <span class=\"variable\">$head</span>, <span class=\"variable\">$color</span> in <span class=\"variable\">$heading</span> &#123;</span><br><span class=\"line\">        #&#123;<span class=\"variable\">$head</span>&#125; &#123;</span><br><span class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-嵌套\"><a href=\"#2-4-嵌套\" class=\"headerlink\" title=\"2.4 嵌套\"></a>2.4 嵌套</h3><ul>\n<li>可使用选择器嵌套、属性嵌套 （属性嵌套并没什么用）</li>\n<li><code>@at-root</code> 可跳出所有的上级选择器 （可同时对过个选择器操作）</li>\n<li><code>#&#123;&amp;&#125;__modifer</code> 可实现 BEM 特性</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.footer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">    <span class=\"keyword\">@at-root</span> #&#123;&amp;&#125;__modifer &#123;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: <span class=\"number\">#333</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @at-root .nav &amp; &#123;</span><br><span class=\"line\">        color: <span class=\"number\">#f0f</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@at-root</span> &#123;</span><br><span class=\"line\">        <span class=\"selector-class\">.child1</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"selector-class\">.child2</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"number\">#ff0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.footer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.footer__modifer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-class\">.footer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#f0f</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.child1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.child2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ff0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-占位选择器\"><a href=\"#2-4-占位选择器\" class=\"headerlink\" title=\"2.4 占位选择器\"></a>2.4 占位选择器</h3><ul>\n<li>使用 <code>%</code> 声明占位选择器， 通过 <code>@extend</code> 调用占位选择器</li>\n<li>当占位选择器没被调用时，不会被解析出来 （推荐使用）</li>\n<li>占位选择器可以用其定义一些基础的样式文件</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\">% my-sty &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#aaa</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.child-1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> %my-sty;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.child1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#aaa</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-5-继承\"><a href=\"#2-5-继承\" class=\"headerlink\" title=\"2.5 继承\"></a>2.5 继承</h3><p>说明：继承是建立在语义化的关系上。当一个元素拥有的类（如 <code>.seriousError</code> ）表明它属于另一个类（如 <code>.error</code>），此时适合用继承</p>\n<ul>\n<li>使用 <code>%extend</code> 进行继承</li>\n<li>可以继承任何定义给单个元素的选择器，比如 <code>.special.cool</code>、<code>a:hover</code></li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> <span class=\"attribute\">a</span>: <span class=\"attribute\">hover</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前</span></span><br><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后</span></span><br><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前</span></span><br><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/image/hacked.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后</span></span><br><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span>, <span class=\"selector-class\">.intrusion</span><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/image/hacked.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-6-混合\"><a href=\"#2-6-混合\" class=\"headerlink\" title=\"2.6 混合\"></a>2.6 混合</h3><p>说明：混合指令用于定义可重复的样式，避免使用无语义的 <code>class</code>，如 <code>.clearfix</code>、<code>.float-left</code></p>\n<ul>\n<li>使用 <code>@mixin</code> 声明混合指令，通过<code> @include</code> 调用混合指令</li>\n<li>当混合没被调用时，不会被解析出来 （推荐使用）</li>\n<li>混合样式中也可以嵌套其他混合样式</li>\n<li>当混合为无参时，推荐使用占位选择器来实现</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> ellipsis (<span class=\"variable\">$width</span>: <span class=\"number\">100px</span>) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.text-ellipsis</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#0ff</span>;</span><br><span class=\"line\">    <span class=\"keyword\">@include</span> ellipsis;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.text2-ellipsis</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</span><br><span class=\"line\">    <span class=\"keyword\">@include</span> ellipsis(<span class=\"variable\">$width</span>: <span class=\"number\">300px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.text-ellipsis</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#0ff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.text2-ellipsis</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> height-light &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#fc0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> head-text &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> computed &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">@include</span> height-light;</span><br><span class=\"line\">\t<span class=\"keyword\">@include</span> head-text;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">@include</span> computed</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后</span></span><br><span class=\"line\"><span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fc0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-7-函数\"><a href=\"#2-7-函数\" class=\"headerlink\" title=\"2.7 函数\"></a>2.7 函数</h3><ul>\n<li>使用 <code>@fuction funName (param) &#123;&#125;</code> 声明，通过 <code>funName()</code> 调用</li>\n<li>可使用 <code>sass</code> 自带的函数，如 <code>lighten()</code>、<code>darken()</code> 等</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"keyword\">@function</span> addSize (<span class=\"variable\">$size</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$baseSize</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">    <span class=\"keyword\">@return</span> <span class=\"variable\">$baseSize</span>+<span class=\"variable\">$size</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-1</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$blue</span>: <span class=\"number\">#00A3CF</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: addSize(<span class=\"number\">10px</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: darken(<span class=\"variable\">$blue</span>, <span class=\"number\">25%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-2</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$blue</span>: <span class=\"number\">#00A3CF</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: addSize(<span class=\"number\">10px</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: lighten(<span class=\"variable\">$blue</span>, <span class=\"number\">20%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.link-1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#003f50</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#36d4ff</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-8-其他\"><a href=\"#2-8-其他\" class=\"headerlink\" title=\"2.8 其他\"></a>2.8 其他</h3><ul>\n<li>运算 可对遍历、数值、像素、颜色等进行四则运算（操作符前后需要空格）</li>\n<li>三目运算 条件为真/假时，返回不同的值 （与函数有点类似）</li>\n<li><code>@if</code> 条件成立后执行 <code>&#123;&#125;</code> 内的语句</li>\n<li><code>@each</code> 遍历 <code>list</code> 变量、<code>map</code> 变量</li>\n<li><code>@for</code> 在指定数值范围内遍历</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// sass 运算、 @if、三目运算 示例</span></span><br><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"variable\">$hasSubMenu</span>: true;</span><br><span class=\"line\"><span class=\"variable\">$level</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: if(<span class=\"variable\">$hasSubMenu</span>, <span class=\"number\">#f00</span>, <span class=\"number\">#00f</span>);</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> <span class=\"variable\">$hasSubMenu</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&#x27;/images/down-icon.jpg&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> <span class=\"variable\">$level</span>==<span class=\"number\">2</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">60px</span> * <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: <span class=\"number\">#f0f</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@else</span> if <span class=\"variable\">$level</span>==<span class=\"number\">3</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">60px</span> * <span class=\"number\">3</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/images/down-icon.jpg&quot;</span>);</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#f0f</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @each 示例</span></span><br><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"variable\">$animal-list</span>: puma, sea-slug, egret;</span><br><span class=\"line\"><span class=\"keyword\">@each</span> <span class=\"variable\">$animal</span> in <span class=\"variable\">$animal-list</span> &#123;</span><br><span class=\"line\">    .#&#123;<span class=\"variable\">$animal</span>&#125;-<span class=\"attribute\">icon</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&#x27;/images/#&#123;$animal&#125;.png&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.puma-icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/images/puma.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.sea-slug-icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/images/sea-slug.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.egret-icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/images/egret.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @for 示例</span></span><br><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> to <span class=\"number\">4</span> &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.content-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: &#123;</span><br><span class=\"line\">            font-size: <span class=\"number\">14px</span> + <span class=\"variable\">$i</span> * <span class=\"number\">2px</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.content-1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content-2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content-3</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1、-FIS3-中集成-Sass\"><a href=\"#1、-FIS3-中集成-Sass\" class=\"headerlink\" title=\"1、 FIS3 中集成 Sass\"></a>1、 FIS3 中集成 Sass</h1><h2 id=\"1-1-插件安装\"><a href=\"#1-1-插件安装\" class=\"headerlink\" title=\"1.1 插件安装\"></a>1.1 插件安装</h2><ul>\n<li>sass 编译 <code>npm i fis3-parser-node-sass -g</code></li>\n<li>前缀添加 <code>npm i fis3-preprocessor-cssprefixer -g</code> 必须全局安装</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fis.match(<span class=\"string\">&#x27;*.scss&#x27;</span>, &#123;</span><br><span class=\"line\">    parser: fis.plugin(<span class=\"string\">&#x27;node-sass&#x27;</span>),</span><br><span class=\"line\">    rExt: <span class=\"string\">&#x27;css&#x27;</span>,</span><br><span class=\"line\">    release: <span class=\"string\">&#x27;$0&#x27;</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">fis.match(<span class=\"string\">&#x27;_*.scss&#x27;</span>, &#123;</span><br><span class=\"line\">    release: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">fis.match(<span class=\"string\">&#x27;*.scss&#x27;</span>, &#123;</span><br><span class=\"line\">    preprocessor: fis.plugin(<span class=\"string\">&#x27;cssprefixer&#x27;</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;browsers&quot;</span>: [<span class=\"string\">&quot;Android &gt;= 2.1&quot;</span>, <span class=\"string\">&quot;iOS &gt;= 4&quot;</span>, <span class=\"string\">&quot;ie &gt;= 8&quot;</span>, <span class=\"string\">&quot;firefox &gt;= 15&quot;</span>],</span><br><span class=\"line\">        <span class=\"string\">&quot;cascade&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-目录规范\"><a href=\"#1-2-目录规范\" class=\"headerlink\" title=\"1.2 目录规范\"></a>1.2 目录规范</h2><ul>\n<li>base<ul>\n<li>_reset.scss</li>\n<li>_typography.scss</li>\n</ul>\n</li>\n<li>helpers<ul>\n<li>_function.scss</li>\n<li>_mixin.scss</li>\n<li>_variable.scss</li>\n</ul>\n</li>\n<li>components<ul>\n<li>_header.scss</li>\n<li>_footer.scss</li>\n<li>_buttons.scss</li>\n<li>_cards.scss</li>\n</ul>\n</li>\n<li>layouts<ul>\n<li>_responsive.scss</li>\n</ul>\n</li>\n<li>pages<ul>\n<li>_page1.scss</li>\n<li>_page2.scss</li>\n</ul>\n</li>\n<li>lib<ul>\n<li>bootstrap.scss</li>\n<li>font-awesome.scss</li>\n</ul>\n</li>\n<li>main.scss</li>\n</ul>\n<h2 id=\"1-3-编码规范\"><a href=\"#1-3-编码规范\" class=\"headerlink\" title=\"1.3 编码规范\"></a>1.3 编码规范</h2><h3 id=\"1-3-1-Sass-性能优化\"><a href=\"#1-3-1-Sass-性能优化\" class=\"headerlink\" title=\"1.3.1 Sass 性能优化\"></a>1.3.1 Sass 性能优化</h3><ul>\n<li>用 class 分类代替子代选择器</li>\n<li>建议用子选择器，而不是后代选择器，提高性能</li>\n<li>特殊类别选择属性选择器</li>\n</ul>\n<h3 id=\"1-3-2-Sass-属性声明顺序\"><a href=\"#1-3-2-Sass-属性声明顺序\" class=\"headerlink\" title=\"1.3.2 Sass 属性声明顺序\"></a>1.3.2 Sass 属性声明顺序</h3><ul>\n<li>z-index, display</li>\n<li>position, left, top, right, bottom</li>\n<li>overflow, float, clear</li>\n<li>margin, padding</li>\n<li>background, border</li>\n<li>font, text</li>\n<li>scss 代码块应有的顺序</li>\n</ul>\n<h3 id=\"1-3-2-Sass-使用规则\"><a href=\"#1-3-2-Sass-使用规则\" class=\"headerlink\" title=\"1.3.2 Sass 使用规则\"></a>1.3.2 Sass 使用规则</h3><ul>\n<li>当前选择器的样式属性</li>\n<li>父级选择器的伪类选择器 (<code>:first-letter</code>, <code>:hover</code>, <code>:active</code>)</li>\n<li>伪类元素 (<code>:before</code>、<code>:after</code>)</li>\n<li>父级选择器的声明样式 (<code>.selected</code>, <code>.active</code>, <code>.enlarged</code>)</li>\n<li>用 Sass 的上下文媒体查询</li>\n<li>子选择器作为最后的部分</li>\n</ul>\n<h2 id=\"2、-Sass-语法说明\"><a href=\"#2、-Sass-语法说明\" class=\"headerlink\" title=\"2、 Sass 语法说明\"></a>2、 Sass 语法说明</h2><h3 id=\"2-1-后缀名\"><a href=\"#2-1-后缀名\" class=\"headerlink\" title=\"2.1 后缀名\"></a>2.1 后缀名</h3><ul>\n<li>Sass文件后缀名可为 <code>.scss</code>、 <code>.sass</code></li>\n<li>推荐使用 <code>.scss</code>，与 <code>css</code> 语法完全兼容</li>\n<li>不推荐使用 <code>.sass</code> 要求更严格，不能使用 <code>&#123;&#125;</code> 和 <code>;</code></li>\n</ul>\n<h3 id=\"2-2-文件导入\"><a href=\"#2-2-文件导入\" class=\"headerlink\" title=\"2.2 文件导入\"></a>2.2 文件导入</h3><ul>\n<li>可在 <code>Sass</code> 文件中导入 <code>Sass</code> 文件或 <code>css</code> 文件 （对于 <code>Sass</code> 文件可不写后缀名）</li>\n<li>基础文件以 _ 开头，如变量声明、混入等，（导入时可不写下划线）</li>\n</ul>\n<blockquote>\n<p>示例：</p>\n<ul>\n<li><code>@import &quot;page/page1&quot;</code></li>\n<li><code>@import &quot;lib/bootstrap.css&quot;</code></li>\n</ul>\n</blockquote>\n<h3 id=\"2-3-变量\"><a href=\"#2-3-变量\" class=\"headerlink\" title=\"2.3 变量\"></a>2.3 变量</h3><ul>\n<li>使用 <code>$</code> 声明并使用变量</li>\n<li>变量可被覆盖（就近原则或在变量后面添加 <code>!default</code>）</li>\n<li>变量可为全局或局部 （在选择器外部声明、选择器内部声明）</li>\n<li>当变量为字符串时，可在类名、属性名中引用，如 <code>border-#&#123;$variableName&#125;</code></li>\n<li>变量为 list 结构 （在 <code>$size: 18px 30px 34px</code> 使用 <code>nth($size, 1)</code> 调用）</li>\n<li>变量为 map 结构（使用 <code>@each $key, $value in $map</code> 调用）</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$gray</span>: <span class=\"number\">#666</span> !default;</span><br><span class=\"line\"><span class=\"variable\">$directory</span>: top;</span><br><span class=\"line\"><span class=\"variable\">$size</span>: <span class=\"number\">18px</span> <span class=\"number\">30px</span> <span class=\"number\">34px</span>;</span><br><span class=\"line\"><span class=\"variable\">$heading</span>: (h1: <span class=\"number\">#0aa</span>, h2: <span class=\"number\">#cc0</span>, h3: <span class=\"number\">#b0b</span>);</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: nth(<span class=\"variable\">$size</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: <span class=\"variable\">$gray</span>;</span><br><span class=\"line\">        <span class=\"attribute\">border</span>-#&#123;<span class=\"variable\">$directory</span>&#125;: <span class=\"number\">1</span> px solid <span class=\"variable\">$gray</span>;</span><br><span class=\"line\">        &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$font-size</span>: <span class=\"number\">40</span> px;</span><br><span class=\"line\">            <span class=\"attribute\">font-size</span>: <span class=\"variable\">$font-size</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@each</span> <span class=\"variable\">$head</span>, <span class=\"variable\">$color</span> in <span class=\"variable\">$heading</span> &#123;</span><br><span class=\"line\">        #&#123;<span class=\"variable\">$head</span>&#125; &#123;</span><br><span class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-嵌套\"><a href=\"#2-4-嵌套\" class=\"headerlink\" title=\"2.4 嵌套\"></a>2.4 嵌套</h3><ul>\n<li>可使用选择器嵌套、属性嵌套 （属性嵌套并没什么用）</li>\n<li><code>@at-root</code> 可跳出所有的上级选择器 （可同时对过个选择器操作）</li>\n<li><code>#&#123;&amp;&#125;__modifer</code> 可实现 BEM 特性</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.footer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">    <span class=\"keyword\">@at-root</span> #&#123;&amp;&#125;__modifer &#123;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: <span class=\"number\">#333</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @at-root .nav &amp; &#123;</span><br><span class=\"line\">        color: <span class=\"number\">#f0f</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@at-root</span> &#123;</span><br><span class=\"line\">        <span class=\"selector-class\">.child1</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"selector-class\">.child2</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"number\">#ff0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.footer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.footer__modifer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-class\">.footer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#f0f</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.child1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.child2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ff0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-占位选择器\"><a href=\"#2-4-占位选择器\" class=\"headerlink\" title=\"2.4 占位选择器\"></a>2.4 占位选择器</h3><ul>\n<li>使用 <code>%</code> 声明占位选择器， 通过 <code>@extend</code> 调用占位选择器</li>\n<li>当占位选择器没被调用时，不会被解析出来 （推荐使用）</li>\n<li>占位选择器可以用其定义一些基础的样式文件</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\">% my-sty &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#aaa</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.child-1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> %my-sty;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.child1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#aaa</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-5-继承\"><a href=\"#2-5-继承\" class=\"headerlink\" title=\"2.5 继承\"></a>2.5 继承</h3><p>说明：继承是建立在语义化的关系上。当一个元素拥有的类（如 <code>.seriousError</code> ）表明它属于另一个类（如 <code>.error</code>），此时适合用继承</p>\n<ul>\n<li>使用 <code>%extend</code> 进行继承</li>\n<li>可以继承任何定义给单个元素的选择器，比如 <code>.special.cool</code>、<code>a:hover</code></li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> <span class=\"attribute\">a</span>: <span class=\"attribute\">hover</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前</span></span><br><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后</span></span><br><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前</span></span><br><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/image/hacked.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后</span></span><br><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span>, <span class=\"selector-class\">.intrusion</span><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/image/hacked.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-6-混合\"><a href=\"#2-6-混合\" class=\"headerlink\" title=\"2.6 混合\"></a>2.6 混合</h3><p>说明：混合指令用于定义可重复的样式，避免使用无语义的 <code>class</code>，如 <code>.clearfix</code>、<code>.float-left</code></p>\n<ul>\n<li>使用 <code>@mixin</code> 声明混合指令，通过<code> @include</code> 调用混合指令</li>\n<li>当混合没被调用时，不会被解析出来 （推荐使用）</li>\n<li>混合样式中也可以嵌套其他混合样式</li>\n<li>当混合为无参时，推荐使用占位选择器来实现</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> ellipsis (<span class=\"variable\">$width</span>: <span class=\"number\">100px</span>) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.text-ellipsis</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#0ff</span>;</span><br><span class=\"line\">    <span class=\"keyword\">@include</span> ellipsis;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.text2-ellipsis</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</span><br><span class=\"line\">    <span class=\"keyword\">@include</span> ellipsis(<span class=\"variable\">$width</span>: <span class=\"number\">300px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.text-ellipsis</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#0ff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.text2-ellipsis</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> height-light &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#fc0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> head-text &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> computed &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">@include</span> height-light;</span><br><span class=\"line\">\t<span class=\"keyword\">@include</span> head-text;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">@include</span> computed</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后</span></span><br><span class=\"line\"><span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fc0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-7-函数\"><a href=\"#2-7-函数\" class=\"headerlink\" title=\"2.7 函数\"></a>2.7 函数</h3><ul>\n<li>使用 <code>@fuction funName (param) &#123;&#125;</code> 声明，通过 <code>funName()</code> 调用</li>\n<li>可使用 <code>sass</code> 自带的函数，如 <code>lighten()</code>、<code>darken()</code> 等</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"keyword\">@function</span> addSize (<span class=\"variable\">$size</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$baseSize</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">    <span class=\"keyword\">@return</span> <span class=\"variable\">$baseSize</span>+<span class=\"variable\">$size</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-1</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$blue</span>: <span class=\"number\">#00A3CF</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: addSize(<span class=\"number\">10px</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: darken(<span class=\"variable\">$blue</span>, <span class=\"number\">25%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-2</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$blue</span>: <span class=\"number\">#00A3CF</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: addSize(<span class=\"number\">10px</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: lighten(<span class=\"variable\">$blue</span>, <span class=\"number\">20%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.link-1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#003f50</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#36d4ff</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-8-其他\"><a href=\"#2-8-其他\" class=\"headerlink\" title=\"2.8 其他\"></a>2.8 其他</h3><ul>\n<li>运算 可对遍历、数值、像素、颜色等进行四则运算（操作符前后需要空格）</li>\n<li>三目运算 条件为真/假时，返回不同的值 （与函数有点类似）</li>\n<li><code>@if</code> 条件成立后执行 <code>&#123;&#125;</code> 内的语句</li>\n<li><code>@each</code> 遍历 <code>list</code> 变量、<code>map</code> 变量</li>\n<li><code>@for</code> 在指定数值范围内遍历</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// sass 运算、 @if、三目运算 示例</span></span><br><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"variable\">$hasSubMenu</span>: true;</span><br><span class=\"line\"><span class=\"variable\">$level</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: if(<span class=\"variable\">$hasSubMenu</span>, <span class=\"number\">#f00</span>, <span class=\"number\">#00f</span>);</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> <span class=\"variable\">$hasSubMenu</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&#x27;/images/down-icon.jpg&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> <span class=\"variable\">$level</span>==<span class=\"number\">2</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">60px</span> * <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: <span class=\"number\">#f0f</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@else</span> if <span class=\"variable\">$level</span>==<span class=\"number\">3</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">60px</span> * <span class=\"number\">3</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/images/down-icon.jpg&quot;</span>);</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#f0f</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @each 示例</span></span><br><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"variable\">$animal-list</span>: puma, sea-slug, egret;</span><br><span class=\"line\"><span class=\"keyword\">@each</span> <span class=\"variable\">$animal</span> in <span class=\"variable\">$animal-list</span> &#123;</span><br><span class=\"line\">    .#&#123;<span class=\"variable\">$animal</span>&#125;-<span class=\"attribute\">icon</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&#x27;/images/#&#123;$animal&#125;.png&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.puma-icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/images/puma.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.sea-slug-icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/images/sea-slug.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.egret-icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">&quot;/images/egret.png&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @for 示例</span></span><br><span class=\"line\"><span class=\"comment\">// 编译前的 scss 文件</span></span><br><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> to <span class=\"number\">4</span> &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.content-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: &#123;</span><br><span class=\"line\">            font-size: <span class=\"number\">14px</span> + <span class=\"variable\">$i</span> * <span class=\"number\">2px</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编译后的 css 文件</span></span><br><span class=\"line\"><span class=\"selector-class\">.content-1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content-2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content-3</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Sass 技巧篇","date":"2021-03-23T16:00:00.000Z","_content":"\n### 数据类型\n\n* 数字，1, 2, 13, 10px\n* 字符串，有引号字符串与无引号字符串，\"foo\", 'bar', baz\n* 颜色，blue, #04a3f9, rgba(255,0,0,0.5)\n* 布尔型，true, false\n* 空值，null\n* 数组 (list)，用空格或逗号作分隔符，1.5em 1em 0 2em, Helvetica, Arial, sans-serif\n* maps, 相当于 JavaScript 的 object，(key1: value1, key2: value2)","source":"_posts/Sass/Sass 技巧篇.md","raw":"---\ntitle: Sass 技巧篇\ncategories: [CSS, Sass]\ntags: [CSS, Sass]\ndate: 2021-03-24\n---\n\n### 数据类型\n\n* 数字，1, 2, 13, 10px\n* 字符串，有引号字符串与无引号字符串，\"foo\", 'bar', baz\n* 颜色，blue, #04a3f9, rgba(255,0,0,0.5)\n* 布尔型，true, false\n* 空值，null\n* 数组 (list)，用空格或逗号作分隔符，1.5em 1em 0 2em, Helvetica, Arial, sans-serif\n* maps, 相当于 JavaScript 的 object，(key1: value1, key2: value2)","slug":"Sass/Sass 技巧篇","published":1,"updated":"2021-04-28T02:29:04.442Z","_id":"cko0u90vb0001qd6racbyegrg","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><ul>\n<li>数字，1, 2, 13, 10px</li>\n<li>字符串，有引号字符串与无引号字符串，”foo”, ‘bar’, baz</li>\n<li>颜色，blue, #04a3f9, rgba(255,0,0,0.5)</li>\n<li>布尔型，true, false</li>\n<li>空值，null</li>\n<li>数组 (list)，用空格或逗号作分隔符，1.5em 1em 0 2em, Helvetica, Arial, sans-serif</li>\n<li>maps, 相当于 JavaScript 的 object，(key1: value1, key2: value2)</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><ul>\n<li>数字，1, 2, 13, 10px</li>\n<li>字符串，有引号字符串与无引号字符串，”foo”, ‘bar’, baz</li>\n<li>颜色，blue, #04a3f9, rgba(255,0,0,0.5)</li>\n<li>布尔型，true, false</li>\n<li>空值，null</li>\n<li>数组 (list)，用空格或逗号作分隔符，1.5em 1em 0 2em, Helvetica, Arial, sans-serif</li>\n<li>maps, 相当于 JavaScript 的 object，(key1: value1, key2: value2)</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cknzv6w1m0001k96rg3qx2ppq","category_id":"cknzv6w1r0004k96rdmqy7j2w","_id":"cknzv6w1w000ck96rdtas9x92"},{"post_id":"cknzv6w1p0003k96r9yzq6wkz","category_id":"cknzv6w1v0009k96r0mfugf2t","_id":"cknzv6w1x000fk96r16uf7wtv"},{"post_id":"cknzv6w1s0006k96rbptn0mat","category_id":"cknzv6w1w000dk96ran5f33h4","_id":"cknzv6w1y000kk96r8luz8prq"},{"post_id":"cknzv6w1t0007k96radz85m4b","category_id":"cknzv6w1x000gk96r8iesg836","_id":"cknzv6w1z000nk96rank5ev6z"},{"post_id":"cknzv6w1u0008k96r93999udz","category_id":"cknzv6w1x000gk96r8iesg836","_id":"cknzv6w20000qk96r79albuve"},{"post_id":"cknzz6sd50000is6retamarf5","category_id":"cknzv6w1v0009k96r0mfugf2t","_id":"cknzz7fxm0003is6ra84iahy8"},{"post_id":"cknzzafoq0006is6r4yqgew4n","category_id":"cknzv6w1v0009k96r0mfugf2t","_id":"cknzzb9qq0008is6rbb4t59gc"},{"post_id":"cko0u90va0000qd6r78a92gmp","category_id":"cknzv6w1r0004k96rdmqy7j2w","_id":"cko0u90vl0008qd6r8pzlbwqg"},{"post_id":"cko0u90va0000qd6r78a92gmp","category_id":"cko0u90vi0003qd6r8qcj50o4","_id":"cko0u90vl000aqd6rdr832fke"},{"post_id":"cko0u90vb0001qd6racbyegrg","category_id":"cknzv6w1r0004k96rdmqy7j2w","_id":"cko0u90vl000cqd6r19tw83il"},{"post_id":"cko0u90vb0001qd6racbyegrg","category_id":"cko0u90vi0003qd6r8qcj50o4","_id":"cko0u90vl000dqd6rfu7jaifp"},{"post_id":"cko0u126x0007y26rd2ureszb","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0ubc1y0003rm6rc3sx0401"},{"post_id":"cko0u126r0005y26rgqlb1smt","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0ubhr30005rm6r3gs7e48o"},{"post_id":"cko0u126o0002y26rhjen63xs","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0ubmdc0007rm6rgiek816g"},{"post_id":"cko0u126z0009y26rczb7c1qt","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0ubpb10009rm6r34zfd428"},{"post_id":"cko0u126v0006y26rh569bcq9","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0ubsqd000brm6r2n1dcnjg"},{"post_id":"cko0u126e0000y26r9x4s5a3h","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0uce4v000drm6rhe4u3j54"},{"post_id":"cko0u126q0004y26rhwaw5mkh","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0uchpa000frm6r4d1lc9nc"},{"post_id":"cko0u126y0008y26r0x8pf7xw","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0uckfy000hrm6rg0tjadhf"},{"post_id":"cko0u126n0001y26r7fptggbm","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0ucnfl000jrm6rcxf178ea"},{"post_id":"cko0u126p0003y26r9cg3h72g","category_id":"cko0ubc1t0000rm6rg5z24oip","_id":"cko0ucr86000lrm6rd0sdeifg"},{"post_id":"cko0u1270000ay26r1p80go36","category_id":"cko0uhcb7000qrm6r7f6b5zfw","_id":"cko0uhcb9000trm6r10xw0xxb"},{"post_id":"cko0u1271000by26rfpmyg2k5","category_id":"cko0uhcb7000qrm6r7f6b5zfw","_id":"cko0uhmrt000vrm6r8uqo058y"}],"PostTag":[{"post_id":"cknzv6w1m0001k96rg3qx2ppq","tag_id":"cknzv6w1s0005k96r3kof2eld","_id":"cknzv6w1w000bk96rbzz34gv0"},{"post_id":"cknzv6w1p0003k96r9yzq6wkz","tag_id":"cknzv6w1v000ak96r6i7cb5tq","_id":"cknzv6w1y000ik96r4hfq7kjj"},{"post_id":"cknzv6w1p0003k96r9yzq6wkz","tag_id":"cknzv6w1w000ek96rgsnnfqgd","_id":"cknzv6w1y000jk96r2mfv5wjq"},{"post_id":"cknzv6w1s0006k96rbptn0mat","tag_id":"cknzv6w1x000hk96rc1n69pst","_id":"cknzv6w20000pk96rb04j77lt"},{"post_id":"cknzv6w1s0006k96rbptn0mat","tag_id":"cknzv6w1y000mk96rdporapq3","_id":"cknzv6w20000rk96rgy393u5n"},{"post_id":"cknzv6w1t0007k96radz85m4b","tag_id":"cknzv6w20000ok96r5sylcamy","_id":"cknzv6w21000uk96r2lg2cew0"},{"post_id":"cknzv6w1t0007k96radz85m4b","tag_id":"cknzv6w20000sk96rcw35b98y","_id":"cknzv6w21000vk96r2gze9bwb"},{"post_id":"cknzv6w1u0008k96r93999udz","tag_id":"cknzv6w20000ok96r5sylcamy","_id":"cknzv6w22000xk96rbhra5qit"},{"post_id":"cknzv6w1u0008k96r93999udz","tag_id":"cknzv6w21000wk96r0vecawyx","_id":"cknzv6w22000yk96r3ech3bc4"},{"post_id":"cknzzafoq0006is6r4yqgew4n","tag_id":"cknzzb9qp0007is6r2joefyjn","_id":"cknzzb9qq0009is6rg9ckeqnp"},{"post_id":"cknzz6sd50000is6retamarf5","tag_id":"cknzze0yg000ais6r2y0bdd6s","_id":"cknzze0yk000bis6r2wzfbsm6"},{"post_id":"cko0u90va0000qd6r78a92gmp","tag_id":"cknzv6w1s0005k96r3kof2eld","_id":"cko0u90vk0006qd6ramjd20p0"},{"post_id":"cko0u90va0000qd6r78a92gmp","tag_id":"cko0u90vc0002qd6rh3e39v6d","_id":"cko0u90vl0007qd6r3j9ranch"},{"post_id":"cko0u90vb0001qd6racbyegrg","tag_id":"cknzv6w1s0005k96r3kof2eld","_id":"cko0u90vl0009qd6r1kzn7cco"},{"post_id":"cko0u90vb0001qd6racbyegrg","tag_id":"cko0u90vc0002qd6rh3e39v6d","_id":"cko0u90vl000bqd6r88k90lrd"},{"post_id":"cko0u126x0007y26rd2ureszb","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0ubc1y0002rm6r61xg9atp"},{"post_id":"cko0u126r0005y26rgqlb1smt","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0ubhr30004rm6r3i26c324"},{"post_id":"cko0u126o0002y26rhjen63xs","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0ubmdc0006rm6r1oa0c09i"},{"post_id":"cko0u126z0009y26rczb7c1qt","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0ubpb10008rm6rgsvi06hu"},{"post_id":"cko0u126v0006y26rh569bcq9","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0ubsqd000arm6r9rcz3mlq"},{"post_id":"cko0u126e0000y26r9x4s5a3h","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0uce4v000crm6r0sjk96b3"},{"post_id":"cko0u126q0004y26rhwaw5mkh","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0uchpa000erm6re9tz3yfq"},{"post_id":"cko0u126y0008y26r0x8pf7xw","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0uckfy000grm6rhrkc9wgr"},{"post_id":"cko0u126n0001y26r7fptggbm","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0ucnfl000irm6r5j0k5bgh"},{"post_id":"cko0u126p0003y26r9cg3h72g","tag_id":"cko0ubc1x0001rm6r7g6i2c0z","_id":"cko0ucr86000krm6r3l1v77ab"},{"post_id":"cko0u1270000ay26r1p80go36","tag_id":"cko0uhcb8000rrm6rc2sp811e","_id":"cko0uhcb9000srm6r1b061ita"},{"post_id":"cko0u1271000by26rfpmyg2k5","tag_id":"cko0uhcb8000rrm6rc2sp811e","_id":"cko0uhmrt000urm6raggfgwgh"}],"Tag":[{"name":"CSS","_id":"cknzv6w1s0005k96r3kof2eld"},{"name":"JSONP","_id":"cknzv6w1v000ak96r6i7cb5tq"},{"name":"同源策略","_id":"cknzv6w1w000ek96rgsnnfqgd"},{"name":"Performance","_id":"cknzv6w1x000hk96rc1n69pst"},{"name":"性能","_id":"cknzv6w1y000mk96rdporapq3"},{"name":"server","_id":"cknzv6w20000ok96r5sylcamy"},{"name":"nginx","_id":"cknzv6w20000sk96rcw35b98y"},{"name":"node","_id":"cknzv6w21000wk96r0vecawyx"},{"name":"JavaScript","_id":"cknzz7qyx0004is6r2b1w8kmp"},{"name":"JavaScript 原理","_id":"cknzzb9qp0007is6r2joefyjn"},{"name":"JavaScript 基础","_id":"cknzze0yg000ais6r2y0bdd6s"},{"name":"Sass","_id":"cko0u90vc0002qd6rh3e39v6d"},{"name":"D3.js","_id":"cko0ubc1x0001rm6r7g6i2c0z"},{"name":"SVG","_id":"cko0uhcb8000rrm6rc2sp811e"}]}}